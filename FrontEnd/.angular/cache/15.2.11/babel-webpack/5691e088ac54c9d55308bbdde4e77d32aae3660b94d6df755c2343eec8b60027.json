{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Services/Questionnaire\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction AjouterQuestionnaireComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const niveau_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", niveau_r2.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(niveau_r2.label);\n  }\n}\nfunction AjouterQuestionnaireComponent_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r3.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r3.label);\n  }\n}\nexport class AjouterQuestionnaireComponent {\n  constructor(formBuilder, questionnaireService, snackBar, router) {\n    this.formBuilder = formBuilder;\n    this.questionnaireService = questionnaireService;\n    this.snackBar = snackBar;\n    this.router = router;\n    this.niveaux = [{\n      value: 0,\n      label: 'Débutant'\n    }, {\n      value: 1,\n      label: 'Intermédiaire'\n    }, {\n      value: 2,\n      label: 'Expert'\n    }];\n    this.types = [{\n      value: 'java',\n      label: 'Java'\n    }, {\n      value: 'c#',\n      label: 'C#'\n    }, {\n      value: 'sql',\n      label: 'SQL'\n    }, {\n      value: 'html',\n      label: 'HTML'\n    }];\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.questionnaireForm = this.formBuilder.group({\n      enonce: ['', Validators.required],\n      reponseAttendue: ['', Validators.required],\n      niveau: ['', Validators.required],\n      type: ['csharp', Validators.required],\n      point: [0]\n    });\n  }\n  onSubmit() {\n    if (this.questionnaireForm.invalid) {\n      this.snackBar.open('Formulaire invalide', 'Fermer', {\n        duration: 3000\n      });\n      return;\n    }\n    const questionnaire = {\n      questionnaireId: 0,\n      enonce: this.questionnaireForm.value.enonce,\n      reponseAttendue: this.questionnaireForm.value.reponseAttendue,\n      niveauId: this.questionnaireForm.value.niveau,\n      type: this.questionnaireForm.value.type\n      // add other fields if necessary\n    };\n\n    this.questionnaireService.createQuestionnaire(questionnaire).subscribe(() => {\n      this.snackBar.open('Questionnaire ajouté avec succès', 'Fermer', {\n        duration: 3000\n      });\n      this.router.navigate(['/tableauBord/listeQuestionnaire']); // Rediriger vers la liste des questionnaires après l'ajout\n    }, error => {\n      console.error(error);\n      this.snackBar.open('Une erreur est survenue lors de l\\'ajout du questionnaire', 'Fermer', {\n        duration: 3000\n      });\n    });\n  }\n  static #_ = this.ɵfac = function AjouterQuestionnaireComponent_Factory(t) {\n    return new (t || AjouterQuestionnaireComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.QuestionnaireService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AjouterQuestionnaireComponent,\n    selectors: [[\"app-ajouter-questionnaire\"]],\n    decls: 28,\n    vars: 3,\n    consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"enonce\"], [\"type\", \"text\", \"id\", \"enonce\", \"formControlName\", \"enonce\", 1, \"form-control\"], [\"for\", \"reponseAttendue\"], [\"type\", \"text\", \"id\", \"reponseAttendue\", \"formControlName\", \"reponseAttendue\", 1, \"form-control\"], [\"for\", \"niveau\"], [\"id\", \"niveau\", \"formControlName\", \"niveau\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"point\"], [\"type\", \"number\", \"id\", \"point\", \"formControlName\", \"point\", 1, \"form-control\"], [\"for\", \"type\"], [\"id\", \"type\", \"formControlName\", \"type\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"value\"]],\n    template: function AjouterQuestionnaireComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Ajouter Questionnaire\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AjouterQuestionnaireComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Enonc\\u00E9 :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"R\\u00E9ponse Attendue :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Niveau :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"select\", 8);\n        i0.ɵɵtemplate(16, AjouterQuestionnaireComponent_option_16_Template, 2, 2, \"option\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 2)(18, \"label\", 10);\n        i0.ɵɵtext(19, \"Points :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 2)(22, \"label\", 12);\n        i0.ɵɵtext(23, \"Type :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"select\", 13);\n        i0.ɵɵtemplate(25, AjouterQuestionnaireComponent_option_25_Template, 2, 2, \"option\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"button\", 14);\n        i0.ɵɵtext(27, \"Ajouter\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.questionnaireForm);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.niveaux);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.types);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i5.NgForOf, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".container[_ngcontent-%COMP%] {\\r\\n    max-width: 60%;\\r\\n    margin: 20px auto;\\r\\n    padding: 20px;\\r\\n    background-color: #fff;\\r\\n    border-radius: 10px;\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\\r\\n    display: flex; \\r\\n    justify-content: center; \\r\\n    align-items: center; \\r\\n    flex-direction: column; \\r\\n}\\r\\n\\r\\n.form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%] {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\ninput[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"number\\\"][_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n    padding: 10px 20px;\\r\\n    cursor: pointer;\\r\\n    border: none;\\r\\n    background-color: #2c216e; \\r\\n    color: white;\\r\\n    border-radius: 5px; \\r\\n}\\r\\n\\r\\n.btnAjouter[_ngcontent-%COMP%] {\\r\\n    margin-top: 20px; \\r\\n    width: 100%; \\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvUXVlc3Rpb25uYWlyZS9ham91dGVyLXF1ZXN0aW9ubmFpcmUvYWpvdXRlci1xdWVzdGlvbm5haXJlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHVDQUF1QztJQUN2QyxhQUFhLEVBQUUscUJBQXFCO0lBQ3BDLHVCQUF1QixFQUFFLDRCQUE0QjtJQUNyRCxtQkFBbUIsRUFBRSwwQkFBMEI7SUFDL0Msc0JBQXNCLEVBQUUsb0NBQW9DO0FBQ2hFOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBOzs7O0lBSUksV0FBVztJQUNYLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixZQUFZO0lBQ1oseUJBQXlCLEVBQUUsa0JBQWtCO0lBQzdDLFlBQVk7SUFDWixrQkFBa0IsRUFBRSxvQ0FBb0M7QUFDNUQ7O0FBRUE7SUFDSSxnQkFBZ0IsRUFBRSwwQ0FBMEM7SUFDNUQsV0FBVyxFQUFFLHFCQUFxQjtBQUN0QyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA2MCU7XHJcbiAgICBtYXJnaW46IDIwcHggYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICAgIGRpc3BsYXk6IGZsZXg7IC8qIFV0aWxpc2VyIEZsZXhib3ggKi9cclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyAvKiBDZW50cmVyIGhvcml6b250YWxlbWVudCAqL1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgLyogQ2VudHJlciB2ZXJ0aWNhbGVtZW50ICovXHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyAvKiBBbGlnbmVyIGxlcyDDg8KpbMODwqltZW50cyBlbiBjb2xvbm5lICovXHJcbn1cclxuXHJcbi5mb3JtLWdyb3VwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwidGV4dFwiXSxcclxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxyXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxyXG5zZWxlY3Qge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyYzIxNmU7IC8qIENvdWxldXIgYmxldWUgKi9cclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDsgLyogQ29pbnMgYXJyb25kaXMgcG91ciBsZXMgYm91dG9ucyAqL1xyXG59XHJcblxyXG4uYnRuQWpvdXRlciB7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4OyAvKiBBam91dCBkJ3VuZSBtYXJnZSBhdS1kZXNzdXMgZHUgYm91dG9uICovXHJcbiAgICB3aWR0aDogMTAwJTsgLyogTGFyZ2V1ciBtYXhpbWFsZSAqL1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","AjouterQuestionnaireComponent","constructor","formBuilder","questionnaireService","snackBar","router","value","label","ngOnInit","initForm","questionnaireForm","group","enonce","required","reponseAttendue","niveau","type","point","onSubmit","invalid","open","duration","questionnaire","questionnaireId","niveauId","createQuestionnaire","subscribe","navigate","error","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Questionnaire\\ajouter-questionnaire\\ajouter-questionnaire.component.ts","C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Questionnaire\\ajouter-questionnaire\\ajouter-questionnaire.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { QuestionnaireService } from 'src/app/Services/Questionnaire';\nimport { Questionnaire } from 'src/app/models/Questionnaire';\n\n@Component({\n  selector: 'app-ajouter-questionnaire',\n  templateUrl: './ajouter-questionnaire.component.html',\n  styleUrls: ['./ajouter-questionnaire.component.css']\n})\nexport class AjouterQuestionnaireComponent  implements OnInit {\n  questionnaireForm!: FormGroup;\n  niveaux = [\n    { value: 0, label: 'Débutant' },\n    { value: 1, label: 'Intermédiaire' },\n    { value: 2, label: 'Expert' }\n  ];\n  types = [\n    { value: 'java', label: 'Java' },\n    { value: 'c#', label: 'C#' },\n    { value: 'sql', label: 'SQL' },\n    { value: 'html', label: 'HTML' }\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private questionnaireService: QuestionnaireService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.questionnaireForm = this.formBuilder.group({\n      enonce: ['', Validators.required],\n      reponseAttendue: ['', Validators.required],\n      niveau: ['', Validators.required],\n      type: ['csharp', Validators.required],\n      point: [0]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.questionnaireForm.invalid) {\n      this.snackBar.open('Formulaire invalide', 'Fermer', { duration: 3000 });\n      return;\n    }\n\n    const questionnaire: Questionnaire = {\n      questionnaireId: 0,  // assuming a new questionnaire\n      enonce: this.questionnaireForm.value.enonce,\n      reponseAttendue: this.questionnaireForm.value.reponseAttendue,\n      niveauId: this.questionnaireForm.value.niveau,\n      type: this.questionnaireForm.value.type,\n      // add other fields if necessary\n    };\n\n    this.questionnaireService.createQuestionnaire(questionnaire).subscribe(\n      () => {\n        this.snackBar.open('Questionnaire ajouté avec succès', 'Fermer', { duration: 3000 });\n        this.router.navigate(['/tableauBord/listeQuestionnaire']); // Rediriger vers la liste des questionnaires après l'ajout\n      },\n      (error) => {\n        console.error(error);\n        this.snackBar.open('Une erreur est survenue lors de l\\'ajout du questionnaire', 'Fermer', { duration: 3000 });\n      }\n    );\n  }\n}","<div class=\"container\">\n    <h1>Ajouter Questionnaire</h1>\n    <form [formGroup]=\"questionnaireForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"enonce\">Enoncé :</label>\n        <input type=\"text\" id=\"enonce\" class=\"form-control\" formControlName=\"enonce\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"reponseAttendue\">Réponse Attendue :</label>\n        <input type=\"text\" id=\"reponseAttendue\" class=\"form-control\" formControlName=\"reponseAttendue\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"niveau\">Niveau :</label>\n        <select id=\"niveau\" class=\"form-control\" formControlName=\"niveau\">\n          <option *ngFor=\"let niveau of niveaux\" [value]=\"niveau.value\">{{ niveau.label }}</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"point\">Points :</label>\n        <input type=\"number\" id=\"point\" class=\"form-control\" formControlName=\"point\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"type\">Type :</label>\n        <select id=\"type\" class=\"form-control\" formControlName=\"type\">\n          <option *ngFor=\"let type of types\" [value]=\"type.value\">{{ type.label }}</option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n    </form>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}