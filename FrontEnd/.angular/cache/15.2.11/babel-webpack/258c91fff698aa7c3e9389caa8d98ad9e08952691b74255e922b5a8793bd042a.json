{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Services/AdminService\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/router\";\nexport class ModifierAdminComponent {\n  constructor(formBuilder, adminService, snackBar, router, route) {\n    this.formBuilder = formBuilder;\n    this.adminService = adminService;\n    this.snackBar = snackBar;\n    this.router = router;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.initForm();\n    this.route.params.subscribe(params => {\n      this.adminId = +params['id'];\n      this.getAdminById(this.adminId);\n    });\n  }\n  initForm() {\n    this.adminForm = this.formBuilder.group({\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.maxLength(8)]]\n    });\n  }\n  getAdminById(id) {\n    this.adminService.getAdminById(this.adminId).subscribe(admin => {\n      this.adminForm.patchValue({\n        nom: admin.nom,\n        prenom: admin.prenom,\n        email: admin.email,\n        phoneNumber: admin.phoneNumber\n        // Mettez à jour avec d'autres champs d'administration si nécessaire\n      });\n    });\n  }\n\n  onSubmit() {\n    if (this.adminForm.invalid) {\n      return;\n    }\n    const admin = this.adminForm.getRawValue();\n    console.log(admin);\n    console.log(this.adminId);\n    this.adminService.updateAdmin(this.adminId, admin).subscribe(() => {\n      this.snackBar.open('Administrateur modifié avec succès', 'Fermer', {\n        duration: 3000\n      });\n      console.log(admin);\n      this.router.navigate(['/tableauBord/listeAdmin']);\n    });\n  }\n  static #_ = this.ɵfac = function ModifierAdminComponent_Factory(t) {\n    return new (t || ModifierAdminComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AdminService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierAdminComponent,\n    selectors: [[\"app-modifier-admin\"]],\n    decls: 22,\n    vars: 1,\n    consts: [[1, \"container\"], [3, \"formGroup\", \"submit\"], [1, \"form-group\"], [\"for\", \"nom\"], [\"type\", \"text\", \"id\", \"nom\", \"formControlName\", \"nom\", 1, \"form-control\"], [\"for\", \"prenom\"], [\"type\", \"text\", \"id\", \"prenom\", \"formControlName\", \"prenom\", 1, \"form-control\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"phoneNumber\"], [\"type\", \"text\", \"id\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function ModifierAdminComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Modifier Administrateur\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"submit\", function ModifierAdminComponent_Template_form_submit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Nom:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Pr\\u00E9nom:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Adresse Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n        i0.ɵɵtext(18, \"Num\\u00E9ro de t\\u00E9l\\u00E9phone:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵtext(21, \"Enregistrer\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.adminForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".container[_ngcontent-%COMP%] {\\r\\n    max-width: 60%;\\r\\n    margin: 20px auto;\\r\\n    padding: 20px;\\r\\n    background-color: #fff;\\r\\n    border-radius: 10px;\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\\r\\n    display: flex; \\r\\n    justify-content: center; \\r\\n    align-items: center; \\r\\n    flex-direction: column; \\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  label[_ngcontent-%COMP%] {\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  \\r\\n  input[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"email\\\"][_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%] {\\r\\n    padding: 10px 20px;\\r\\n    cursor: pointer;\\r\\n    border: none;\\r\\n    background-color: #2c216e; \\r\\n    color: white;\\r\\n    border-radius: 5px; \\r\\n  }\\r\\n  \\r\\n  .btnModif[_ngcontent-%COMP%] {\\r\\n    margin-top: 20px; \\r\\n    width: 100%; \\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQWRtaW4vbW9kaWZpZXItYWRtaW4vbW9kaWZpZXItYWRtaW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsdUNBQXVDO0lBQ3ZDLGFBQWEsRUFBRSxxQkFBcUI7SUFDcEMsdUJBQXVCLEVBQUUsNEJBQTRCO0lBQ3JELG1CQUFtQixFQUFFLDBCQUEwQjtJQUMvQyxzQkFBc0IsRUFBRSxvQ0FBb0M7RUFDOUQ7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUE7O0lBRUUsV0FBVztJQUNYLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixZQUFZO0lBQ1oseUJBQXlCLEVBQUUsa0JBQWtCO0lBQzdDLFlBQVk7SUFDWixrQkFBa0IsRUFBRSxvQ0FBb0M7RUFDMUQ7O0VBRUE7SUFDRSxnQkFBZ0IsRUFBRSwwQ0FBMEM7SUFDNUQsV0FBVyxFQUFFLHFCQUFxQjtFQUNwQyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA2MCU7XHJcbiAgICBtYXJnaW46IDIwcHggYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICAgIGRpc3BsYXk6IGZsZXg7IC8qIFV0aWxpc2VyIEZsZXhib3ggKi9cclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyAvKiBDZW50cmVyIGhvcml6b250YWxlbWVudCAqL1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgLyogQ2VudHJlciB2ZXJ0aWNhbGVtZW50ICovXHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyAvKiBBbGlnbmVyIGxlcyDDg8KpbMODwqltZW50cyBlbiBjb2xvbm5lICovXHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWdyb3VwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGxhYmVsIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxuICBcclxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcclxuICBpbnB1dFt0eXBlPVwiZW1haWxcIl0ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uIHtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyYzIxNmU7IC8qIENvdWxldXIgYmxldWUgKi9cclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDsgLyogQ29pbnMgYXJyb25kaXMgcG91ciBsZXMgYm91dG9ucyAqL1xyXG4gIH1cclxuICBcclxuICAuYnRuTW9kaWYge1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDsgLyogQWpvdXQgZCd1bmUgbWFyZ2UgYXUtZGVzc3VzIGR1IGJvdXRvbiAqL1xyXG4gICAgd2lkdGg6IDEwMCU7IC8qIExhcmdldXIgbWF4aW1hbGUgKi9cclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","ModifierAdminComponent","constructor","formBuilder","adminService","snackBar","router","route","ngOnInit","initForm","params","subscribe","adminId","getAdminById","adminForm","group","nom","required","prenom","email","phoneNumber","maxLength","id","admin","patchValue","onSubmit","invalid","getRawValue","console","log","updateAdmin","open","duration","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Admin\\modifier-admin\\modifier-admin.component.ts","C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Admin\\modifier-admin\\modifier-admin.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdminService } from 'src/app/Services/AdminService';\nimport { admin } from 'src/app/models/admin';\n@Component({\n  selector: 'app-modifier-admin',\n  templateUrl: './modifier-admin.component.html',\n  styleUrls: ['./modifier-admin.component.css']\n})\nexport class ModifierAdminComponent implements OnInit {\n  adminId!: number;\n  admin!: admin;\n  adminForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private snackBar: MatSnackBar,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.route.params.subscribe(params => {\n      this.adminId = +params['id'];\n      this.getAdminById(this.adminId);\n    });\n  }\n\n  initForm(): void {\n    this.adminForm = this.formBuilder.group({\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.maxLength(8)]],\n\n    });\n  }\n\n  getAdminById(id: number): void {\n    this.adminService.getAdminById(this.adminId)\n      .subscribe((admin: any) => {\n        this.adminForm.patchValue({\n          nom: admin.nom,\n          prenom: admin.prenom,\n          email: admin.email,\n          phoneNumber: admin.phoneNumber\n\n          // Mettez à jour avec d'autres champs d'administration si nécessaire\n        });\n      });\n  }\n\n  onSubmit(): void {\n    if (this.adminForm.invalid) {\n      return;\n    }\n    const admin = this.adminForm.getRawValue() as admin;\n    console.log(admin);\n  console.log(this.adminId);\n    this.adminService.updateAdmin(this.adminId, admin)\n      .subscribe(() => {\n        this.snackBar.open('Administrateur modifié avec succès', 'Fermer', {\n          duration: 3000\n        });\n        console.log(admin);\n        this.router.navigate(['/tableauBord/listeAdmin']);\n      });\n  }\n}","<div class=\"container\">\n  <h1>Modifier Administrateur</h1>\n  <form [formGroup]=\"adminForm\" (submit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"nom\">Nom:</label>\n      <input type=\"text\" class=\"form-control\" id=\"nom\" formControlName=\"nom\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"prenom\">Prénom:</label>\n      <input type=\"text\" class=\"form-control\" id=\"prenom\" formControlName=\"prenom\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">Adresse Email:</label>\n      <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"phoneNumber\">Numéro de téléphone:</label>\n      <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" formControlName=\"phoneNumber\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Enregistrer</button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}