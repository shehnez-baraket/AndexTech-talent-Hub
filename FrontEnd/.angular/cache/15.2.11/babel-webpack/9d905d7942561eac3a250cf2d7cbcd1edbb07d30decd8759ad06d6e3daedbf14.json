{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport 'codemirror/mode/clike/clike.js'; // Import C# mode\nimport 'codemirror/addon/hint/show-hint';\nimport 'codemirror/addon/hint/javascript-hint';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../Services/TrackingService\";\nimport * as i4 from \"../Services/SharedCodeService\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ctrl/ngx-codemirror\";\nconst _c0 = [\"codeMirror\"];\nexport class IdecomponentComponent {\n  constructor(router, http, trackingService, sharedCodeService // Inject the shared service\n  ) {\n    this.router = router;\n    this.http = http;\n    this.trackingService = trackingService;\n    this.sharedCodeService = sharedCodeService;\n    this.code = 'using System;\\n  public class Program\\n {\\npublic static void Main(string[] args) {int num1 = 5;\\n int num2 = 10;\\n int sum = AddNumbers(num1, num2);\\nConsole.WriteLine(\"La somme de {0} et {1} est : {2}\", num1, num2, sum);\\n}\\n \\n public static int AddNumbers(int a, int b)\\n {\\nreturn a + b;\\n}\\n}\\n';\n    this.editorOptions = {\n      mode: {\n        name: 'text/x-csharp'\n      },\n      lineNumbers: true,\n      gutters: ['CodeMirror-lint-markers'],\n      styleActiveLine: true,\n      theme: 'monokai',\n      extraKeys: {\n        'Ctrl-Space': 'autocomplete'\n      },\n      indentUnit: 2,\n      tabSize: 4,\n      autoFocus: true,\n      autoClearEmptyLines: true,\n      lineWrapping: true,\n      autoCloseBrackets: true,\n      matchBrackets: true,\n      showCursorWhenSelecting: true\n    };\n    this.trackingData = [];\n    this.copypasteEvents = [];\n    this.pasteEvents = [];\n    this.codeSubmitted = new EventEmitter();\n  }\n  ngOnInit() {\n    this.visibilityChangeHandler = () => {\n      if (document.visibilityState === 'visible') {\n        console.log('L\\'onglet est actif');\n        this.startTime = performance.now(); // Enregistrer le temps lorsque l'onglet devient actif\n        this.trackingData.push({\n          action: 'Tab active',\n          timestamp: new Date()\n        });\n        const trackingEvent = {\n          action: 'Tab active',\n          timestamp: new Date(),\n          candidatId: this.candidateId,\n          quizId: this.quizId\n        };\n        this.trackingService.addTrackingEvent(trackingEvent).subscribe(response => {\n          console.log('Événement de suivi enregistré avec succès:', response);\n        }, error => {\n          console.error('Erreur lors de l\\'enregistrement de l\\'événement de suivi:', error);\n        });\n      } else {\n        console.log('L\\'onglet est inactif');\n        this.endTime = performance.now(); // Enregistrer le temps lorsque l'onglet devient inactif\n        this.trackingData.push({\n          action: 'Tab inactive',\n          timestamp: new Date()\n        });\n        const trackingEvent = {\n          action: 'Tab inactive',\n          timestamp: new Date(),\n          candidatId: this.candidateId,\n          quizId: this.quizId\n        };\n        this.trackingService.addTrackingEvent(trackingEvent).subscribe(response => {\n          console.log('Événement de suivi enregistré avec succès:', response);\n        }, error => {\n          console.error('Erreur lors de l\\'enregistrement de l\\'événement de suivi:', error);\n        });\n        // Calculer la durée entre l'activation et l'inactivation de l'onglet\n        const duration = this.endTime - this.startTime;\n        console.log('Durée d\\'inactivité de l\\'onglet (en millisecondes) :', duration);\n        // Vous pouvez ensuite stocker cette durée dans votre tableau de suivi ou l'utiliser comme vous le souhaitez\n        this.trackingData.push({\n          action: 'Tab inactive duration',\n          duration: duration,\n          timestamp: new Date()\n        });\n      }\n      console.log(this.trackingData);\n    };\n    document.addEventListener('visibilitychange', this.visibilityChangeHandler);\n    const codeEditor = document.querySelector('.code-editor');\n    if (codeEditor) {\n      codeEditor.addEventListener('copy', event => {\n        const copiedText = window.getSelection()?.toString(); // Récupérer le texte sélectionné\n        console.log('Action de copier détectée');\n        this.copypasteEvents.push({\n          action: 'Action de copier',\n          content: copiedText,\n          timestamp: new Date()\n        });\n        const trackingEvent = {\n          action: 'Action de copier',\n          content: copiedText,\n          timestamp: new Date(),\n          candidatId: this.candidateId,\n          quizId: this.quizId\n        };\n        this.trackingService.addCopyPasteEvent(trackingEvent).subscribe(response => {\n          console.log('Événement de suivi enregistré avec succès:', response);\n        }, error => {\n          console.error('Erreur lors de l\\'enregistrement de l\\'événement de suivi:', error);\n        });\n        console.log(this.copypasteEvents);\n      });\n      codeEditor.addEventListener('paste', event => {\n        // Récupérer le texte collé\n        const pastedText = event.clipboardData?.getData('text');\n        console.log('Action de coller détectée');\n        this.copypasteEvents.push({\n          action: 'Action de coller',\n          content: pastedText,\n          timestamp: new Date()\n        });\n        const trackingEvent = {\n          action: 'Action de coller',\n          content: pastedText,\n          timestamp: new Date(),\n          candidatId: this.candidateId,\n          quizId: this.quizId\n        };\n        this.trackingService.addCopyPasteEvent(trackingEvent).subscribe(response => {\n          console.log('Événement de suivi enregistré avec succès:', response);\n        }, error => {\n          console.error('Erreur lors de l\\'enregistrement de l\\'événement de suivi:', error);\n        });\n        console.log(this.copypasteEvents);\n      });\n    }\n    // Afficher les données de suivi dans la console\n    console.log('Données de suivi :', this.trackingData);\n    console.log('Événements de copie coller :', this.copypasteEvents);\n  }\n  ngOnDestroy() {\n    if (this.visibilityChangeHandler) {\n      document.removeEventListener('visibilitychange', this.visibilityChangeHandler);\n    }\n  }\n  onSubmit() {\n    this.codeSubmitted.emit(this.code);\n    const lastCode = this.codeMirror?.codeMirror?.getValue() || '';\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    this.http.post('http://localhost:5159/api/code', {\n      code: this.code\n    }, {\n      headers\n    }).subscribe(res => {\n      console.log('Résultat de l\\'exécution du code :', res);\n      const resultElement = document.querySelector('.result span');\n      if (resultElement) {\n        resultElement.textContent = res.ExecutionResult;\n      }\n      console.log(lastCode);\n      this.sharedCodeService.setCode(lastCode); // Set the code in the shared service\n    }, error => {\n      console.error('Erreur lors de l\\'exécution du code :', error);\n      const errorElement = document.querySelector('.result span');\n      if (errorElement) {\n        errorElement.textContent = error.message;\n      }\n    });\n  }\n  onEditorInit(editor) {\n    editor.on('change', () => {\n      this.code = editor.getValue();\n    });\n  }\n  onCodeChange(newCode) {\n    this.code = newCode;\n  }\n  onNext() {\n    this.router.navigate(['/qcm']);\n  }\n  static #_ = this.ɵfac = function IdecomponentComponent_Factory(t) {\n    return new (t || IdecomponentComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.TrackingService), i0.ɵɵdirectiveInject(i4.SharedCodeService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IdecomponentComponent,\n    selectors: [[\"app-idecomponent\"]],\n    viewQuery: function IdecomponentComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.codeMirror = _t.first);\n      }\n    },\n    inputs: {\n      candidateId: \"candidateId\",\n      questionnaire: \"questionnaire\",\n      quizId: \"quizId\"\n    },\n    outputs: {\n      codeSubmitted: \"codeSubmitted\"\n    },\n    decls: 19,\n    vars: 5,\n    consts: [[1, \"container\"], [1, \"content\"], [1, \"problem-statement\"], [1, \"result\"], [1, \"code-editor\", \"code-editor-container\"], [3, \"ngModel\", \"options\", \"ngModelChange\", \"codemirrorInstance\"], [\"codeMirror\", \"\"], [1, \"actions\"], [1, \"execute-btn\", 3, \"click\"]],\n    template: function IdecomponentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"p\");\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"h5\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"span\");\n        i0.ɵɵtext(12, \"R\\u00E9sultat de l'ex\\u00E9cution ...\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 4)(14, \"ngx-codemirror\", 5, 6);\n        i0.ɵɵlistener(\"ngModelChange\", function IdecomponentComponent_Template_ngx_codemirror_ngModelChange_14_listener($event) {\n          return ctx.code = $event;\n        })(\"codemirrorInstance\", function IdecomponentComponent_Template_ngx_codemirror_codemirrorInstance_14_listener($event) {\n          return ctx.onEditorInit($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function IdecomponentComponent_Template_button_click_17_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(18, \"Ex\\u00E9cuter\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\\u00C9nonc\\u00E9 du programme : \", ctx.questionnaire.enonce, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.questionnaire.enonce, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.questionnaire.type);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.code)(\"options\", ctx.editorOptions);\n      }\n    },\n    dependencies: [i5.NgControlStatus, i5.NgModel, i6.CodemirrorComponent],\n    styles: [\"h1[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n  color: #1b2552; \\r\\n}\\r\\n\\r\\nbody[_ngcontent-%COMP%] {\\r\\n  background-color: #dddada; \\r\\n}\\r\\n\\r\\n.container[_ngcontent-%COMP%] {\\r\\n  max-width: 80%; \\r\\n  margin: 0 auto;\\r\\n  padding: 20px;\\r\\n  background-color: white; \\r\\n  border-radius: 10px; \\r\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); \\r\\n}\\r\\n\\r\\n.content[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.problem-statement[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n  margin-right: 20px;\\r\\n}\\r\\n\\r\\n.code-editor[_ngcontent-%COMP%] {\\r\\n  z-index: 1000;\\r\\n  flex: 1; \\r\\n  display: flex;\\r\\n  overflow: auto; \\r\\n}\\r\\n\\r\\n.actions[_ngcontent-%COMP%] {\\r\\n  margin-top: 20px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.submit-btn[_ngcontent-%COMP%], .delete-btn[_ngcontent-%COMP%], .execute-btn[_ngcontent-%COMP%], .next-btn[_ngcontent-%COMP%]{\\r\\n  padding: 10px 20px;\\r\\n  margin-right: 10px;\\r\\n  cursor: pointer;\\r\\n  border: none;\\r\\n  background-color: #2c216e;\\r\\n  color: white;\\r\\n  border-radius: 5px; \\r\\n}\\r\\n\\r\\n.result[_ngcontent-%COMP%] {\\r\\n  -webkit-text-size-adjust: 8px;\\r\\n          text-size-adjust: 8px;\\r\\n  height: 150px;\\r\\n  background-color: rgba(0, 0, 0, 0.877);\\r\\n  color: white;\\r\\n  padding: 20px;\\r\\n  border-radius: 0px;\\r\\n  margin-top: 50px;\\r\\n}\\r\\n.result[_ngcontent-%COMP%]   .p[_ngcontent-%COMP%]{\\r\\n  size: 8px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvSWRlY29tcG9uZW50L2lkZWNvbXBvbmVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWMsRUFBRSwyQkFBMkI7QUFDN0M7O0FBRUE7RUFDRSx5QkFBeUIsRUFBRSxvQkFBb0I7QUFDakQ7O0FBRUE7RUFDRSxjQUFjLEVBQUUseUNBQXlDO0VBQ3pELGNBQWM7RUFDZCxhQUFhO0VBQ2IsdUJBQXVCLEVBQUUsK0JBQStCO0VBQ3hELG1CQUFtQixFQUFFLG1CQUFtQjtFQUN4Qyx1Q0FBdUMsRUFBRSxpQkFBaUI7QUFDNUQ7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxPQUFPO0VBQ1Asa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLE9BQU87RUFDUCxhQUFhO0VBQ2IsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixrQkFBa0I7QUFDcEI7O0FBRUE7Ozs7RUFJRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixZQUFZO0VBQ1oseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixrQkFBa0IsRUFBRSxvQ0FBb0M7QUFDMUQ7O0FBRUE7RUFDRSw2QkFBcUI7VUFBckIscUJBQXFCO0VBQ3JCLGFBQWE7RUFDYixzQ0FBc0M7RUFDdEMsWUFBWTtFQUNaLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxTQUFTO0FBQ1giLCJzb3VyY2VzQ29udGVudCI6WyJoMSB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGNvbG9yOiAjMWIyNTUyOyAvKiBDb3VsZXVyIGRlIHRleHRlIGZvbmPDg8KpICovXHJcbn1cclxuXHJcbmJvZHkge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNkZGRhZGE7IC8qIEZvbmQgZ3JpcyBjbGFpciAqL1xyXG59XHJcblxyXG4uY29udGFpbmVyIHtcclxuICBtYXgtd2lkdGg6IDgwJTsgLyogVXRpbGlzZSA4MCUgZGUgbGEgbGFyZ2V1ciBkZSBsJ8ODwqljcmFuICovXHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgcGFkZGluZzogMjBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgLyogRm9uZCBibGFuYyBwb3VyIGxlIGNvbnRlbnUgKi9cclxuICBib3JkZXItcmFkaXVzOiAxMHB4OyAvKiBDb2lucyBhcnJvbmRpcyAqL1xyXG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4zKTsgLyogT21icmUgbMODwqlnw4PCqHJlICovXHJcbn1cclxuXHJcbi5jb250ZW50IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4ucHJvYmxlbS1zdGF0ZW1lbnQge1xyXG4gIGZsZXg6IDE7XHJcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG59XHJcblxyXG4uY29kZS1lZGl0b3Ige1xyXG4gIHotaW5kZXg6IDEwMDA7XHJcbiAgZmxleDogMTsgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBvdmVyZmxvdzogYXV0bzsgXHJcbn1cclxuXHJcbi5hY3Rpb25zIHtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnN1Ym1pdC1idG4sXHJcbi5kZWxldGUtYnRuLFxyXG4uZXhlY3V0ZS1idG4sIFxyXG4ubmV4dC1idG57XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTBweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMyYzIxNmU7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDsgLyogQ29pbnMgYXJyb25kaXMgcG91ciBsZXMgYm91dG9ucyAqL1xyXG59XHJcblxyXG4ucmVzdWx0IHtcclxuICB0ZXh0LXNpemUtYWRqdXN0OiA4cHg7XHJcbiAgaGVpZ2h0OiAxNTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODc3KTtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogMjBweDtcclxuICBib3JkZXItcmFkaXVzOiAwcHg7XHJcbiAgbWFyZ2luLXRvcDogNTBweDtcclxufVxyXG4ucmVzdWx0IC5we1xyXG4gIHNpemU6IDhweDtcclxufVxyXG5cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","HttpHeaders","IdecomponentComponent","constructor","router","http","trackingService","sharedCodeService","mode","name","lineNumbers","gutters","styleActiveLine","theme","extraKeys","indentUnit","tabSize","autoFocus","autoClearEmptyLines","lineWrapping","autoCloseBrackets","matchBrackets","showCursorWhenSelecting","ngOnInit","visibilityChangeHandler","document","visibilityState","console","log","startTime","performance","now","trackingData","push","action","timestamp","Date","trackingEvent","candidatId","candidateId","quizId","addTrackingEvent","subscribe","response","error","endTime","duration","addEventListener","codeEditor","querySelector","event","copiedText","window","getSelection","toString","copypasteEvents","content","addCopyPasteEvent","pastedText","clipboardData","getData","ngOnDestroy","removeEventListener","onSubmit","codeSubmitted","emit","code","lastCode","codeMirror","getValue","headers","set","post","res","resultElement","textContent","ExecutionResult","setCode","errorElement","message","onEditorInit","editor","on","onCodeChange","newCode","onNext","navigate","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Idecomponent\\idecomponent.component.ts","C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Idecomponent\\idecomponent.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, ViewChild, Input, EventEmitter, Output } from '@angular/core';\nimport { CodemirrorComponent } from '@ctrl/ngx-codemirror';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport 'codemirror/mode/clike/clike.js'; // Import C# mode\nimport 'codemirror/addon/hint/show-hint';\nimport 'codemirror/addon/hint/javascript-hint';\nimport { Quiz } from '../models/Quiz';\nimport { Questionnaire } from '../models/Questionnaire';\nimport { TrackingService } from '../Services/TrackingService';\nimport { SharedCodeService } from '../Services/SharedCodeService';\nimport { last } from 'rxjs';\n\n@Component({\n  selector: 'app-idecomponent',\n  templateUrl: './idecomponent.component.html',\n  styleUrls: ['./idecomponent.component.css']\n})\n\nexport class IdecomponentComponent implements OnInit, OnDestroy {\n  @Input() candidateId!: number ;\n  @Input() questionnaire!: Questionnaire;\n  @Input () quizId! :number;\n  @ViewChild('codeMirror') codeMirror: CodemirrorComponent | undefined;\n  public code = 'using System;\\n  public class Program\\n {\\npublic static void Main(string[] args) {int num1 = 5;\\n int num2 = 10;\\n int sum = AddNumbers(num1, num2);\\nConsole.WriteLine(\"La somme de {0} et {1} est : {2}\", num1, num2, sum);\\n}\\n \\n public static int AddNumbers(int a, int b)\\n {\\nreturn a + b;\\n}\\n}\\n';\n  editorOptions = {\n    mode: { name: 'text/x-csharp' }, // Set mode to C#\n    lineNumbers: true,\n    gutters: ['CodeMirror-lint-markers'],\n    styleActiveLine: true,\n    theme: 'monokai',\n    extraKeys: { 'Ctrl-Space': 'autocomplete' },\n    indentUnit: 2,\n    tabSize: 4,\n    autoFocus: true,\n    autoClearEmptyLines: true,\n    lineWrapping: true,\n    autoCloseBrackets: true,\n    matchBrackets: true,\n    showCursorWhenSelecting: true,\n  };\n\n  private trackingData: any[] = [];\n  private copypasteEvents: any[] = [];\n  private pasteEvents: any[] = [];\n  private visibilityChangeHandler: (() => void) | undefined;\n  private startTime!: number;\n  private endTime: number | undefined;\n  @Output() codeSubmitted: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private router: Router, \n    private http: HttpClient,\n    private trackingService: TrackingService,    \n    private sharedCodeService: SharedCodeService  // Inject the shared service\n\n  ) {}\n\n  ngOnInit(): void {\n  \n    this.visibilityChangeHandler = () => {\n      if (document.visibilityState === 'visible') {\n        console.log('L\\'onglet est actif');\n        this.startTime = performance.now(); // Enregistrer le temps lorsque l'onglet devient actif\n        this.trackingData.push({ action: 'Tab active', timestamp: new Date() });\n        const trackingEvent = { action: 'Tab active', timestamp: new Date(), candidatId: this.candidateId, \n          quizId: this.quizId };\n        this.trackingService.addTrackingEvent(trackingEvent).subscribe(\n          (response) => {\n            console.log('Événement de suivi enregistré avec succès:', response);\n          },\n          (error) => {\n            console.error('Erreur lors de l\\'enregistrement de l\\'événement de suivi:', error);\n          }\n        );\n      } else {\n        console.log('L\\'onglet est inactif');\n        this.endTime = performance.now(); // Enregistrer le temps lorsque l'onglet devient inactif\n        this.trackingData.push({ action: 'Tab inactive', timestamp: new Date() });\n        const trackingEvent = { action: 'Tab inactive', timestamp: new Date(), candidatId: this.candidateId, quizId: this.quizId };\n        this.trackingService.addTrackingEvent(trackingEvent).subscribe(\n          (response) => {\n            console.log('Événement de suivi enregistré avec succès:', response);\n          },\n          (error) => {\n            console.error('Erreur lors de l\\'enregistrement de l\\'événement de suivi:', error);\n          }\n        );\n        // Calculer la durée entre l'activation et l'inactivation de l'onglet\n        const duration = this.endTime - this.startTime;\n        console.log('Durée d\\'inactivité de l\\'onglet (en millisecondes) :', duration);\n\n        // Vous pouvez ensuite stocker cette durée dans votre tableau de suivi ou l'utiliser comme vous le souhaitez\n        this.trackingData.push({ action: 'Tab inactive duration', duration: duration, timestamp: new Date() });\n      }\n      console.log(this.trackingData);\n    };\n    document.addEventListener('visibilitychange', this.visibilityChangeHandler);\n    \n    const codeEditor = document.querySelector('.code-editor');\n\n    if (codeEditor) {\n      codeEditor.addEventListener('copy', (event: Event) => {\n        const copiedText = window.getSelection()?.toString(); // Récupérer le texte sélectionné\n        console.log('Action de copier détectée');\n        this.copypasteEvents.push({ action: 'Action de copier', content: copiedText, timestamp: new Date() });\n\n        const trackingEvent = { action: 'Action de copier', content : copiedText, timestamp: new Date(), \n          candidatId: this.candidateId, quizId: this.quizId };\n        this.trackingService.addCopyPasteEvent(trackingEvent).subscribe(\n          (response) => {\n            console.log('Événement de suivi enregistré avec succès:', response);\n          },\n          (error) => {\n            console.error('Erreur lors de l\\'enregistrement de l\\'événement de suivi:', error);\n          }\n        );\n        console.log(this.copypasteEvents);\n      });\n\n      codeEditor.addEventListener('paste', (event: Event) => {\n        // Récupérer le texte collé\n        const pastedText = (event as ClipboardEvent).clipboardData?.getData('text');\n        console.log('Action de coller détectée');\n        this.copypasteEvents.push({ action: 'Action de coller', content: pastedText, timestamp: new Date() });\n        const trackingEvent = { action: 'Action de coller', content : pastedText, timestamp: new Date(),\n           candidatId: this.candidateId,\n          quizId:this.quizId };\n        this.trackingService.addCopyPasteEvent(trackingEvent).subscribe(\n          (response) => {\n            console.log('Événement de suivi enregistré avec succès:', response);\n          },\n          (error) => {\n            console.error('Erreur lors de l\\'enregistrement de l\\'événement de suivi:', error);\n          }\n        );\n        console.log(this.copypasteEvents);\n      });\n    }\n\n    // Afficher les données de suivi dans la console\n    console.log('Données de suivi :', this.trackingData);\n    console.log('Événements de copie coller :', this.copypasteEvents);\n}\n\n\n\n  ngOnDestroy(): void {\n    if (this.visibilityChangeHandler) {\n      document.removeEventListener('visibilitychange', this.visibilityChangeHandler);\n    }\n  }\n\n  onSubmit() {\n    this.codeSubmitted.emit(this.code);\n    const lastCode = this.codeMirror?.codeMirror?.getValue() || '';\n\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    \n    this.http.post<any>('http://localhost:5159/api/code', { code: this.code }, { headers }).subscribe(\n      (res) => {\n        console.log('Résultat de l\\'exécution du code :', res);\n        const resultElement = document.querySelector('.result span');\n        if (resultElement) {\n          resultElement.textContent = res.ExecutionResult;\n        }\n        console.log(lastCode);\n        this.sharedCodeService.setCode(lastCode);  // Set the code in the shared service\n\n      },\n      (error: HttpErrorResponse) => {\n        console.error('Erreur lors de l\\'exécution du code :', error);\n        const errorElement = document.querySelector('.result span');\n        if (errorElement) {\n          errorElement.textContent = error.message;\n        }\n      }\n    );\n  }\n\n\n  onEditorInit(editor: any) {\n    editor.on('change', () => {\n      this.code = editor.getValue();\n    });\n  }\n\n  onCodeChange(newCode: string) {\n    this.code = newCode;\n  }\n\n  onNext() {\n    this.router.navigate(['/qcm']);\n  }\n}\n","<div class=\"container\">\n\n  <div class=\"content\">\n    <div class=\"problem-statement\">\n    \n      <h3>Énoncé du programme : {{ questionnaire.enonce}}</h3>\n      <p>\n        \n        <p> {{ questionnaire.enonce}}</p><h5>{{ questionnaire.type}}</h5>\n        <!--<h3>Instructions :</h3>\n        <ol>\n          <li>Le programme doit demander à l'utilisateur de saisir le premier entier.</li>\n          <li>Ensuite, le programme doit demander à l'utilisateur de saisir le deuxième entier.</li>\n          <li>Le programme doit calculer la somme des deux entiers saisis.</li>\n          <li>Enfin, le programme doit afficher la somme des deux entiers.</li>\n        </ol>\n       Champ pour afficher le résultat -->\n      <div class=\"result\">\n        <span>Résultat de l'exécution ...</span>\n      </div>\n    </div>\n    <div class=\"code-editor code-editor-container\" >\n      <ngx-codemirror\n      #codeMirror\n      [(ngModel)]=\"code\"\n\n      [options]=\"editorOptions\"\n      (codemirrorInstance)=\"onEditorInit($event)\"\n    ></ngx-codemirror>\n    \n    </div>\n  </div>\n  \n  <div class=\"actions\">\n    <button class=\"execute-btn\" (click)=\"onSubmit()\">Exécuter</button>\n    <!--<button class=\"next-btn\" (click)=\"onNext()\">Suivant</button>-->\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}