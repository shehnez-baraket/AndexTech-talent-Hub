{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"src/app/Services/FeedbackService\";\nimport * as i5 from \"src/app/Services/CandidatService\";\nexport class ModifierFeedbackComponent {\n  constructor(formBuilder, route, router, snackBar, feedbackService, candidatService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.feedbackService = feedbackService;\n    this.candidatService = candidatService;\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const idParam = params.get('id');\n      if (idParam) {\n        this.feedbackId = +idParam;\n        this.loadFeedback();\n      } else {\n        // Gérer le cas où l'ID est null\n        console.error('ID du feedback non trouvé dans les paramètres de l\\'URL');\n      }\n    });\n    this.feedbackForm = this.formBuilder.group({\n      avis: ['', Validators.required],\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required],\n      adresseEmail: ['', [Validators.required, Validators.email]] // Champ adresse email\n    });\n  }\n\n  loadFeedback() {\n    this.feedbackService.getFeedbackById(this.feedbackId).subscribe(feedback => {\n      this.feedbackForm.patchValue({\n        avis: feedback?.avis\n        // Patchez d'autres champs du feedback si nécessaire\n      });\n\n      this.candidatId = feedback.candidatId; // Récupérez l'ID du candidat\n      this.getCandidatDetails(this.candidatId);\n    });\n  }\n  getCandidatDetails(candidatId) {\n    this.candidatService.getCandidatById(candidatId).subscribe(candidat => {\n      this.feedbackForm.patchValue({\n        nom: candidat.nom,\n        prenom: candidat.prenom,\n        adresseEmail: candidat.adresseEmail\n      });\n    });\n  }\n  onSubmit() {\n    if (this.feedbackForm.invalid) {\n      return;\n    }\n    const updatedFeedback = {\n      id: this.feedbackId,\n      candidatId: this.candidatId,\n      avis: this.feedbackForm.get('avis')?.value,\n      dateFeedback: new Date()\n    };\n    this.feedbackService.updateFeedback(updatedFeedback).subscribe(() => {\n      this.snackBar.open('Feedback modifié avec succès', 'Fermer', {\n        duration: 3000\n      });\n      this.router.navigate(['/tableauBord/listeFeedback']); // Redirigez où vous voulez après la modification\n    }, error => {\n      console.error('Erreur lors de la modification du feedback', error);\n      this.snackBar.open('Erreur lors de la modification du feedback', 'Fermer', {\n        duration: 3000\n      });\n    });\n  }\n  static #_ = this.ɵfac = function ModifierFeedbackComponent_Factory(t) {\n    return new (t || ModifierFeedbackComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.FeedbackService), i0.ɵɵdirectiveInject(i5.CandidatService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierFeedbackComponent,\n    selectors: [[\"app-modifier-feedback\"]],\n    decls: 22,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"form-container\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"avis\"], [\"type\", \"text\", \"id\", \"avis\", \"formControlName\", \"avis\", 1, \"form-control\"], [\"for\", \"nom\"], [\"type\", \"text\", \"id\", \"nom\", \"formControlName\", \"nom\", 1, \"form-control\", \"readonly-input\", 3, \"readonly\"], [\"for\", \"prenom\"], [\"type\", \"text\", \"id\", \"prenom\", \"formControlName\", \"prenom\", 1, \"form-control\", \"readonly-input\", 3, \"readonly\"], [\"for\", \"adresseEmail\"], [\"type\", \"email\", \"id\", \"adresseEmail\", \"formControlName\", \"adresseEmail\", 1, \"form-control\", \"readonly-input\", 3, \"readonly\"], [\"type\", \"submit\", 1, \"btn\"]],\n    template: function ModifierFeedbackComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Modifier Feedback\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ModifierFeedbackComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Avis:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Nom:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Pr\\u00E9nom:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n        i0.ɵɵtext(18, \"Adresse Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵtext(21, \"Enregistrer\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.feedbackForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"readonly\", true);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".container[_ngcontent-%COMP%] {\\r\\n    max-width: 600px;\\r\\n    margin: 20px auto;\\r\\n    padding: 20px;\\r\\n    background-color: #fff;\\r\\n    border-radius: 10px;\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\\r\\n  }\\r\\n  .readonly-input[_ngcontent-%COMP%] {\\r\\n    background-color: #f2f2f2; \\r\\n    color: #666; \\r\\n  }\\r\\n  \\r\\n  h1[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    color: #1b2552;\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  .form-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  label[_ngcontent-%COMP%] {\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  \\r\\n  .form-control[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  \\r\\n  .btn[_ngcontent-%COMP%] {\\r\\n    padding: 10px 20px;\\r\\n    background-color: #2c6db9;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    border-radius: 5px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  .btn[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #3f7ec5;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvRmVlZGJhY2tzL21vZGlmaWVyLWZlZWRiYWNrL21vZGlmaWVyLWZlZWRiYWNrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHVDQUF1QztFQUN6QztFQUNBO0lBQ0UseUJBQXlCLEVBQUUsMEJBQTBCO0lBQ3JELFdBQVcsRUFBRSwyQkFBMkI7RUFDMUM7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGFBQWE7SUFDYixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7RUFDakI7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogNjAwcHg7XHJcbiAgICBtYXJnaW46IDIwcHggYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICB9XHJcbiAgLnJlYWRvbmx5LWlucHV0IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7IC8qIENvdWxldXIgZGUgZm9uZCBncmlzZSAqL1xyXG4gICAgY29sb3I6ICM2NjY7IC8qIENvdWxldXIgZHUgdGV4dGUgZ3Jpc2UgKi9cclxuICB9XHJcbiAgXHJcbiAgaDEge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6ICMxYjI1NTI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWdyb3VwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGxhYmVsIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1jb250cm9sIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4ge1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJjNmRiOTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLmJ0bjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y3ZWM1O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","ModifierFeedbackComponent","constructor","formBuilder","route","router","snackBar","feedbackService","candidatService","ngOnInit","paramMap","subscribe","params","idParam","get","feedbackId","loadFeedback","console","error","feedbackForm","group","avis","required","nom","prenom","adresseEmail","email","getFeedbackById","feedback","patchValue","candidatId","getCandidatDetails","getCandidatById","candidat","onSubmit","invalid","updatedFeedback","id","value","dateFeedback","Date","updateFeedback","open","duration","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Feedbacks\\modifier-feedback\\modifier-feedback.component.ts","C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Feedbacks\\modifier-feedback\\modifier-feedback.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FeedbackService } from 'src/app/Services/FeedbackService';\nimport { Feedback } from 'src/app/models/FeedBack';\nimport { Candidat } from 'src/app/models/Candidat';\nimport { CandidatService } from 'src/app/Services/CandidatService';\n\n@Component({\n  selector: 'app-modifier-feedback',\n  templateUrl: './modifier-feedback.component.html',\n  styleUrls: ['./modifier-feedback.component.css']\n})\nexport class ModifierFeedbackComponent implements OnInit {\n \n  feedbackForm!: FormGroup;\n  feedbackId!: number;\n  candidatId!: number; // Ajoutez cette propriété pour stocker l'ID du candidat\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private feedbackService: FeedbackService,\n    private candidatService: CandidatService\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const idParam = params.get('id');\n      if (idParam) {\n        this.feedbackId = +idParam;\n        this.loadFeedback();\n      } else {\n        // Gérer le cas où l'ID est null\n        console.error('ID du feedback non trouvé dans les paramètres de l\\'URL');\n      }\n    });\n\n    this.feedbackForm = this.formBuilder.group({\n      avis: ['', Validators.required],\n      nom: ['', Validators.required], // Champ nom\n      prenom: ['', Validators.required], // Champ prénom\n      adresseEmail: ['', [Validators.required, Validators.email]], // Champ adresse email\n    });\n  }\n\n  loadFeedback(): void {\n    this.feedbackService.getFeedbackById(this.feedbackId).subscribe(feedback => {\n      this.feedbackForm.patchValue({\n        avis: feedback?.avis,\n        // Patchez d'autres champs du feedback si nécessaire\n      });\n      this.candidatId = feedback.candidatId; // Récupérez l'ID du candidat\n      this.getCandidatDetails(this.candidatId);\n    });\n  }\n\n  getCandidatDetails(candidatId: number): void {\n    this.candidatService.getCandidatById(candidatId).subscribe(candidat => {\n      this.feedbackForm.patchValue({\n        nom: candidat.nom,\n        prenom: candidat.prenom,\n        adresseEmail: candidat.adresseEmail\n      });\n    });\n  }\n\n  onSubmit(): void {\n    if (this.feedbackForm.invalid) {\n      return;\n    }\n    \n    const updatedFeedback: Feedback = {\n      id: this.feedbackId,\n      candidatId: this.candidatId, // Utilisez l'ID du candidat récupéré\n      avis: this.feedbackForm.get('avis')?.value,\n      dateFeedback: new Date()\n    };\n\n    this.feedbackService.updateFeedback(updatedFeedback).subscribe(() => {\n      this.snackBar.open('Feedback modifié avec succès', 'Fermer', {\n        duration: 3000\n      });\n      this.router.navigate(['/tableauBord/listeFeedback']); // Redirigez où vous voulez après la modification\n    }, error => {\n      console.error('Erreur lors de la modification du feedback', error);\n      this.snackBar.open('Erreur lors de la modification du feedback', 'Fermer', {\n        duration: 3000\n      });\n    });\n  }\n}\n","<div class=\"container\">\n  <h1>Modifier Feedback</h1>\n  <form [formGroup]=\"feedbackForm\" (ngSubmit)=\"onSubmit()\" class=\"form-container\">\n    <div class=\"form-group\">\n      <label for=\"avis\">Avis:</label>\n      <input type=\"text\" id=\"avis\" formControlName=\"avis\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"nom\">Nom:</label>\n      <input type=\"text\" id=\"nom\" formControlName=\"nom\" class=\"form-control readonly-input\" [readonly]=\"true\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"prenom\">Prénom:</label>\n      <input type=\"text\" id=\"prenom\" formControlName=\"prenom\" class=\"form-control readonly-input\" [readonly]=\"true\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"adresseEmail\">Adresse Email:</label>\n      <input type=\"email\" id=\"adresseEmail\" formControlName=\"adresseEmail\" class=\"form-control readonly-input\" [readonly]=\"true\">\n    </div>\n    <button type=\"submit\" class=\"btn\">Enregistrer</button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}