{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Services/QuizService\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction GenererQuizComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const niveau_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", niveau_r2.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(niveau_r2.label);\n  }\n}\nfunction GenererQuizComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const niveau_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", niveau_r3.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(niveau_r3.label);\n  }\n}\nexport class GenererQuizComponent {\n  constructor(formBuilder, quizService, snackBar, router) {\n    this.formBuilder = formBuilder;\n    this.quizService = quizService;\n    this.snackBar = snackBar;\n    this.router = router;\n    this.niveaux = [{\n      value: 0,\n      label: 'Débutant'\n    }, {\n      value: 1,\n      label: 'Intermédiaire'\n    }, {\n      value: 2,\n      label: 'Expert'\n    }];\n    this.questionnaireNiveaux = [{\n      value: 0,\n      label: 'Débutant'\n    }, {\n      value: 1,\n      label: 'Intermédiaire'\n    }, {\n      value: 2,\n      label: 'Expert'\n    }];\n  }\n  ngOnInit() {\n    this.quizForm = this.formBuilder.group({\n      titre: ['', Validators.required],\n      niveauId: [null, Validators.required],\n      nombreQCM: [null, Validators.required],\n      questionnaireNiveau: [null, Validators.required],\n      nombreQuestionnaires: [null, Validators.required],\n      dureeMinutes: [null, Validators.required],\n      description: ['', Validators.required],\n      questionnaireType: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.quizForm.invalid) {\n      return;\n    }\n    this.quizService.createQuiz(this.quizForm.value).subscribe(() => {\n      this.snackBar.open('Quiz créé avec succès', 'Fermer', {\n        duration: 3000\n      });\n      this.router.navigate(['tableauBord/listeQuiz']);\n    }, error => {\n      this.snackBar.open('Erreur lors de la création du Quiz', 'Fermer', {\n        duration: 3000\n      });\n      console.log(this.quizForm.value);\n      console.error('Erreur lors de la création du Quiz:', error);\n    });\n  }\n  static #_ = this.ɵfac = function GenererQuizComponent_Factory(t) {\n    return new (t || GenererQuizComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.QuizService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GenererQuizComponent,\n    selectors: [[\"app-generer-quiz\"]],\n    decls: 40,\n    vars: 3,\n    consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"titre\"], [\"id\", \"titre\", \"formControlName\", \"titre\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"niveauId\"], [\"id\", \"niveauId\", \"formControlName\", \"niveauId\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"nombreQCM\"], [\"id\", \"nombreQCM\", \"formControlName\", \"nombreQCM\", \"type\", \"number\", 1, \"form-control\"], [\"for\", \"questionnaireNiveau\"], [\"id\", \"questionnaireNiveau\", \"formControlName\", \"questionnaireNiveau\", 1, \"form-control\"], [\"for\", \"nombreQuestionnaires\"], [\"id\", \"nombreQuestionnaires\", \"formControlName\", \"nombreQuestionnaires\", \"type\", \"number\", 1, \"form-control\"], [\"for\", \"dureeMinutes\"], [\"id\", \"dureeMinutes\", \"formControlName\", \"dureeMinutes\", \"type\", \"number\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"questionnaireType\"], [\"id\", \"questionnaireType\", \"formControlName\", \"questionnaireType\", \"type\", \"text\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"value\"]],\n    template: function GenererQuizComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Ajouter un Quiz\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function GenererQuizComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Titre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Niveau\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 6);\n        i0.ɵɵtemplate(12, GenererQuizComponent_option_12_Template, 2, 2, \"option\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\", 8);\n        i0.ɵɵtext(15, \"Nombre de QCM\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 2)(18, \"label\", 10);\n        i0.ɵɵtext(19, \"Niveau du Questionnaire\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"select\", 11);\n        i0.ɵɵtemplate(21, GenererQuizComponent_option_21_Template, 2, 2, \"option\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\", 12);\n        i0.ɵɵtext(24, \"Nombre de Questionnaires\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 2)(27, \"label\", 14);\n        i0.ɵɵtext(28, \"Dur\\u00E9e (minutes)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 2)(31, \"label\", 16);\n        i0.ɵɵtext(32, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"textarea\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 2)(35, \"label\", 18);\n        i0.ɵɵtext(36, \"Type de Questionnaire\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"button\", 20);\n        i0.ɵɵtext(39, \"Ajouter\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.quizForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.niveaux);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.questionnaireNiveaux);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i5.NgForOf, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".container[_ngcontent-%COMP%] {\\r\\n  max-width: 60%;\\r\\n  margin: 20px auto;\\r\\n  padding: 20px;\\r\\n  background-color: #fff;\\r\\n  border-radius: 10px;\\r\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\\r\\n  display: flex; \\r\\n  justify-content: center; \\r\\n  align-items: center; \\r\\n  flex-direction: column; \\r\\n}\\r\\n\\r\\n.form-group[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%] {\\r\\n  font-weight: bold;\\r\\n}\\r\\ntextarea[_ngcontent-%COMP%], input[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"number\\\"][_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  padding: 10px;\\r\\n  border: 1px solid #ccc;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  padding: 10px 20px;\\r\\n  cursor: pointer;\\r\\n  border: none;\\r\\n  background-color: #2c216e; \\r\\n  color: white;\\r\\n  border-radius: 5px; \\r\\n}\\r\\n\\r\\n.btnAjouter[_ngcontent-%COMP%] {\\r\\n  margin-top: 20px; \\r\\n  width: 100%; \\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvUXVpei9nZW5lcmVyLXF1aXovZ2VuZXJlci1xdWl6LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLHVDQUF1QztFQUN2QyxhQUFhLEVBQUUscUJBQXFCO0VBQ3BDLHVCQUF1QixFQUFFLDRCQUE0QjtFQUNyRCxtQkFBbUIsRUFBRSwwQkFBMEI7RUFDL0Msc0JBQXNCLEVBQUUsb0NBQW9DO0FBQzlEOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25CO0FBQ0E7Ozs7RUFJRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLFlBQVk7RUFDWix5QkFBeUIsRUFBRSxrQkFBa0I7RUFDN0MsWUFBWTtFQUNaLGtCQUFrQixFQUFFLG9DQUFvQztBQUMxRDs7QUFFQTtFQUNFLGdCQUFnQixFQUFFLDBDQUEwQztFQUM1RCxXQUFXLEVBQUUscUJBQXFCO0FBQ3BDIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgbWF4LXdpZHRoOiA2MCU7XHJcbiAgbWFyZ2luOiAyMHB4IGF1dG87XHJcbiAgcGFkZGluZzogMjBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gIGRpc3BsYXk6IGZsZXg7IC8qIFV0aWxpc2VyIEZsZXhib3ggKi9cclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgLyogQ2VudHJlciBob3Jpem9udGFsZW1lbnQgKi9cclxuICBhbGlnbi1pdGVtczogY2VudGVyOyAvKiBDZW50cmVyIHZlcnRpY2FsZW1lbnQgKi9cclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyAvKiBBbGlnbmVyIGxlcyDDg8KpbMODwqltZW50cyBlbiBjb2xvbm5lICovXHJcbn1cclxuXHJcbi5mb3JtLWdyb3VwIHtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG5sYWJlbCB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxudGV4dGFyZWEsXHJcbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxyXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxyXG5zZWxlY3Qge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJjMjE2ZTsgLyogQ291bGV1ciBibGV1ZSAqL1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7IC8qIENvaW5zIGFycm9uZGlzIHBvdXIgbGVzIGJvdXRvbnMgKi9cclxufVxyXG5cclxuLmJ0bkFqb3V0ZXIge1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7IC8qIEFqb3V0IGQndW5lIG1hcmdlIGF1LWRlc3N1cyBkdSBib3V0b24gKi9cclxuICB3aWR0aDogMTAwJTsgLyogTGFyZ2V1ciBtYXhpbWFsZSAqL1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","GenererQuizComponent","constructor","formBuilder","quizService","snackBar","router","value","label","ngOnInit","quizForm","group","titre","required","niveauId","nombreQCM","questionnaireNiveau","nombreQuestionnaires","dureeMinutes","description","questionnaireType","onSubmit","invalid","createQuiz","subscribe","open","duration","navigate","error","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Quiz\\generer-quiz\\generer-quiz.component.ts","C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Quiz\\generer-quiz\\generer-quiz.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { QuizService } from 'src/app/Services/QuizService';\nimport { Quiz } from 'src/app/models/Quiz';\n\n@Component({\n  selector: 'app-generer-quiz',\n  templateUrl: './generer-quiz.component.html',\n  styleUrls: ['./generer-quiz.component.css']\n})\nexport class GenererQuizComponent implements OnInit {\n  quizForm!: FormGroup;\n  niveaux = [\n    { value: 0, label: 'Débutant' },\n    { value: 1, label: 'Intermédiaire' },\n    { value: 2, label: 'Expert' }\n  ];\n  questionnaireNiveaux = [\n    { value: 0, label: 'Débutant' },\n    { value: 1, label: 'Intermédiaire' },\n    { value: 2, label: 'Expert' }\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private quizService: QuizService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.quizForm = this.formBuilder.group({\n      titre: ['', Validators.required],\n      niveauId: [null, Validators.required],\n      nombreQCM: [null, Validators.required],\n      questionnaireNiveau: [null, Validators.required],\n      nombreQuestionnaires: [null, Validators.required],\n      dureeMinutes: [null, Validators.required],\n      description: ['', Validators.required],\n      questionnaireType: ['', Validators.required],\n\n    });\n  }\n\n  onSubmit(): void {\n    if (this.quizForm.invalid) {\n      return;\n    }\n\n    this.quizService.createQuiz(this.quizForm.value).subscribe(\n      () => { \n        this.snackBar.open('Quiz créé avec succès', 'Fermer', {duration: 3000 });\n        this.router.navigate(['tableauBord/listeQuiz']);\n      },\n      error => {\n        this.snackBar.open('Erreur lors de la création du Quiz', 'Fermer', {\n          duration: 3000\n        });\n        console.log(this.quizForm.value);\n        console.error('Erreur lors de la création du Quiz:', error);\n      }\n    );\n  }\n\n}","<div class=\"container\">\n    <h1>Ajouter un Quiz</h1>\n    <form [formGroup]=\"quizForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"titre\">Titre</label>\n        <input id=\"titre\" formControlName=\"titre\" type=\"text\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"niveauId\">Niveau</label>\n        <select id=\"niveauId\" formControlName=\"niveauId\" class=\"form-control\"> \n          <option *ngFor=\"let niveau of niveaux\" [value]=\"niveau.value\">{{ niveau.label }}</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"nombreQCM\">Nombre de QCM</label>\n        <input id=\"nombreQCM\" formControlName=\"nombreQCM\" type=\"number\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"questionnaireNiveau\">Niveau du Questionnaire</label>\n        <select id=\"questionnaireNiveau\" formControlName=\"questionnaireNiveau\" class=\"form-control\"> \n          <option *ngFor=\"let niveau of questionnaireNiveaux\" [value]=\"niveau.value\">{{ niveau.label }}</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"nombreQuestionnaires\">Nombre de Questionnaires</label>\n        <input id=\"nombreQuestionnaires\" formControlName=\"nombreQuestionnaires\" type=\"number\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"dureeMinutes\">Durée (minutes)</label>\n        <input id=\"dureeMinutes\" formControlName=\"dureeMinutes\" type=\"number\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <textarea id=\"description\" formControlName=\"description\" class=\"form-control\"></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"questionnaireType\">Type de Questionnaire</label>\n        <input id=\"questionnaireType\" formControlName=\"questionnaireType\" type=\"text\" class=\"form-control\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n    </form>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}