{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"blink\": a0\n  };\n};\nexport class TimerComponentComponent {\n  constructor(snackBar, router) {\n    this.snackBar = snackBar;\n    this.router = router;\n    this.startTime = 10; // temps initial en secondes\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.blinkEnabled = false; // Ajoutez une variable pour activer/désactiver le clignotement\n    this.timerExpired = new EventEmitter(); // Ajoutez un EventEmitter pour détecter l'expiration du timer\n  }\n\n  ngOnInit() {\n    this.startTimer();\n    this.hours = Math.floor(this.startTime / 3600);\n    this.minutes = Math.floor(this.startTime % 3600 / 60);\n    this.seconds = this.startTime % 60;\n  }\n  startTimer() {\n    this.intervalId = setInterval(() => {\n      if (this.seconds > 0) {\n        this.seconds--;\n      } else {\n        if (this.minutes > 0) {\n          this.minutes--;\n          this.seconds = 59;\n        } else {\n          if (this.hours > 0) {\n            this.hours--;\n            this.minutes = 59;\n            this.seconds = 59;\n          } else {\n            clearInterval(this.intervalId);\n            this.showNotification();\n            this.timerExpired.emit(); // Émettre un événement lorsque le timer expire\n          }\n        }\n      }\n      // Mettre à jour blinkEnabled en fonction de minutes\n      this.blinkEnabled = this.hours === 0 && this.minutes <= 5;\n    }, 1000);\n  }\n  stopTimer() {\n    clearInterval(this.intervalId);\n  }\n  showNotification() {\n    this.snackBar.open('Le temps est écoulé!', 'Fermer', {\n      duration: 5000,\n      verticalPosition: 'top' // Afficher la notification en haut de la page\n    });\n\n    this.stopTimer(); // Arrêter le minuteur lorsque la notification est affichée\n    this.router.navigate(['/merci']);\n  }\n  static #_ = this.ɵfac = function TimerComponentComponent_Factory(t) {\n    return new (t || TimerComponentComponent)(i0.ɵɵdirectiveInject(i1.MatSnackBar), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TimerComponentComponent,\n    selectors: [[\"app-timer-component\"]],\n    inputs: {\n      startTime: \"startTime\"\n    },\n    outputs: {\n      timerExpired: \"timerExpired\"\n    },\n    decls: 12,\n    vars: 6,\n    consts: [[1, \"timer\"], [1, \"timer-container\", 3, \"ngClass\"]],\n    template: function TimerComponentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"span\");\n        i0.ɵɵtext(5, \":\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"span\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"span\");\n        i0.ɵɵtext(9, \":\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"span\");\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, ctx.blinkEnabled));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hours);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.minutes);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.seconds);\n      }\n    },\n    dependencies: [i3.NgClass],\n    styles: [\".timer[_ngcontent-%COMP%] {\\r\\n  z-index: 1200;\\r\\n\\r\\n  position: fixed; \\r\\n  top: 40px;\\r\\n  right:125px; \\r\\n  text-align: center; \\r\\n  font-size: 12px; \\r\\n  font-weight: bold;\\r\\n  color: #fffb00; \\r\\n  width:80px;\\r\\n}\\r\\n\\r\\n\\r\\n.timer-container[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n  background-color: #0d4bb8e8; \\r\\n  padding: 10px; \\r\\n  border-radius: 5px; \\r\\n}\\r\\n\\r\\n.timer-container.blink[_ngcontent-%COMP%] {\\r\\n  animation: _ngcontent-%COMP%_backgroundBlink 1s infinite; \\r\\n}\\r\\n\\r\\n@keyframes _ngcontent-%COMP%_backgroundBlink {\\r\\n  0% {\\r\\n    background-color: #0d4bb8e8; \\r\\n  }\\r\\n  50% {\\r\\n    background-color: orange; \\r\\n  }\\r\\n  100% {\\r\\n    background-color: #0d4bb8e8; \\r\\n  }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ2hyb25vL3RpbWVyLWNvbXBvbmVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLGFBQWE7O0VBRWIsZUFBZSxFQUFFLHFEQUFxRDtFQUN0RSxTQUFTO0VBQ1QsV0FBVyxFQUFFLDRDQUE0QztFQUN6RCxrQkFBa0IsRUFBRSxnQ0FBZ0M7RUFDcEQsZUFBZSxFQUFFLGdDQUFnQztFQUNqRCxpQkFBaUI7RUFDakIsY0FBYyxFQUFFLHFCQUFxQjtFQUNyQyxVQUFVO0FBQ1o7OztBQUdBO0VBQ0Usa0JBQWtCO0VBQ2xCLDJCQUEyQixFQUFFLGNBQWM7RUFDM0MsYUFBYSxFQUFFLGdDQUFnQztFQUMvQyxrQkFBa0IsRUFBRSxtQkFBbUI7QUFDekM7O0FBRUE7RUFDRSxzQ0FBc0MsRUFBRSxzQ0FBc0M7QUFDaEY7O0FBRUE7RUFDRTtJQUNFLDJCQUEyQixFQUFFLG1DQUFtQztFQUNsRTtFQUNBO0lBQ0Usd0JBQXdCLEVBQUUsNENBQTRDO0VBQ3hFO0VBQ0E7SUFDRSwyQkFBMkIsRUFBRSxtQ0FBbUM7RUFDbEU7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4udGltZXIge1xyXG4gIHotaW5kZXg6IDEyMDA7XHJcblxyXG4gIHBvc2l0aW9uOiBmaXhlZDsgLyogUG9zaXRpb24gYWJzb2x1ZSBwYXIgcmFwcG9ydCBhdSBjb250ZW5ldXIgcGFyZW50ICovXHJcbiAgdG9wOiA0MHB4O1xyXG4gIHJpZ2h0OjEyNXB4OyAvKiDDg8KAIDUwIHBpeGVscyBkdSBoYXV0IGR1IGNvbnRlbmV1ciBwYXJlbnQgKi9cclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IC8qIEFsaWduZXIgbGUgY29udGVudSDDg8KgIGdhdWNoZSAqL1xyXG4gIGZvbnQtc2l6ZTogMTJweDsgLyogVGFpbGxlIGRlIGxhIHBvbGljZSBhanVzdMODwqllICovXHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgY29sb3I6ICNmZmZiMDA7IC8qIENvdWxldXIgZHUgdGV4dGUgKi9cclxuICB3aWR0aDo4MHB4O1xyXG59XHJcblxyXG5cclxuLnRpbWVyLWNvbnRhaW5lciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwZDRiYjhlODsgLyogRm9uZCBibGV1ICovXHJcbiAgcGFkZGluZzogMTBweDsgLyogQWpvdXQgZCd1biBlc3BhY2UgaW50w4PCqXJpZXVyICovXHJcbiAgYm9yZGVyLXJhZGl1czogNXB4OyAvKiBDb2lucyBhcnJvbmRpcyAqL1xyXG59XHJcblxyXG4udGltZXItY29udGFpbmVyLmJsaW5rIHtcclxuICBhbmltYXRpb246IGJhY2tncm91bmRCbGluayAxcyBpbmZpbml0ZTsgLyogQW5pbWF0aW9uIGRlIGNsaWdub3RlbWVudCBkdSBmb25kICovXHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgYmFja2dyb3VuZEJsaW5rIHtcclxuICAwJSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGQ0YmI4ZTg7IC8qIENvdWxldXIgZGUgZm9uZCBub3JtYWxlIChibGV1KSAqL1xyXG4gIH1cclxuICA1MCUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogb3JhbmdlOyAvKiBDb3VsZXVyIGRlIGZvbmQgcGVuZGFudCBsZSBjbGlnbm90ZW1lbnQgKi9cclxuICB9XHJcbiAgMTAwJSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGQ0YmI4ZTg7IC8qIENvdWxldXIgZGUgZm9uZCBub3JtYWxlIChibGV1KSAqL1xyXG4gIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"AAAA,SAA2CA,YAAY,QAAQ,eAAe;;;;;;;;;;AAS9E,OAAM,MAAOC,uBAAuB;EASlCC,YAAoBC,QAAqB,EAAUC,MAAa;IAA5C,aAAQ,GAARD,QAAQ;IAAuB,WAAM,GAANC,MAAM;IARhD,cAAS,GAAW,EAAE,CAAC,CAAC;IACjC,UAAK,GAAW,CAAC;IACjB,YAAO,GAAW,CAAC;IACnB,YAAO,GAAW,CAAC;IAEnB,iBAAY,GAAY,KAAK,CAAC,CAAC;IACrB,iBAAY,GAAuB,IAAIJ,YAAY,EAAQ,CAAC,CAAC;EAEJ;;EAEnEK,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;IACjB,IAAI,CAACC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,SAAS,GAAG,IAAI,CAAC;IAC9C,IAAI,CAACC,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAE,IAAI,CAACC,SAAS,GAAG,IAAI,GAAI,EAAE,CAAC;IACvD,IAAI,CAACE,OAAO,GAAG,IAAI,CAACF,SAAS,GAAG,EAAE;EACpC;EAEAJ,UAAU;IACV,IAAI,CAACO,UAAU,GAAGC,WAAW,CAAC,MAAK;MACjC,IAAI,IAAI,CAACF,OAAO,GAAG,CAAC,EAAE;QACpB,IAAI,CAACA,OAAO,EAAE;OACf,MAAM;QACL,IAAI,IAAI,CAACD,OAAO,GAAG,CAAC,EAAE;UACpB,IAAI,CAACA,OAAO,EAAE;UACd,IAAI,CAACC,OAAO,GAAG,EAAE;SAClB,MAAM;UACL,IAAI,IAAI,CAACL,KAAK,GAAG,CAAC,EAAE;YAClB,IAAI,CAACA,KAAK,EAAE;YACZ,IAAI,CAACI,OAAO,GAAG,EAAE;YACjB,IAAI,CAACC,OAAO,GAAG,EAAE;WAClB,MAAM;YACLG,aAAa,CAAC,IAAI,CAACF,UAAU,CAAC;YAC9B,IAAI,CAACG,gBAAgB,EAAE;YACvB,IAAI,CAACC,YAAY,CAACC,IAAI,EAAE,CAAC,CAAC;;;;MAMhC;MACA,IAAI,CAACC,YAAY,GAAG,IAAI,CAACZ,KAAK,KAAK,CAAC,IAAI,IAAI,CAACI,OAAO,IAAI,CAAC;IAC3D,CAAC,EAAE,IAAI,CAAC;EACV;EAGES,SAAS;IACPL,aAAa,CAAC,IAAI,CAACF,UAAU,CAAC;EAChC;EAEAG,gBAAgB;IACd,IAAI,CAACb,QAAQ,CAACkB,IAAI,CAAC,sBAAsB,EAAE,QAAQ,EAAE;MACnDC,QAAQ,EAAE,IAAI;MACdC,gBAAgB,EAAE,KAAK;KACxB,CAAC;;IACF,IAAI,CAACH,SAAS,EAAE,CAAC,CAAC;IAClB,IAAI,CAAChB,MAAM,CAACoB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAElC;EAAC;qBA1DUvB,uBAAuB;EAAA;EAAA;UAAvBA,uBAAuB;IAAAwB;IAAAC;MAAAhB;IAAA;IAAAiB;MAAAV;IAAA;IAAAW;IAAAC;IAAAC;IAAAC;MAAA;QCTpCC,8BAAmB;QAETA,YAAW;QAAAA,iBAAO;QAAAA,4BAAM;QAAAA,iBAAC;QAAAA,iBAAO;QACtCA,4BAAM;QAAAA,YAAa;QAAAA,iBAAO;QAAAA,4BAAM;QAAAA,iBAAC;QAAAA,iBAAO;QACxCA,6BAAM;QAAAA,aAAa;QAAAA,iBAAO;;;QAHCA,eAAmC;QAAnCA,sEAAmC;QACxDA,eAAW;QAAXA,+BAAW;QACXA,eAAa;QAAbA,iCAAa;QACbA,eAAa;QAAbA,iCAAa","names":["EventEmitter","TimerComponentComponent","constructor","snackBar","router","ngOnInit","startTimer","hours","Math","floor","startTime","minutes","seconds","intervalId","setInterval","clearInterval","showNotification","timerExpired","emit","blinkEnabled","stopTimer","open","duration","verticalPosition","navigate","selectors","inputs","outputs","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Chrono\\timer-component.component.ts","C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Chrono\\timer-component.component.html"],"sourcesContent":["import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-timer-component',\n  templateUrl: './timer-component.component.html',\n  styleUrls: ['./timer-component.component.css']\n})\nexport class TimerComponentComponent implements OnInit {\n  @Input() startTime: number = 10; // temps initial en secondes\n  hours: number = 0;\n  minutes: number = 0;\n  seconds: number = 0;\n  intervalId: any;\n  blinkEnabled: boolean = false; // Ajoutez une variable pour activer/désactiver le clignotement\n  @Output() timerExpired: EventEmitter<void> = new EventEmitter<void>(); // Ajoutez un EventEmitter pour détecter l'expiration du timer\n\n  constructor(private snackBar: MatSnackBar, private router:Router) {}\n\n  ngOnInit(): void {\n    this.startTimer();\n    this.hours = Math.floor(this.startTime / 3600);\n    this.minutes = Math.floor((this.startTime % 3600) / 60);\n    this.seconds = this.startTime % 60;\n  }\n\n  startTimer() {\n  this.intervalId = setInterval(() => {\n    if (this.seconds > 0) {\n      this.seconds--;\n    } else {\n      if (this.minutes > 0) {\n        this.minutes--;\n        this.seconds = 59;\n      } else {\n        if (this.hours > 0) {\n          this.hours--;\n          this.minutes = 59;\n          this.seconds = 59;\n        } else {\n          clearInterval(this.intervalId);\n          this.showNotification();\n          this.timerExpired.emit(); // Émettre un événement lorsque le timer expire\n\n        }\n      }\n    }\n    \n    // Mettre à jour blinkEnabled en fonction de minutes\n    this.blinkEnabled = this.hours === 0 && this.minutes <= 5;\n  }, 1000);\n}\n\n\n  stopTimer() {\n    clearInterval(this.intervalId);\n  }\n\n  showNotification() {\n    this.snackBar.open('Le temps est écoulé!', 'Fermer', {\n      duration: 5000, // Durée de la notification en millisecondes\n      verticalPosition: 'top'// Afficher la notification en haut de la page\n    });\n    this.stopTimer(); // Arrêter le minuteur lorsque la notification est affichée\n    this.router.navigate(['/merci']);\n\n  }\n}","<div class=\"timer\">\n  <div class=\"timer-container\" [ngClass]=\"{'blink': blinkEnabled}\">\n    <span>{{ hours }}</span><span>:</span>\n    <span>{{ minutes }}</span><span>:</span>\n    <span>{{ seconds }}</span>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}