{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/AdminService\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/forms\";\nexport class ChangePasswordComponent {\n  constructor(adminService, snackBar, dialogRef, data) {\n    this.adminService = adminService;\n    this.snackBar = snackBar;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.oldPassword = '';\n    this.newPassword = '';\n  }\n  changePassword() {\n    this.adminService.changePassword(this.data.userId, this.oldPassword, this.newPassword).subscribe(response => {\n      this.snackBar.open('Mot de passe changé avec succès', 'Fermer', {\n        duration: 3000\n      });\n      this.dialogRef.close(true);\n    }, error => {\n      this.snackBar.open('Erreur lors du changement de mot de passe', 'Fermer', {\n        duration: 3000\n      });\n      this.dialogRef.close(false);\n    });\n  }\n  static #_ = this.ɵfac = function ChangePasswordComponent_Factory(t) {\n    return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.AdminService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangePasswordComponent,\n    selectors: [[\"app-change-password\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[1, \"container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"oldPassword\"], [\"type\", \"password\", \"id\", \"oldPassword\", \"name\", \"oldPassword\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"newPassword\"], [\"type\", \"password\", \"id\", \"newPassword\", \"name\", \"newPassword\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\"]],\n    template: function ChangePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Changer le mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ChangePasswordComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.changePassword();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Ancien mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.oldPassword = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Nouveau mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.newPassword = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵtext(13, \"Changer le mot de passe\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.oldPassword);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newPassword);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\".container[_ngcontent-%COMP%] {\\r\\n    max-width: 500px;\\r\\n    margin: auto;\\r\\n    padding: 20px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  \\r\\n  h2[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 15px;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 8px;\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\n  \\r\\n  .btn[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n    background-color: #007bff;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    border-radius: 5px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  .btn[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #0056b3;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQWRtaW4vY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7SUFDWixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIGgyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWdyb3VwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWdyb3VwIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1ncm91cCBpbnB1dCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLmJ0bjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAuBA,eAAe,QAAQ,0BAA0B;;;;;;AASxE,OAAM,MAAOC,uBAAuB;EAIlCC,YACUC,YAA0B,EAC1BC,QAAqB,EACtBC,SAAgD,EACvBC,IAAS;IAHjC,iBAAY,GAAZH,YAAY;IACZ,aAAQ,GAARC,QAAQ;IACT,cAAS,GAATC,SAAS;IACgB,SAAI,GAAJC,IAAI;IAPtC,gBAAW,GAAW,EAAE;IACxB,gBAAW,GAAW,EAAE;EAOpB;EAEJC,cAAc;IACZ,IAAI,CAACJ,YAAY,CAACI,cAAc,CAAC,IAAI,CAACD,IAAI,CAACE,MAAM,EAAE,IAAI,CAACC,WAAW,EAAE,IAAI,CAACC,WAAW,CAAC,CAACC,SAAS,CAC9FC,QAAQ,IAAG;MACT,IAAI,CAACR,QAAQ,CAACS,IAAI,CAAC,iCAAiC,EAAE,QAAQ,EAAE;QAC9DC,QAAQ,EAAE;OACX,CAAC;MACF,IAAI,CAACT,SAAS,CAACU,KAAK,CAAC,IAAI,CAAC;IAC5B,CAAC,EACDC,KAAK,IAAG;MACN,IAAI,CAACZ,QAAQ,CAACS,IAAI,CAAC,2CAA2C,EAAE,QAAQ,EAAE;QACxEC,QAAQ,EAAE;OACX,CAAC;MACF,IAAI,CAACT,SAAS,CAACU,KAAK,CAAC,KAAK,CAAC;IAC7B,CAAC,CACF;EACH;EAAC;qBA1BUd,uBAAuB,2IAQxBD,eAAe;EAAA;EAAA;UARdC,uBAAuB;IAAAgB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVpCC,8BAAuB;QACfA,uCAAuB;QAAAA,iBAAK;QAChCA,+BAAoC;QAA9BA;UAAA,OAAYC,oBAAgB;QAAA,EAAC;QACjCD,8BAAwB;QACGA,mCAAmB;QAAAA,iBAAQ;QACpDA,gCAA8F;QAAtDA;UAAA;QAAA,EAAyB;QAAjEA,iBAA8F;QAEhGA,8BAAwB;QACGA,qCAAoB;QAAAA,iBAAQ;QACrDA,iCAA8F;QAAtDA;UAAA;QAAA,EAAyB;QAAjEA,iBAA8F;QAEhGA,kCAAkC;QAAAA,wCAAuB;QAAAA,iBAAS;;;QANxBA,eAAyB;QAAzBA,yCAAyB;QAIzBA,eAAyB;QAAzBA,yCAAyB","names":["MAT_DIALOG_DATA","ChangePasswordComponent","constructor","adminService","snackBar","dialogRef","data","changePassword","userId","oldPassword","newPassword","subscribe","response","open","duration","close","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Admin\\change-password\\change-password.component.ts","C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Admin\\change-password\\change-password.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminService } from 'src/app/Services/AdminService';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent {\n  oldPassword: string = '';\n  newPassword: string = '';\n\n  constructor(\n    private adminService: AdminService,\n    private snackBar: MatSnackBar,\n    public dialogRef: MatDialogRef<ChangePasswordComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  changePassword() {\n    this.adminService.changePassword(this.data.userId, this.oldPassword, this.newPassword).subscribe(\n      response => {\n        this.snackBar.open('Mot de passe changé avec succès', 'Fermer', {\n          duration: 3000,\n        });\n        this.dialogRef.close(true);\n      },\n      error => {\n        this.snackBar.open('Erreur lors du changement de mot de passe', 'Fermer', {\n          duration: 3000,\n        });\n        this.dialogRef.close(false);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n    <h2>Changer le mot de passe</h2>\n    <form (ngSubmit)=\"changePassword()\">\n      <div class=\"form-group\">\n        <label for=\"oldPassword\">Ancien mot de passe</label>\n        <input type=\"password\" id=\"oldPassword\" [(ngModel)]=\"oldPassword\" name=\"oldPassword\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newPassword\">Nouveau mot de passe</label>\n        <input type=\"password\" id=\"newPassword\" [(ngModel)]=\"newPassword\" name=\"newPassword\" required>\n      </div>\n      <button type=\"submit\" class=\"btn\">Changer le mot de passe</button>\n    </form>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}