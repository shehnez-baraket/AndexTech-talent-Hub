{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FeedbackService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5159/api/Feedbacks';\n  }\n  saveFeedback(feedback) {\n    return this.http.post(this.apiUrl, feedback);\n  }\n  getFeedbacks() {\n    return this.http.get(this.apiUrl);\n  }\n  // Récupérer un feedback par son ID\n  getFeedbackById(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get(url);\n  }\n  // Mettre à jour un feedback\n  updateFeedback(feedback) {\n    const url = `${this.apiUrl}/${feedback.id}`;\n    return this.http.put(url, feedback);\n  }\n  // Supprimer un feedback\n  deleteFeedback(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.delete(url);\n  }\n  static #_ = this.ɵfac = function FeedbackService_Factory(t) {\n    return new (t || FeedbackService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FeedbackService,\n    factory: FeedbackService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,qCAAqC;EAEd;EAExCC,YAAY,CAACC,QAAkB;IAC7B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAW,IAAI,CAACC,MAAM,EAAEF,QAAQ,CAAC;EACxD;EACAG,YAAY;IACV,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAa,IAAI,CAACF,MAAM,CAAC;EAC/C;EACE;EACAG,eAAe,CAACC,EAAU;IACxB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,IAAII,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAWG,GAAG,CAAC;EACrC;EAEA;EACAC,cAAc,CAACR,QAAkB;IAC/B,MAAMO,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,IAAIF,QAAQ,CAACM,EAAE,EAAE;IAC3C,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAACF,GAAG,EAAEP,QAAQ,CAAC;EACrC;EAEA;EACAU,cAAc,CAACJ,EAAU;IACvB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,IAAII,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,IAAI,CAACa,MAAM,CAACJ,GAAG,CAAC;EAC9B;EAAC;qBA3BQX,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAgB,SAAfhB,eAAe;IAAAiB,YAFd;EAAM","names":["FeedbackService","constructor","http","saveFeedback","feedback","post","apiUrl","getFeedbacks","get","getFeedbackById","id","url","updateFeedback","put","deleteFeedback","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Services\\FeedbackService.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Feedback } from '../models/FeedBack';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeedbackService {\r\n  private apiUrl = 'http://localhost:5159/api/Feedbacks';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  saveFeedback(feedback: Feedback): Observable<Feedback> {\r\n    return this.http.post<Feedback>(this.apiUrl, feedback);\r\n  }\r\n  getFeedbacks(): Observable<Feedback[]> {\r\n    return this.http.get<Feedback[]>(this.apiUrl);\r\n  }\r\n    // Récupérer un feedback par son ID\r\n    getFeedbackById(id: number): Observable<Feedback> {\r\n      const url = `${this.apiUrl}/${id}`;\r\n      return this.http.get<Feedback>(url);\r\n    }\r\n  \r\n    // Mettre à jour un feedback\r\n    updateFeedback(feedback: Feedback): Observable<any> {\r\n      const url = `${this.apiUrl}/${feedback.id}`;\r\n      return this.http.put(url, feedback);\r\n    }\r\n  \r\n    // Supprimer un feedback\r\n    deleteFeedback(id: number): Observable<any> {\r\n      const url = `${this.apiUrl}/${id}`;\r\n      return this.http.delete(url);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}