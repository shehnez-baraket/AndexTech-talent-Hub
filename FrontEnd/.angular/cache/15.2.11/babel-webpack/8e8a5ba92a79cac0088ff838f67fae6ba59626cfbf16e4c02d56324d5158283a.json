{"ast":null,"code":"import { jwtDecode } from 'jwt-decode';\nimport { TimerComponentComponent } from '../Chrono/timer-component.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../Services/QuizService\";\nimport * as i3 from \"../Services/QCMService\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"../Services/ReponseService\";\nimport * as i6 from \"../Services/TrackingService\";\nimport * as i7 from \"../Services/SharedCodeService\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"../Idecomponent/idecomponent.component\";\nimport * as i10 from \"../Chrono/timer-component.component\";\nimport * as i11 from \"../QCM/qcm.component\";\nimport * as i12 from \"../SQL/questions-sql.component\";\nfunction AdaptativeQcmComponent_div_1_div_3_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-qcm\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"question\", question_r6);\n  }\n}\nfunction AdaptativeQcmComponent_div_1_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AdaptativeQcmComponent_div_1_div_3_div_1_div_1_Template, 2, 1, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const qcmQuestion_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", qcmQuestion_r4.question);\n  }\n}\nfunction AdaptativeQcmComponent_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AdaptativeQcmComponent_div_1_div_3_div_1_Template, 2, 1, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.qcmQuestions);\n  }\n}\nfunction AdaptativeQcmComponent_div_1_div_4_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"app-questions-sql\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const questionnaire_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"questionnaire\", questionnaire_r8);\n  }\n}\nfunction AdaptativeQcmComponent_div_1_div_4_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"app-idecomponent\", 8);\n    i0.ɵɵlistener(\"codeSubmitted\", function AdaptativeQcmComponent_div_1_div_4_div_1_ng_container_2_Template_app_idecomponent_codeSubmitted_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r12.handleCodeSubmitted($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const questionnaire_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"quizId\", ctx_r10.quizId)(\"candidateId\", ctx_r10.candidateId)(\"questionnaire\", questionnaire_r8);\n  }\n}\nfunction AdaptativeQcmComponent_div_1_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AdaptativeQcmComponent_div_1_div_4_div_1_ng_container_1_Template, 2, 1, \"ng-container\", 3);\n    i0.ɵɵtemplate(2, AdaptativeQcmComponent_div_1_div_4_div_1_ng_container_2_Template, 2, 3, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const questionnaire_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", questionnaire_r8.type === \"sql\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", questionnaire_r8.type !== \"sql\");\n  }\n}\nfunction AdaptativeQcmComponent_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AdaptativeQcmComponent_div_1_div_4_div_1_Template, 3, 2, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.quiz.questionnaires);\n  }\n}\nfunction AdaptativeQcmComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AdaptativeQcmComponent_div_1_div_3_Template, 2, 1, \"div\", 3);\n    i0.ɵɵtemplate(4, AdaptativeQcmComponent_div_1_div_4_Template, 2, 1, \"div\", 3);\n    i0.ɵɵelementStart(5, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function AdaptativeQcmComponent_div_1_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.submitQuiz());\n    });\n    i0.ɵɵtext(6, \"Envoyer la r\\u00E9ponse\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.quiz.titre);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.qcmQuestions.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.quiz.questionnaires);\n  }\n}\nexport class AdaptativeQcmComponent {\n  constructor(route, quizService, qcmService, http, reponseService, router, trackingService, sharedCodeService // Inject the shared service\n  ) {\n    this.route = route;\n    this.quizService = quizService;\n    this.qcmService = qcmService;\n    this.http = http;\n    this.reponseService = reponseService;\n    this.router = router;\n    this.trackingService = trackingService;\n    this.sharedCodeService = sharedCodeService;\n    this.qcmQuestions = [];\n    this.score = 0;\n    this.questionnaires = [];\n    this.timerStopped = false;\n    this.codeFromIDE = '';\n    this.code = ''; // Variable to store the code from the IDE\n  }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const token = params.get('token');\n      if (token) {\n        this.quizService.validerLienQuiz(token).subscribe(response => {\n          console.log('Lien du quiz validé avec succès:', response);\n          // Maintenant, chargez le quiz une fois que le lien est validé\n          const decodedToken = this.decodeToken(token);\n          const quizId = decodedToken['QuizId'];\n          const candidateId = decodedToken['nameid'];\n          console.log('Token décodé :', decodedToken);\n          console.log('ID du quiz récupéré :', quizId);\n          console.log('ID du candidat récupéré :', candidateId);\n          this.loadQuiz(quizId, candidateId);\n        }, error => {\n          this.router.navigate(['/remerciement']);\n          console.error('Erreur lors de la validation du lien du quiz:', error);\n          // Gérer l'erreur de validation du lien du quiz ici\n        });\n      } else {\n        console.error('Token manquant dans l\\'URL');\n      }\n    });\n    if (this.timerComponent) {\n      this.timerComponent.timerExpired.subscribe(() => {\n        this.handleTimerExpiration();\n      });\n    }\n    this.code = this.sharedCodeService.getCode();\n  }\n  loadQuiz(quizId, candidateId) {\n    this.quizService.getQuizById(quizId).subscribe(quiz => {\n      this.quiz = quiz;\n      this.questionnaires = quiz.questionnaires || [];\n      console.log('Quiz récupéré :', this.quiz);\n      console.log('Questionnaires récupérés :', this.questionnaires);\n      const qcmIds = [];\n      if (quiz.qcMs) {\n        quiz.qcMs.forEach(qcm => {\n          qcmIds.push(qcm.qcmId);\n        });\n      }\n      console.log('IDs des QCMs récupérés :', qcmIds);\n      this.loadQcmQuestionsDetails(qcmIds);\n      this.candidateId = candidateId;\n      this.quizId = quizId;\n    }, error => {\n      console.error('Erreur lors de la récupération du quiz:', error);\n    });\n  } /*\r\n    loadQcmQuestionsDetails(qcmId: number[]): void {\r\n    const url = `http://localhost:5159/api/QCM/QuestionsAndOptions/${qcmId.join(',')}`;\r\n    this.http.get<any[]>(url).subscribe(\r\n      (qcmQuestions: any[]) => {\r\n        console.log('QCM récupéré :', qcmQuestions);\r\n        // Convertir l'objet qcmQuestions en un tableau\r\n        qcmQuestions = Object.values(qcmQuestions);\r\n        this.qcmQuestions = qcmQuestions.map(qcmQuestion => ({\r\n          ...qcmQuestion,\r\n          this:qcmQuestions = qcmQuestions,\r\n          question: Object.values(qcmQuestion.question)\r\n        }));\r\n      },\r\n      (error) => {\r\n        console.error('Erreur lors du chargement des questions du QCM:', error);\r\n      }\r\n    );\r\n    }*/\n  loadQcmQuestionsDetails(qcmIds) {\n    const url = `http://localhost:5159/api/QCM/QuestionsAndOptions/${qcmIds.join(',')}`;\n    this.http.get(url).subscribe(qcmQuestions => {\n      console.log('QCM récupéré :', qcmQuestions);\n      // Convertir l'objet qcmQuestions en un tableau\n      qcmQuestions = Object.values(qcmQuestions);\n      this.qcmQuestions = qcmQuestions.map(qcmQuestion => ({\n        ...qcmQuestion,\n        question: Array.isArray(qcmQuestion.question) ? qcmQuestion.question : [qcmQuestion.question] // S'assurer que question est un tableau\n      }));\n    }, error => {\n      console.error('Erreur lors du chargement des questions du QCM:', error);\n    });\n  }\n  /*submitQuiz(): void {\r\n    this.timerStopped = true;\r\n        this.router.navigate(['/merci'], { queryParams: { candidatId: this.candidateId } });\r\n    const lastCode = this.sharedCodeService.getCode();\r\n    console.log(lastCode);\r\n    const reponseCandidat: ReponseCandidat = {\r\n      optionId: [],\r\n      reponseQuestionnaire: lastCode,\r\n      candidatId: this.candidateId,\r\n      quizId : this.quizId\r\n    };\r\n        this.qcmQuestions.forEach(qcmQuestion => {\r\n      qcmQuestion.question.forEach(question => {\r\n        const selectedOptions = question.option.filter((option: Option) => option.selected);\r\n        if (selectedOptions.length > 0) {\r\n          const optionIds = selectedOptions.map((option: Option) => option.optionId);\r\n          reponseCandidat.optionId.push(...optionIds);\r\n        }\r\n      });\r\n    });\r\n        console.log('Réponse du candidat :', reponseCandidat);\r\n        this.reponseService.saveReponse(reponseCandidat).subscribe(\r\n      (response) => {\r\n        this.calculateScore(reponseCandidat);\r\n      },\r\n      (error) => {\r\n        console.error('Erreur lors de l\\'enregistrement de la réponse:', error);\r\n      }\r\n    );\r\n  }*/\n  handleCodeSubmitted(code) {\n    // Capturer le code soumis par IdecomponentComponent\n    this.codeFromIDE = code;\n  }\n  submitQuiz() {\n    // Arrêter le timer en définissant la variable timerStopped sur true\n    this.timerStopped = true;\n    console.log(this.codeFromIDE);\n    // Ne pas afficher la notification du temps écoulé lorsque le timer est arrêté\n    this.router.navigate(['/merci'], {\n      queryParams: {\n        candidatId: this.candidateId\n      }\n    });\n    const reponseCandidat = {\n      optionId: [],\n      reponseQuestionnaire: this.codeFromIDE,\n      candidatId: this.candidateId,\n      quizId: this.quizId\n    };\n    this.qcmQuestions.forEach(qcmQuestion => {\n      qcmQuestion.question.forEach(question => {\n        const selectedOptions = question.option.filter(option => option.selected);\n        if (selectedOptions.length > 0) {\n          const optionIds = selectedOptions.map(option => option.optionId);\n          reponseCandidat.optionId.push(...optionIds);\n        }\n      });\n    });\n    console.log('Réponse du candidat :', reponseCandidat);\n    this.reponseService.saveReponse(reponseCandidat).subscribe(response => {\n      this.calculateScore(reponseCandidat);\n    }, error => {\n      console.error('Erreur lors de l\\'enregistrement de la réponse:', error);\n    });\n  }\n  calculateScore(reponseCandidat) {\n    this.reponseService.calculateScore(reponseCandidat).subscribe(score => {\n      console.log('Score calculé avec succès:', score);\n      this.score = score;\n      this.generatePDFReport(this.candidateId);\n    }, error => {\n      console.error('Erreur lors du calcul du score:', error);\n    });\n  }\n  generatePDFReport(candidatId) {\n    this.reponseService.genererPdfReponsesCandidat(candidatId).subscribe(response => {\n      const url = window.URL.createObjectURL(response);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'reponses_candidat.pdf';\n      link.click();\n    }, error => {\n      console.error('Erreur lors de la génération du rapport PDF:', error);\n    });\n  }\n  selectOption(optionId, questionId) {\n    const qcmQuestion = this.qcmQuestions.find(qcmQuestion => qcmQuestion.questionId === questionId);\n    if (qcmQuestion) {\n      const question = qcmQuestion.question.find(question => question.questionId === questionId);\n      if (question) {\n        const option = question.option.find(option => option.optionId === optionId);\n        if (option) {\n          option.selected = !option.selected;\n        }\n      }\n    }\n  }\n  handleTimerExpiration() {\n    this.submitQuiz();\n  }\n  decodeToken(token) {\n    return jwtDecode(token);\n  }\n  static #_ = this.ɵfac = function AdaptativeQcmComponent_Factory(t) {\n    return new (t || AdaptativeQcmComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.QuizService), i0.ɵɵdirectiveInject(i3.QCMService), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i5.ReponseService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i6.TrackingService), i0.ɵɵdirectiveInject(i7.SharedCodeService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdaptativeQcmComponent,\n    selectors: [[\"app-adaptative-qcm\"]],\n    viewQuery: function AdaptativeQcmComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TimerComponentComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.timerComponent = _t.first);\n      }\n    },\n    inputs: {\n      codeFromIDE: \"codeFromIDE\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"startTime\"], [\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [4, \"ngIf\"], [1, \"submit-btn\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"question\"], [3, \"questionnaire\"], [3, \"quizId\", \"candidateId\", \"questionnaire\", \"codeSubmitted\"]],\n    template: function AdaptativeQcmComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-timer-component\", 0);\n        i0.ɵɵtemplate(1, AdaptativeQcmComponent_div_1_Template, 7, 3, \"div\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"startTime\", ctx.quiz.dureeMinutes * 60);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.quiz);\n      }\n    },\n    dependencies: [i8.NgForOf, i8.NgIf, i9.IdecomponentComponent, i10.TimerComponentComponent, i11.QCMComponent, i12.QuestionsSqlComponent],\n    styles: [\".container[_ngcontent-%COMP%] {\\r\\n    max-width: 80%;\\r\\n    margin: 0 auto;\\r\\n    padding: 20px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 5px;\\r\\n    background-color: #f9f9f9;\\r\\n  }\\r\\n  \\r\\n.container[_ngcontent-%COMP%] {\\r\\n  margin: 0 auto;\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\nh1[_ngcontent-%COMP%], h3[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.question[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.question[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\r\\n  font-size: 18px;\\r\\n}\\r\\n\\r\\n.question[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\r\\n  margin: 10px 0;\\r\\n}\\r\\n\\r\\n.submit-btn[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  margin: 20px auto;\\r\\n  padding: 10px 20px;\\r\\n  background-color: #4CAF50;\\r\\n  color: white;\\r\\n  border: none;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.submit-btn[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #45a049;\\r\\n}\\r\\n\\r\\n  h2[_ngcontent-%COMP%] {\\r\\n    color: #333;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  h3[_ngcontent-%COMP%] {\\r\\n    color: #666;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  ul[_ngcontent-%COMP%] {\\r\\n    list-style-type: none;\\r\\n  }\\r\\n  \\r\\n  .question[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  .actions[_ngcontent-%COMP%] {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n  \\r\\n  .submit-btn[_ngcontent-%COMP%], .delete-btn[_ngcontent-%COMP%], .next-btn[_ngcontent-%COMP%] {\\r\\n    padding: 10px 20px;\\r\\n    margin-right: 10px;\\r\\n    border: none;\\r\\n    border-radius: 5px;\\r\\n    background-color: #007bff;\\r\\n    color: #fff;\\r\\n    cursor: pointer;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .submit-btn[_ngcontent-%COMP%]:hover, .delete-btn[_ngcontent-%COMP%]:hover, .next-btn[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #0056b3;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .timer[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .submit-btn[_ngcontent-%COMP%] {\\r\\n   margin-left: 45%;\\r\\n    padding: 10px 20px;\\r\\n    margin-right: 10px;\\r\\n    cursor: pointer;\\r\\n    border: none;\\r\\n    background-color: #2c216e;\\r\\n    color: white;\\r\\n    border-radius: 5px; \\r\\n    text-align: center;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRhcHRhdGl2ZS1xY20vYWRhcHRhdGl2ZS1xY20uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxjQUFjO0lBQ2QsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIseUJBQXlCO0VBQzNCO0VBQ0EsaUNBQWlDO0FBQ25DO0VBQ0UsY0FBYztFQUNkLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0VBRUU7SUFDRSxXQUFXO0lBQ1gsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsV0FBVztJQUNYLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTs7O0lBR0Usa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsZUFBZTtJQUNmLGtCQUFrQjtFQUNwQjs7RUFFQTs7O0lBR0UseUJBQXlCO0lBQ3pCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQSxzQ0FBc0M7RUFDdEM7R0FDQyxnQkFBZ0I7SUFDZixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixrQkFBa0IsRUFBRSxvQ0FBb0M7SUFDeEQsa0JBQWtCO0VBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDgwJTtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG4gIH1cclxuICAvKiBhZGFwdGF0aXZlLXFjbS5jb21wb25lbnQuY3NzICovXHJcbi5jb250YWluZXIge1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuXHJcbmgxLCBoMyB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ucXVlc3Rpb24ge1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5xdWVzdGlvbiBwIHtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbn1cclxuXHJcbi5xdWVzdGlvbiBkaXYge1xyXG4gIG1hcmdpbjogMTBweCAwO1xyXG59XHJcblxyXG4uc3VibWl0LWJ0biB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luOiAyMHB4IGF1dG87XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uc3VibWl0LWJ0bjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ1YTA0OTtcclxufVxyXG5cclxuICBoMiB7XHJcbiAgICBjb2xvcjogIzMzMztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgaDMge1xyXG4gICAgY29sb3I6ICM2NjY7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIHVsIHtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICB9XHJcbiAgXHJcbiAgLnF1ZXN0aW9uIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5hY3Rpb25zIHtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5zdWJtaXQtYnRuLFxyXG4gIC5kZWxldGUtYnRuLFxyXG4gIC5uZXh0LWJ0biB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC5zdWJtaXQtYnRuOmhvdmVyLFxyXG4gIC5kZWxldGUtYnRuOmhvdmVyLFxyXG4gIC5uZXh0LWJ0bjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBcclxuICAudGltZXIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLyogWW91IGNhbiBhZGQgbW9yZSBzdHlsZXMgYXMgbmVlZGVkICovXHJcbiAgLnN1Ym1pdC1idG4ge1xyXG4gICBtYXJnaW4tbGVmdDogNDUlO1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJjMjE2ZTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDsgLyogQ29pbnMgYXJyb25kaXMgcG91ciBsZXMgYm91dG9ucyAqL1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"AAQA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,uBAAuB,QAAQ,qCAAqC;;;;;;;;;;;;;;;;ICHvEC,2BAAmD;IACjDA,6BAAyC;IAC3CA,iBAAM;;;;IADKA,eAAqB;IAArBA,sCAAqB;;;;;IAFlCA,2BAA8C;IAC5CA,yFAEM;IACRA,iBAAM;;;;IAHsBA,eAAuB;IAAvBA,iDAAuB;;;;;IAFrDA,2BAAqC;IACnCA,mFAIM;IACRA,iBAAM;;;;IALyBA,eAAe;IAAfA,6CAAe;;;;;IAS1CA,6BAAmD;IACjDA,uCAAwE;IAC1EA,0BAAe;;;;IADMA,eAA+B;IAA/BA,gDAA+B;;;;;;IAEpDA,6BAAmD;IACjDA,2CAA+I;IAA5HA;MAAAA;MAAA;MAAA,OAAiBA,kDAA2B;IAAA,EAAC;IAA+EA,iBAAmB;IACpKA,0BAAe;;;;;IADoDA,eAAiB;IAAjBA,uCAAiB;;;;;IALtFA,2BAAuD;IACrDA,2GAEe;IACfA,2GAEe;IACjBA,iBAAM;;;;IANWA,eAAkC;IAAlCA,sDAAkC;IAGlCA,eAAkC;IAAlCA,sDAAkC;;;;;IALrDA,2BAAiC;IAC/BA,mFAOM;IACRA,iBAAM;;;;IAR2BA,eAAsB;IAAtBA,oDAAsB;;;;;;IAZzDA,8BAAoC;IAC9BA,YAAgB;IAAAA,iBAAK;IAEzBA,6EAMM;IAENA,6EASM;IACNA,iCAAkD;IAAvBA;MAAAA;MAAA;MAAA,OAASA,mCAAY;IAAA,EAAC;IAACA,uCAAkB;IAAAA,iBAAS;;;;IApBzEA,eAAgB;IAAhBA,uCAAgB;IAEdA,eAA6B;IAA7BA,qDAA6B;IAQ7BA,eAAyB;IAAzBA,iDAAyB;;;ADQjC,OAAM,MAAOC,sBAAsB;EAejCC,YACUC,KAAqB,EACrBC,WAAwB,EACxBC,UAAsB,EACtBC,IAAgB,EAChBC,cAA8B,EAC9BC,MAAc,EACdC,eAAgC,EAChCC,iBAAoC,CAAE;EAAA;IAPtC,UAAK,GAALP,KAAK;IACL,gBAAW,GAAXC,WAAW;IACX,eAAU,GAAVC,UAAU;IACV,SAAI,GAAJC,IAAI;IACJ,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;IACN,oBAAe,GAAfC,eAAe;IACf,sBAAiB,GAAjBC,iBAAiB;IAlB3B,iBAAY,GAAkB,EAAE;IAEhC,UAAK,GAAW,CAAC;IAEjB,mBAAc,GAAoB,EAAE;IAEtC,iBAAY,GAAY,KAAK;IACpB,gBAAW,GAAW,EAAE;IACjC,SAAI,GAAW,EAAE,CAAC,CAAE;EAYd;;EAEJC,QAAQ;IACN,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC,MAAMC,KAAK,GAAGD,MAAM,CAACE,GAAG,CAAC,OAAO,CAAC;MACjC,IAAID,KAAK,EAAE;QACT,IAAI,CAACX,WAAW,CAACa,eAAe,CAACF,KAAK,CAAC,CAACF,SAAS,CAC9CK,QAAQ,IAAI;UACXC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEF,QAAQ,CAAC;UACzD;UACA,MAAMG,YAAY,GAAG,IAAI,CAACC,WAAW,CAACP,KAAK,CAAC;UAC5C,MAAMQ,MAAM,GAAGF,YAAY,CAAC,QAAQ,CAAC;UACrC,MAAMG,WAAW,GAAGH,YAAY,CAAC,QAAQ,CAAC;UAC1CF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,YAAY,CAAC;UAC3CF,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEG,MAAM,CAAC;UAC5CJ,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEI,WAAW,CAAC;UACrD,IAAI,CAACC,QAAQ,CAACF,MAAM,EAAEC,WAAW,CAAC;QACpC,CAAC,EACAE,KAAK,IAAI;UACR,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;UAEvCR,OAAO,CAACO,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;UACrE;QACF,CAAC,CACF;OACF,MAAM;QACLP,OAAO,CAACO,KAAK,CAAC,4BAA4B,CAAC;;IAE/C,CAAC,CAAC;IAEF,IAAI,IAAI,CAACE,cAAc,EAAE;MACvB,IAAI,CAACA,cAAc,CAACC,YAAY,CAAChB,SAAS,CAAC,MAAK;QAC9C,IAAI,CAACiB,qBAAqB,EAAE;MAC9B,CAAC,CAAC;;IAEJ,IAAI,CAACC,IAAI,GAAG,IAAI,CAACrB,iBAAiB,CAACsB,OAAO,EAAE;EAE9C;EAEAP,QAAQ,CAACF,MAAc,EAAEC,WAAmB;IAC1C,IAAI,CAACpB,WAAW,CAAC6B,WAAW,CAACV,MAAM,CAAC,CAACV,SAAS,CAC3CqB,IAAU,IAAI;MACb,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACC,cAAc,GAAGD,IAAI,CAACC,cAAc,IAAI,EAAE;MAC/ChB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACc,IAAI,CAAC;MACzCf,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAACe,cAAc,CAAC;MAC9D,MAAMC,MAAM,GAAa,EAAE;MAC3B,IAAIF,IAAI,CAACG,IAAI,EAAE;QACbH,IAAI,CAACG,IAAI,CAACC,OAAO,CAAEC,GAAQ,IAAI;UAC7BH,MAAM,CAACI,IAAI,CAACD,GAAG,CAACE,KAAK,CAAC;QACxB,CAAC,CAAC;;MAEJtB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEgB,MAAM,CAAC;MAC/C,IAAI,CAACM,uBAAuB,CAACN,MAAM,CAAC;MACpC,IAAI,CAACZ,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACD,MAAM,GAAEA,MAAM;IACrB,CAAC,EACAG,KAAU,IAAI;MACbP,OAAO,CAACO,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE,CAAC,CACF;EACH,CAAC;;;;;;;;;;;;;;;;;;;EAmBCgB,uBAAuB,CAACN,MAAgB;IACtC,MAAMO,GAAG,GAAG,qDAAqDP,MAAM,CAACQ,IAAI,CAAC,GAAG,CAAC,EAAE;IACnF,IAAI,CAACtC,IAAI,CAACU,GAAG,CAAQ2B,GAAG,CAAC,CAAC9B,SAAS,CAChCgC,YAAmB,IAAI;MACtB1B,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEyB,YAAY,CAAC;MAC3C;MACAA,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACF,YAAY,CAAC;MAC1C,IAAI,CAACA,YAAY,GAAGA,YAAY,CAACG,GAAG,CAACC,WAAW,KAAK;QACnD,GAAGA,WAAW;QACdC,QAAQ,EAAEC,KAAK,CAACC,OAAO,CAACH,WAAW,CAACC,QAAQ,CAAC,GAAGD,WAAW,CAACC,QAAQ,GAAG,CAACD,WAAW,CAACC,QAAQ,CAAC,CAAE;OAChG,CAAC,CAAC;IACL,CAAC,EACAxB,KAAK,IAAI;MACRP,OAAO,CAACO,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;IACzE,CAAC,CACF;EACH;EAMF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAkCE2B,mBAAmB,CAACtB,IAAY;IAC9B;IACA,IAAI,CAACuB,WAAW,GAAGvB,IAAI;EACzB;EACAwB,UAAU;IACR;IACA,IAAI,CAACC,YAAY,GAAG,IAAI;IAGxBrC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACkC,WAAW,CAAC;IAC7B;IAEE,IAAI,CAAC9C,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;MAAE8B,WAAW,EAAE;QAAEC,UAAU,EAAE,IAAI,CAAClC;MAAW;IAAE,CAAE,CAAC;IACnF,MAAMmC,eAAe,GAAoB;MACvCC,QAAQ,EAAE,EAAE;MAEZC,oBAAoB,EAAE,IAAI,CAACP,WAAW;MACtCI,UAAU,EAAE,IAAI,CAAClC,WAAW;MAC5BD,MAAM,EAAE,IAAI,CAACA;KACd;IAED,IAAI,CAACsB,YAAY,CAACP,OAAO,CAACW,WAAW,IAAG;MACtCA,WAAW,CAACC,QAAQ,CAACZ,OAAO,CAACY,QAAQ,IAAG;QACtC,MAAMY,eAAe,GAAGZ,QAAQ,CAACa,MAAM,CAACC,MAAM,CAAED,MAAc,IAAKA,MAAM,CAACE,QAAQ,CAAC;QACnF,IAAIH,eAAe,CAACI,MAAM,GAAG,CAAC,EAAE;UAC9B,MAAMC,SAAS,GAAGL,eAAe,CAACd,GAAG,CAAEe,MAAc,IAAKA,MAAM,CAACH,QAAQ,CAAC;UAC1ED,eAAe,CAACC,QAAQ,CAACpB,IAAI,CAAC,GAAG2B,SAAS,CAAC;;MAE/C,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFhD,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEuC,eAAe,CAAC;IAErD,IAAI,CAACpD,cAAc,CAAC6D,WAAW,CAACT,eAAe,CAAC,CAAC9C,SAAS,CACvDK,QAAQ,IAAI;MACX,IAAI,CAACmD,cAAc,CAACV,eAAe,CAAC;IACtC,CAAC,EACAjC,KAAK,IAAI;MACRP,OAAO,CAACO,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;IACzE,CAAC,CACF;EAEL;EAGF2C,cAAc,CAACV,eAAgC;IAC7C,IAAI,CAACpD,cAAc,CAAC8D,cAAc,CAACV,eAAe,CAAC,CAAC9C,SAAS,CAC1DyD,KAAa,IAAI;MAChBnD,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEkD,KAAK,CAAC;MAChD,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAAC/C,WAAW,CAAC;IAC1C,CAAC,EACAE,KAAK,IAAI;MACRP,OAAO,CAACO,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CAAC,CACF;EACH;EAEA6C,iBAAiB,CAACb,UAAkB;IAClC,IAAI,CAACnD,cAAc,CAACiE,0BAA0B,CAACd,UAAU,CAAC,CAAC7C,SAAS,CACjEK,QAAc,IAAI;MACjB,MAAMyB,GAAG,GAAG8B,MAAM,CAACC,GAAG,CAACC,eAAe,CAACzD,QAAQ,CAAC;MAChD,MAAM0D,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGpC,GAAG;MACfiC,IAAI,CAACI,QAAQ,GAAG,uBAAuB;MACvCJ,IAAI,CAACK,KAAK,EAAE;IACd,CAAC,EACAvD,KAAK,IAAI;MACRP,OAAO,CAACO,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACtE,CAAC,CACF;EACH;EAEAwD,YAAY,CAACtB,QAAgB,EAAEuB,UAAkB;IAC/C,MAAMlC,WAAW,GAAG,IAAI,CAACJ,YAAY,CAACuC,IAAI,CAACnC,WAAW,IAAIA,WAAW,CAACkC,UAAU,KAAKA,UAAU,CAAC;IAChG,IAAIlC,WAAW,EAAE;MACf,MAAMC,QAAQ,GAAGD,WAAW,CAACC,QAAQ,CAACkC,IAAI,CAAClC,QAAQ,IAAIA,QAAQ,CAACiC,UAAU,KAAKA,UAAU,CAAC;MAC1F,IAAIjC,QAAQ,EAAE;QACZ,MAAMa,MAAM,GAAGb,QAAQ,CAACa,MAAM,CAACqB,IAAI,CAACrB,MAAM,IAAIA,MAAM,CAACH,QAAQ,KAAKA,QAAQ,CAAC;QAC3E,IAAIG,MAAM,EAAE;UACVA,MAAM,CAACE,QAAQ,GAAG,CAACF,MAAM,CAACE,QAAQ;;;;EAI1C;EAEAnC,qBAAqB;IACnB,IAAI,CAACyB,UAAU,EAAE;EACnB;EAEAjC,WAAW,CAACP,KAAa;IACvB,OAAOjB,SAAS,CAACiB,KAAK,CAAC;EACzB;EAAC;qBA7PUd,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAAoF;IAAAC;MAAA;uBACtBvF,uBAAuB;;;;;;;;;;;;;;;QCrBpCC,yCAAgF;QAChFA,uEAsBM;;;QAvBeA,sDAAoC;QACjCA,eAAU;QAAVA,+BAAU","names":["jwtDecode","TimerComponentComponent","i0","AdaptativeQcmComponent","constructor","route","quizService","qcmService","http","reponseService","router","trackingService","sharedCodeService","ngOnInit","paramMap","subscribe","params","token","get","validerLienQuiz","response","console","log","decodedToken","decodeToken","quizId","candidateId","loadQuiz","error","navigate","timerComponent","timerExpired","handleTimerExpiration","code","getCode","getQuizById","quiz","questionnaires","qcmIds","qcMs","forEach","qcm","push","qcmId","loadQcmQuestionsDetails","url","join","qcmQuestions","Object","values","map","qcmQuestion","question","Array","isArray","handleCodeSubmitted","codeFromIDE","submitQuiz","timerStopped","queryParams","candidatId","reponseCandidat","optionId","reponseQuestionnaire","selectedOptions","option","filter","selected","length","optionIds","saveReponse","calculateScore","score","generatePDFReport","genererPdfReponsesCandidat","window","URL","createObjectURL","link","document","createElement","href","download","click","selectOption","questionId","find","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\adaptative-qcm\\adaptative-qcm.component.ts","C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\adaptative-qcm\\adaptative-qcm.component.html"],"sourcesContent":["import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Quiz, QCMQuestion } from '../models/Quiz';\nimport { QuizService } from '../Services/QuizService';\nimport { QCMService } from '../Services/QCMService';\nimport { HttpClient } from '@angular/common/http';\nimport { ReponseService } from '../Services/ReponseService';\nimport { ReponseCandidat } from '../models/ReponseCandidat';\nimport { jwtDecode } from 'jwt-decode';\nimport { TimerComponentComponent } from '../Chrono/timer-component.component';\nimport { TrackingService } from '../Services/TrackingService';\nimport { Questionnaire } from '../models/Questionnaire';\nimport { Option } from '../models/Option';\nimport { SharedCodeService } from '../Services/SharedCodeService';\n\n@Component({\n  selector: 'app-adaptative-qcm',\n  templateUrl: './adaptative-qcm.component.html',\n  styleUrls: ['./adaptative-qcm.component.css']\n})\nexport class AdaptativeQcmComponent implements OnInit {\n  @ViewChild(TimerComponentComponent)\n  \n  private timerComponent!: TimerComponentComponent;\n\n  qcmQuestions: QCMQuestion[] = [];\n  candidateId!: number;\n  score: number = 0;\n  quiz!: Quiz;\n  questionnaires: Questionnaire[] = [];\nquizId!:number;\ntimerStopped: boolean = false;\n@Input() codeFromIDE: string = ''; \ncode: string = '';  // Variable to store the code from the IDE\n\n  constructor(\n    private route: ActivatedRoute,\n    private quizService: QuizService,\n    private qcmService: QCMService,\n    private http: HttpClient,\n    private reponseService: ReponseService,\n    private router: Router,\n    private trackingService: TrackingService,\n    private sharedCodeService: SharedCodeService  // Inject the shared service\n\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const token = params.get('token');\n      if (token) {\n        this.quizService.validerLienQuiz(token).subscribe(\n          (response) => {\n            console.log('Lien du quiz validé avec succès:', response);\n            // Maintenant, chargez le quiz une fois que le lien est validé\n            const decodedToken = this.decodeToken(token);\n            const quizId = decodedToken['QuizId'];\n            const candidateId = decodedToken['nameid'];\n            console.log('Token décodé :', decodedToken);\n            console.log('ID du quiz récupéré :', quizId);\n            console.log('ID du candidat récupéré :', candidateId);\n            this.loadQuiz(quizId, candidateId);\n          },\n          (error) => {\n            this.router.navigate(['/remerciement']);\n\n            console.error('Erreur lors de la validation du lien du quiz:', error);\n            // Gérer l'erreur de validation du lien du quiz ici\n          }\n        );\n      } else {\n        console.error('Token manquant dans l\\'URL');\n      }\n    });\n\n    if (this.timerComponent) {\n      this.timerComponent.timerExpired.subscribe(() => {\n        this.handleTimerExpiration();\n      });\n    }\n    this.code = this.sharedCodeService.getCode();\n\n  }\n\n  loadQuiz(quizId: number, candidateId: number): void {\n    this.quizService.getQuizById(quizId).subscribe(\n      (quiz: Quiz) => {\n        this.quiz = quiz;\n        this.questionnaires = quiz.questionnaires || [];\n        console.log('Quiz récupéré :', this.quiz);\n        console.log('Questionnaires récupérés :', this.questionnaires);\n        const qcmIds: number[] = [];\n        if (quiz.qcMs) {\n          quiz.qcMs.forEach((qcm: any) => {\n            qcmIds.push(qcm.qcmId);\n          });\n        }\n        console.log('IDs des QCMs récupérés :', qcmIds);\n        this.loadQcmQuestionsDetails(qcmIds);\n        this.candidateId = candidateId;\n        this.quizId= quizId;\n      },\n      (error: any) => {\n        console.error('Erreur lors de la récupération du quiz:', error);\n      }\n    );\n  }/*\n  loadQcmQuestionsDetails(qcmId: number[]): void {\n    const url = `http://localhost:5159/api/QCM/QuestionsAndOptions/${qcmId.join(',')}`;\n    this.http.get<any[]>(url).subscribe(\n      (qcmQuestions: any[]) => {\n        console.log('QCM récupéré :', qcmQuestions);\n        // Convertir l'objet qcmQuestions en un tableau\n        qcmQuestions = Object.values(qcmQuestions);\n        this.qcmQuestions = qcmQuestions.map(qcmQuestion => ({\n          ...qcmQuestion,\n          this:qcmQuestions = qcmQuestions,\n          question: Object.values(qcmQuestion.question)\n        }));\n      },\n      (error) => {\n        console.error('Erreur lors du chargement des questions du QCM:', error);\n      }\n    );\n  }*/\n    loadQcmQuestionsDetails(qcmIds: number[]): void {\n      const url = `http://localhost:5159/api/QCM/QuestionsAndOptions/${qcmIds.join(',')}`;\n      this.http.get<any[]>(url).subscribe(\n        (qcmQuestions: any[]) => {\n          console.log('QCM récupéré :', qcmQuestions);\n          // Convertir l'objet qcmQuestions en un tableau\n          qcmQuestions = Object.values(qcmQuestions);\n          this.qcmQuestions = qcmQuestions.map(qcmQuestion => ({\n            ...qcmQuestion,\n            question: Array.isArray(qcmQuestion.question) ? qcmQuestion.question : [qcmQuestion.question]  // S'assurer que question est un tableau\n          }));\n        },\n        (error) => {\n          console.error('Erreur lors du chargement des questions du QCM:', error);\n        }\n      );\n    }\n    \n\n  \n  \n\n  /*submitQuiz(): void {\n    this.timerStopped = true;\n\n    this.router.navigate(['/merci'], { queryParams: { candidatId: this.candidateId } });\n    const lastCode = this.sharedCodeService.getCode();\n    console.log(lastCode);\n    const reponseCandidat: ReponseCandidat = {\n      optionId: [],\n      reponseQuestionnaire: lastCode,\n      candidatId: this.candidateId,\n      quizId : this.quizId\n    };\n\n    this.qcmQuestions.forEach(qcmQuestion => {\n      qcmQuestion.question.forEach(question => {\n        const selectedOptions = question.option.filter((option: Option) => option.selected);\n        if (selectedOptions.length > 0) {\n          const optionIds = selectedOptions.map((option: Option) => option.optionId);\n          reponseCandidat.optionId.push(...optionIds);\n        }\n      });\n    });\n\n    console.log('Réponse du candidat :', reponseCandidat);\n\n    this.reponseService.saveReponse(reponseCandidat).subscribe(\n      (response) => {\n        this.calculateScore(reponseCandidat);\n      },\n      (error) => {\n        console.error('Erreur lors de l\\'enregistrement de la réponse:', error);\n      }\n    );\n  }*/\n    handleCodeSubmitted(code: string) {\n      // Capturer le code soumis par IdecomponentComponent\n      this.codeFromIDE = code;\n    }\n    submitQuiz(): void {\n      // Arrêter le timer en définissant la variable timerStopped sur true\n      this.timerStopped = true;\n\n\n      console.log(this.codeFromIDE);\n      // Ne pas afficher la notification du temps écoulé lorsque le timer est arrêté\n      \n        this.router.navigate(['/merci'], { queryParams: { candidatId: this.candidateId } });   \n        const reponseCandidat: ReponseCandidat = {\n          optionId: [],\n       \n          reponseQuestionnaire: this.codeFromIDE,\n          candidatId: this.candidateId,\n          quizId: this.quizId\n        };\n    \n        this.qcmQuestions.forEach(qcmQuestion => {\n          qcmQuestion.question.forEach(question => {\n            const selectedOptions = question.option.filter((option: Option) => option.selected);\n            if (selectedOptions.length > 0) {\n              const optionIds = selectedOptions.map((option: Option) => option.optionId);\n              reponseCandidat.optionId.push(...optionIds);\n            }\n          });\n        });\n    \n        console.log('Réponse du candidat :', reponseCandidat);\n    \n        this.reponseService.saveReponse(reponseCandidat).subscribe(\n          (response) => {\n            this.calculateScore(reponseCandidat);\n          },\n          (error) => {\n            console.error('Erreur lors de l\\'enregistrement de la réponse:', error);\n          }\n        );\n      \n    }\n    \n\n  calculateScore(reponseCandidat: ReponseCandidat): void {\n    this.reponseService.calculateScore(reponseCandidat).subscribe(\n      (score: number) => {\n        console.log('Score calculé avec succès:', score);\n        this.score = score;\n        this.generatePDFReport(this.candidateId);\n      },\n      (error) => {\n        console.error('Erreur lors du calcul du score:', error);\n      }\n    );\n  }\n\n  generatePDFReport(candidatId: number): void {\n    this.reponseService.genererPdfReponsesCandidat(candidatId).subscribe(\n      (response: Blob) => {\n        const url = window.URL.createObjectURL(response);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = 'reponses_candidat.pdf';\n        link.click();\n      },\n      (error) => {\n        console.error('Erreur lors de la génération du rapport PDF:', error);\n      }\n    );\n  }\n\n  selectOption(optionId: number, questionId: number): void {\n    const qcmQuestion = this.qcmQuestions.find(qcmQuestion => qcmQuestion.questionId === questionId);\n    if (qcmQuestion) {\n      const question = qcmQuestion.question.find(question => question.questionId === questionId);\n      if (question) {\n        const option = question.option.find(option => option.optionId === optionId);\n        if (option) {\n          option.selected = !option.selected;\n        }\n      }\n    }\n  }\n\n  handleTimerExpiration(): void {\n    this.submitQuiz();\n  }\n\n  decodeToken(token: string): any {\n    return jwtDecode(token);\n  }\n}\n","<app-timer-component [startTime]=\"quiz.dureeMinutes * 60\"></app-timer-component>\n<div class=\"container\" *ngIf=\"quiz\">\n  <h1>{{ quiz.titre }}</h1>\n \n  <div *ngIf=\"qcmQuestions.length > 0\">\n    <div *ngFor=\"let qcmQuestion of qcmQuestions\">\n      <div *ngFor=\"let question of qcmQuestion.question\">\n        <app-qcm [question]=\"question\"></app-qcm>\n      </div>\n    </div>\n  </div>\n  \n  <div *ngIf=\"quiz.questionnaires\">\n    <div *ngFor=\"let questionnaire of quiz.questionnaires\">\n      <ng-container *ngIf=\"questionnaire.type === 'sql'\">\n        <app-questions-sql [questionnaire]=\"questionnaire\" ></app-questions-sql>\n      </ng-container>\n      <ng-container *ngIf=\"questionnaire.type !== 'sql'\">\n        <app-idecomponent  (codeSubmitted)=\"handleCodeSubmitted($event)\" [quizId]=\"quizId\" [candidateId]=\"candidateId\" [questionnaire]=\"questionnaire\"></app-idecomponent>\n      </ng-container>\n    </div>\n  </div>\n  <button class=\"submit-btn\" (click)=\"submitQuiz()\">Envoyer la réponse</button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}