{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QCMService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5159/api/QCM';\n  }\n  // Récupérer tous les QCMs\n  getQCMs() {\n    return this.http.get(this.apiUrl);\n  }\n  getQCMQuestionsByQuizId(quizId) {\n    return this.http.get(`http://localhost:5159/api/QCMQuestion?quizId=${quizId}`);\n  }\n  // Récupérer les détails d'un QCM avec ses questions et options\n  getQCMDetails(qcmId) {\n    return this.http.get(`api/QCM/QuestionsAndOptions/${qcmId}`);\n  }\n  // Récupérer un QCM (probablement sans questions et options)\n  // Conservez cette méthode si nécessaire, sinon supprimez-la\n  getQCM(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  // Créer un nouveau QCM\n  createQCM(qcmDTO) {\n    return this.http.post(this.apiUrl, qcmDTO);\n  }\n  // Supprimer un QCM\n  deleteQCM(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static #_ = this.ɵfac = function QCMService_Factory(t) {\n    return new (t || QCMService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QCMService,\n    factory: QCMService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,UAAU;EAIrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,+BAA+B;EAER;EAExC;EACAC,OAAO;IACL,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,IAAI,CAACC,MAAM,CAAC;EAC1C;EACAC,uBAAuB,CAACC,MAAc;IACpC,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAgB,gDAAgDG,MAAM,EAAE,CAAC;EAC/F;EAEA;EACAC,aAAa,CAACC,KAAa;IACzB,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAgB,+BAA+BK,KAAK,EAAE,CAAC;EAC7E;EACA;EACA;EACAC,MAAM,CAACC,EAAU;IACf,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAAM,GAAG,IAAI,CAACC,MAAM,IAAIM,EAAE,EAAE,CAAC;EACnD;EAEA;EACAC,SAAS,CAACC,MAAc;IACtB,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAM,IAAI,CAACT,MAAM,EAAEQ,MAAM,CAAC;EACjD;EAEA;EACAE,SAAS,CAACJ,EAAU;IAClB,OAAO,IAAI,CAACT,IAAI,CAACc,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,IAAIM,EAAE,EAAE,CAAC;EACjD;EAAC;qBAhCUX,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAiB,SAAVjB,UAAU;IAAAkB,YAFT;EAAM","names":["QCMService","constructor","http","getQCMs","get","apiUrl","getQCMQuestionsByQuizId","quizId","getQCMDetails","qcmId","getQCM","id","createQCM","qcmDTO","post","deleteQCM","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Services\\QCMService.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { QCM, QCMDTO } from '../models/qcm';\r\nimport { QCMQuestion } from '../models/Quiz';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QCMService {\r\n\r\n  private apiUrl = 'http://localhost:5159/api/QCM';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Récupérer tous les QCMs\r\n  getQCMs(): Observable<QCM[]> {\r\n    return this.http.get<QCM[]>(this.apiUrl);\r\n  }\r\n  getQCMQuestionsByQuizId(quizId: number): Observable<QCMQuestion[]> {\r\n    return this.http.get<QCMQuestion[]>(`http://localhost:5159/api/QCMQuestion?quizId=${quizId}`);\r\n  }\r\n \r\n  // Récupérer les détails d'un QCM avec ses questions et options\r\n  getQCMDetails(qcmId: number): Observable<QCMQuestion[]> {\r\n    return this.http.get<QCMQuestion[]>(`api/QCM/QuestionsAndOptions/${qcmId}`);\r\n  }\r\n  // Récupérer un QCM (probablement sans questions et options)\r\n  // Conservez cette méthode si nécessaire, sinon supprimez-la\r\n  getQCM(id: number): Observable<QCM> {\r\n    return this.http.get<QCM>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  // Créer un nouveau QCM\r\n  createQCM(qcmDTO: QCMDTO): Observable<QCM> {\r\n    return this.http.post<QCM>(this.apiUrl, qcmDTO);\r\n  }\r\n\r\n  // Supprimer un QCM\r\n  deleteQCM(id: number): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}