{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../Services/AuthService\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction AuthentificationComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \"Chargement...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AuthentificationComponent {\n  constructor(formBuilder, authService, snackBar, router // Injecter Router\n  ) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.snackBar = snackBar;\n    this.router = router;\n    this.authForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  ngOnInit() {}\n  submitForm() {\n    if (this.authForm.valid) {\n      const email = this.authForm.get('email')?.value;\n      const password = this.authForm.get('password')?.value;\n      if (email && password) {\n        this.authService.login(email, password).subscribe(response => {\n          console.log(response.message); // Connexion réussie\n          // Afficher une notification de succès\n          this.snackBar.open('Connexion réussie!', 'Fermer', {\n            duration: 1000,\n            panelClass: ['success-snackbar'],\n            verticalPosition: 'top',\n            horizontalPosition: 'center' // Position horizontale au centre\n          });\n          // Rediriger après un court délai pour permettre à l'utilisateur de voir la notification\n          setTimeout(() => {\n            this.router.navigate(['/tableauBord/listeCandidat']); // Rediriger vers la nouvelle route\n          }, 3000);\n        }, error => {\n          console.error(error); // Gérez l'erreur (Email ou mot de passe incorrect)\n          this.snackBar.open('Email ou mot de passe incorrect!', 'Fermer', {\n            duration: 3000,\n            panelClass: ['error-snackbar'],\n            verticalPosition: 'top',\n            horizontalPosition: 'center' // Position horizontale au centre\n          });\n        });\n      }\n    }\n  }\n  static #_ = this.ɵfac = function AuthentificationComponent_Factory(t) {\n    return new (t || AuthentificationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthentificationComponent,\n    selectors: [[\"app-authentification\"]],\n    decls: 16,\n    vars: 3,\n    consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"email\", \"placeholder\", \"Entrez votre email\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", \"placeholder\", \"Entrez votre mot de passe\"], [1, \"actions\"], [\"type\", \"submit\", 1, \"submit-btn\", 3, \"disabled\"], [\"class\", \"loading-indicator\", 4, \"ngIf\"], [1, \"loading-indicator\"]],\n    template: function AuthentificationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Connexion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthentificationComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 7)(13, \"button\", 8);\n        i0.ɵɵtext(14, \"Se connecter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, AuthentificationComponent_div_15_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i5.NgIf, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"h1[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n  color: #1b2552; \\r\\n}\\r\\ninput[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\r\\n  width: calc(100% - 20px); \\r\\n  padding: 12px; \\r\\n  border-radius: 5px;\\r\\n  border: 1px solid #ccc;\\r\\n  box-sizing: border-box; \\r\\n  font-size: 16px; \\r\\n  background-color: #f9f9f9; \\r\\n  transition: border-color 0.3s ease; \\r\\n}\\r\\n\\r\\ninput[type=\\\"email\\\"][_ngcontent-%COMP%]:focus, input[type=\\\"password\\\"][_ngcontent-%COMP%]:focus {\\r\\n  border-color: #2c216e; \\r\\n}\\r\\n\\r\\ninput[type=\\\"email\\\"][_ngcontent-%COMP%]::placeholder, input[type=\\\"password\\\"][_ngcontent-%COMP%]::placeholder {\\r\\n  color: #999; \\r\\n}\\r\\n\\r\\nbody[_ngcontent-%COMP%] {\\r\\n  background-color: #dddada; \\r\\n  display: flex;\\r\\n  justify-content: center; \\r\\n  align-items: center; \\r\\n  height: 100vh; \\r\\n}\\r\\n\\r\\n.container[_ngcontent-%COMP%] {\\r\\n  width: 40%; \\r\\n  padding: 20px;\\r\\n  background-color: white; \\r\\n  border-radius: 10px; \\r\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); \\r\\n  margin-top:8%;\\r\\n  margin-left: 30%;\\r\\n}\\r\\n\\r\\n.form-group[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\r\\n  width: calc(100% - 20px); \\r\\n  padding: 10px;\\r\\n  border-radius: 5px;\\r\\n  border: 1px solid #ccc;\\r\\n  box-sizing: border-box; \\r\\n}\\r\\n\\r\\n.actions[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.submit-btn[_ngcontent-%COMP%] {\\r\\n  padding: 10px 20px;\\r\\n  cursor: pointer;\\r\\n  border: none;\\r\\n  background-color: #2c216e;\\r\\n  color: white;\\r\\n  border-radius: 5px; \\r\\n}\\r\\n\\r\\n.submit-btn[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #1b2552; \\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQXV0aGVudGlmaWNhdGlvbi9hdXRoZW50aWZpY2F0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsY0FBYyxFQUFFLDJCQUEyQjtBQUM3QztBQUNBOztFQUVFLHdCQUF3QixFQUFFLHNEQUFzRDtFQUNoRixhQUFhLEVBQUUsK0RBQStEO0VBQzlFLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsc0JBQXNCLEVBQUUseURBQXlEO0VBQ2pGLGVBQWUsRUFBRSx3QkFBd0I7RUFDekMseUJBQXlCLEVBQUUsMkJBQTJCO0VBQ3RELGtDQUFrQyxFQUFFLDRCQUE0QjtBQUNsRTs7QUFFQTs7RUFFRSxxQkFBcUIsRUFBRSxpREFBaUQ7QUFDMUU7O0FBRUE7O0VBRUUsV0FBVyxFQUFFLCtDQUErQztBQUM5RDs7QUFFQTtFQUNFLHlCQUF5QixFQUFFLG9CQUFvQjtFQUMvQyxhQUFhO0VBQ2IsdUJBQXVCLEVBQUUsNEJBQTRCO0VBQ3JELG1CQUFtQixFQUFFLDBCQUEwQjtFQUMvQyxhQUFhLEVBQUUsaUNBQWlDO0FBQ2xEOztBQUVBO0VBQ0UsVUFBVSxFQUFFLGlDQUFpQztFQUM3QyxhQUFhO0VBQ2IsdUJBQXVCLEVBQUUsK0JBQStCO0VBQ3hELG1CQUFtQixFQUFFLG1CQUFtQjtFQUN4Qyx1Q0FBdUMsRUFBRSxpQkFBaUI7RUFDMUQsYUFBYTtFQUNiLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7QUFDcEI7O0FBRUE7O0VBRUUsd0JBQXdCLEVBQUUsc0RBQXNEO0VBQ2hGLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLHNCQUFzQixFQUFFLHlEQUF5RDtBQUNuRjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLFlBQVk7RUFDWix5QkFBeUI7RUFDekIsWUFBWTtFQUNaLGtCQUFrQixFQUFFLG9DQUFvQztBQUMxRDs7QUFFQTtFQUNFLHlCQUF5QixFQUFFLG9DQUFvQztBQUNqRSIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgY29sb3I6ICMxYjI1NTI7IC8qIENvdWxldXIgZGUgdGV4dGUgZm9uY8ODwqkgKi9cclxufVxyXG5pbnB1dFt0eXBlPVwiZW1haWxcIl0sXHJcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSB7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcHgpOyAvKiBMYXJnZXVyIG1heGltYWxlIMODwqlnYWxlIMODwqAgMTAwJSBtb2lucyAyMHB4IGRlIG1hcmdlICovXHJcbiAgcGFkZGluZzogMTJweDsgLyogQXVnbWVudGVyIGxhIHRhaWxsZSBkdSBwYWRkaW5nIHBvdXIgdW4gbWVpbGxldXIgZXNwYWNlbWVudCAqL1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIEluY2x1cmUgbGEgYm9yZHVyZSBldCBsZSByZW1ib3VycmFnZSBkYW5zIGxhIGxhcmdldXIgKi9cclxuICBmb250LXNpemU6IDE2cHg7IC8qIFRhaWxsZSBkZSBsYSBwb2xpY2UgKi9cclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5OyAvKiBDb3VsZXVyIGRlIGZvbmQgbMODwqlnw4PCqHJlICovXHJcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuM3MgZWFzZTsgLyogQW5pbWF0aW9uIGRlIHRyYW5zaXRpb24gKi9cclxufVxyXG5cclxuaW5wdXRbdHlwZT1cImVtYWlsXCJdOmZvY3VzLFxyXG5pbnB1dFt0eXBlPVwicGFzc3dvcmRcIl06Zm9jdXMge1xyXG4gIGJvcmRlci1jb2xvcjogIzJjMjE2ZTsgLyogQ291bGV1ciBkZSBsYSBib3JkdXJlIGxvcnNxdSdpbCBlc3QgZW4gZm9jdXMgKi9cclxufVxyXG5cclxuaW5wdXRbdHlwZT1cImVtYWlsXCJdOjpwbGFjZWhvbGRlcixcclxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdOjpwbGFjZWhvbGRlciB7XHJcbiAgY29sb3I6ICM5OTk7IC8qIENvdWxldXIgZHUgdGV4dGUgZGUgbCdhdHRyaWJ1dCBwbGFjZWhvbGRlciAqL1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkYWRhOyAvKiBGb25kIGdyaXMgY2xhaXIgKi9cclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyAvKiBDZW50cmVyIGhvcml6b250YWxlbWVudCAqL1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIENlbnRyZXIgdmVydGljYWxlbWVudCAqL1xyXG4gIGhlaWdodDogMTAwdmg7IC8qIFBsZWluZSBoYXV0ZXVyIGRlIGxhIGZlbsODwqp0cmUgKi9cclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IDQwJTsgLyogTGFyZ2V1ciBkdSBjb250ZW5ldXIgYWp1c3TDg8KpZSAqL1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IC8qIEZvbmQgYmxhbmMgcG91ciBsZSBjb250ZW51ICovXHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDsgLyogQ29pbnMgYXJyb25kaXMgKi9cclxuICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuMyk7IC8qIE9tYnJlIGzDg8KpZ8ODwqhyZSAqL1xyXG4gIG1hcmdpbi10b3A6OCU7XHJcbiAgbWFyZ2luLWxlZnQ6IDMwJTtcclxufVxyXG5cclxuLmZvcm0tZ3JvdXAge1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJlbWFpbFwiXSxcclxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdIHtcclxuICB3aWR0aDogY2FsYygxMDAlIC0gMjBweCk7IC8qIExhcmdldXIgbWF4aW1hbGUgw4PCqWdhbGUgw4PCoCAxMDAlIG1vaW5zIDIwcHggZGUgbWFyZ2UgKi9cclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIEluY2x1cmUgbGEgYm9yZHVyZSBldCBsZSByZW1ib3VycmFnZSBkYW5zIGxhIGxhcmdldXIgKi9cclxufVxyXG5cclxuLmFjdGlvbnMge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG59XHJcblxyXG4uc3VibWl0LWJ0biB7XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJjMjE2ZTtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4OyAvKiBDb2lucyBhcnJvbmRpcyBwb3VyIGxlcyBib3V0b25zICovXHJcbn1cclxuXHJcbi5zdWJtaXQtYnRuOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWIyNTUyOyAvKiBDaGFuZ2VtZW50IGRlIGNvdWxldXIgYXUgc3Vydm9sICovXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;ICY7DC,+BAA+C;IAAAA,6BAAa;IAAAA,iBAAM;;;ADFxE,OAAM,MAAOC,yBAAyB;EAGpCC,YACUC,WAAwB,EACxBC,WAAwB,EACxBC,QAAqB,EACrBC,MAAc,CAAC;EAAA;IAHf,gBAAW,GAAXH,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,aAAQ,GAARC,QAAQ;IACR,WAAM,GAANC,MAAM;IAEd,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACrCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQ,IACR;EAEAC,UAAU;IACR,IAAI,IAAI,CAACN,QAAQ,CAACO,KAAK,EAAE;MACvB,MAAML,KAAK,GAAG,IAAI,CAACF,QAAQ,CAACQ,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;MAC/C,MAAML,QAAQ,GAAG,IAAI,CAACJ,QAAQ,CAACQ,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;MAErD,IAAIP,KAAK,IAAIE,QAAQ,EAAE;QACrB,IAAI,CAACP,WAAW,CAACa,KAAK,CAACR,KAAK,EAAEE,QAAQ,CAAC,CAACO,SAAS,CAC/CC,QAAQ,IAAG;UACTC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC;UAC/B;UACA,IAAI,CAACjB,QAAQ,CAACkB,IAAI,CAAC,oBAAoB,EAAE,QAAQ,EAAE;YACjDC,QAAQ,EAAE,IAAI;YACdC,UAAU,EAAE,CAAC,kBAAkB,CAAC;YAChCC,gBAAgB,EAAE,KAAK;YACvBC,kBAAkB,EAAE,QAAQ,CAAE;WAC/B,CAAC;UAEF;UACAC,UAAU,CAAC,MAAK;YACd,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC;UACxD,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,EACDC,KAAK,IAAG;UACNV,OAAO,CAACU,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;UACtB,IAAI,CAACzB,QAAQ,CAACkB,IAAI,CAAC,kCAAkC,EAAE,QAAQ,EAAE;YAC/DC,QAAQ,EAAE,IAAI;YACdC,UAAU,EAAE,CAAC,gBAAgB,CAAC;YAC9BC,gBAAgB,EAAE,KAAK;YACvBC,kBAAkB,EAAE,QAAQ,CAAE;WAC/B,CAAC;QACJ,CAAC,CACF;;;EAGP;EAAC;qBApDU1B,yBAAyB;EAAA;EAAA;UAAzBA,yBAAyB;IAAA8B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCXtCnC,8BAAuB;QACjBA,yBAAS;QAAAA,iBAAK;QAClBA,+BAAuD;QAA1BA;UAAA,OAAYoC,gBAAY;QAAA,EAAC;QACpDpC,8BAAwB;QACHA,qBAAK;QAAAA,iBAAQ;QAChCA,2BAAwF;QAC1FA,iBAAM;QACNA,8BAAwB;QACAA,6BAAY;QAAAA,iBAAQ;QAC1CA,4BAAwG;QAC1GA,iBAAM;QACNA,+BAAqB;QAC2CA,6BAAY;QAAAA,iBAAS;QACnFA,4EAAkE;QACpEA,iBAAM;;;QAZFA,eAAsB;QAAtBA,wCAAsB;QAUiBA,gBAAoB;QAApBA,sCAAoB;QACvDA,eAAa;QAAbA,kCAAa","names":["Validators","i0","AuthentificationComponent","constructor","formBuilder","authService","snackBar","router","authForm","group","email","required","password","ngOnInit","submitForm","valid","get","value","login","subscribe","response","console","log","message","open","duration","panelClass","verticalPosition","horizontalPosition","setTimeout","navigate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Authentification\\authentification.component.ts","C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Authentification\\authentification.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../Services/AuthService';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router'; // Importer Router\n\n@Component({\n  selector: 'app-authentification',\n  templateUrl: './authentification.component.html',\n  styleUrls: ['./authentification.component.css']\n})\nexport class AuthentificationComponent implements OnInit {\n  authForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackBar: MatSnackBar,\n    private router: Router // Injecter Router\n  ) {\n    this.authForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  submitForm(): void {\n    if (this.authForm.valid) {\n      const email = this.authForm.get('email')?.value;\n      const password = this.authForm.get('password')?.value;\n\n      if (email && password) {\n        this.authService.login(email, password).subscribe(\n          response => {\n            console.log(response.message); // Connexion réussie\n            // Afficher une notification de succès\n            this.snackBar.open('Connexion réussie!', 'Fermer', {\n              duration: 1000, // Durée d'affichage de la notification en ms\n              panelClass: ['success-snackbar'], // Classe CSS pour personnaliser l'apparence de la notification\n              verticalPosition: 'top', // Position verticale en haut\n              horizontalPosition: 'center', // Position horizontale au centre\n            });\n\n            // Rediriger après un court délai pour permettre à l'utilisateur de voir la notification\n            setTimeout(() => {\n              this.router.navigate(['/tableauBord/listeCandidat']); // Rediriger vers la nouvelle route\n            }, 3000);\n          },\n          error => {\n            console.error(error); // Gérez l'erreur (Email ou mot de passe incorrect)\n            this.snackBar.open('Email ou mot de passe incorrect!', 'Fermer', {\n              duration: 3000, // Durée d'affichage de la notification en ms\n              panelClass: ['error-snackbar'], // Classe CSS pour personnaliser l'apparence de la notification\n              verticalPosition: 'top', // Position verticale en haut\n              horizontalPosition: 'center', // Position horizontale au centre\n            });\n          }\n        );\n      }\n    }\n  }\n}\n","<div class=\"container\">\n  <h1>Connexion</h1>\n  <form [formGroup]=\"authForm\" (ngSubmit)=\"submitForm()\">\n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input type=\"email\" formControlName=\"email\" id=\"email\" placeholder=\"Entrez votre email\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Mot de passe</label>\n      <input type=\"password\" formControlName=\"password\" id=\"password\" placeholder=\"Entrez votre mot de passe\">\n    </div>\n    <div class=\"actions\">\n      <button type=\"submit\" class=\"submit-btn\" [disabled]=\"loading\">Se connecter</button>\n      <div *ngIf=\"loading\" class=\"loading-indicator\">Chargement...</div>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}