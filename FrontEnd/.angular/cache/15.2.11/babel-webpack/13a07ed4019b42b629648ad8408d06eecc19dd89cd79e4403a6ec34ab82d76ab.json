{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet StatistiquesComponent = class StatistiquesComponent {\n  constructor(candidatService) {\n    this.candidatService = candidatService;\n    this.view = [350, 250]; // Taille des graphiques\n    // options\n    this.showXAxis = true;\n    this.showYAxis = true;\n    this.gradient = false;\n    this.showLegend = true;\n    this.showXAxisLabel = true;\n    this.xAxisLabel = 'Niveau';\n    this.showYAxisLabel = true;\n    this.yAxisLabel = 'Nombre de candidats';\n    this.colorScheme = {\n      domain: ['#0000FF', '#FFFF00', '#808080'] // Bleu, Jaune, Gris\n    };\n    // Initialisation des données\n    this.barChartData = [{\n      \"name\": \"Niveau 1\",\n      \"value\": 12\n    }, {\n      \"name\": \"Niveau 2\",\n      \"value\": 19\n    }, {\n      \"name\": \"Niveau 3\",\n      \"value\": 3\n    }];\n    this.pieChartData = [{\n      \"name\": \"Score 1\",\n      \"value\": 10\n    }, {\n      \"name\": \"Score 2\",\n      \"value\": 20\n    }, {\n      \"name\": \"Score 3\",\n      \"value\": 30\n    }];\n    this.lineChartData = [{\n      \"name\": \"Niveau 1\",\n      \"series\": [{\n        \"name\": \"Jan\",\n        \"value\": 10\n      }, {\n        \"name\": \"Feb\",\n        \"value\": 20\n      }]\n    }, {\n      \"name\": \"Niveau 2\",\n      \"series\": [{\n        \"name\": \"Jan\",\n        \"value\": 30\n      }, {\n        \"name\": \"Feb\",\n        \"value\": 25\n      }]\n    }];\n    this.areaChartData = [{\n      \"name\": \"Niveau 1\",\n      \"series\": [{\n        \"name\": \"Jan\",\n        \"value\": 5\n      }, {\n        \"name\": \"Feb\",\n        \"value\": 15\n      }]\n    }, {\n      \"name\": \"Niveau 2\",\n      \"series\": [{\n        \"name\": \"Jan\",\n        \"value\": 10\n      }, {\n        \"name\": \"Feb\",\n        \"value\": 30\n      }]\n    }];\n  }\n  ngOnInit() {\n    this.loadChartData();\n  }\n  loadChartData() {\n    this.candidatService.getTotalCandidatsCount().subscribe(count => {\n      this.totalCandidatsCount = count;\n      this.updateBarChartData();\n    });\n    this.candidatService.getTotalQuestionCount().subscribe(count => {\n      this.totalQuestionsCount = count;\n      this.updatePieChartData();\n    });\n    this.candidatService.getTotalQuestionnaireCount().subscribe(count => {\n      this.totalQuestionnairesCount = count;\n      this.updateLineChartData();\n    });\n    this.candidatService.getTotalQuizCount().subscribe(count => {\n      this.totalQuizzesCount = count;\n      this.updateAreaChartData();\n    });\n  }\n  updateBarChartData() {\n    // Mettre à jour barChartData avec les nouvelles valeurs\n    this.barChartData = [{\n      \"name\": \"Total Candidats\",\n      \"value\": this.totalCandidatsCount\n    }, {\n      \"name\": \"Niveau 1\",\n      \"value\": 12\n    }, {\n      \"name\": \"Niveau 2\",\n      \"value\": 19\n    }, {\n      \"name\": \"Niveau 3\",\n      \"value\": 3\n    }];\n  }\n  updatePieChartData() {\n    // Mettre à jour pieChartData avec les nouvelles valeurs\n    this.pieChartData = [{\n      \"name\": \"Total Questions\",\n      \"value\": this.totalQuestionsCount\n    }, {\n      \"name\": \"Score 1\",\n      \"value\": 10\n    }, {\n      \"name\": \"Score 2\",\n      \"value\": 20\n    }, {\n      \"name\": \"Score 3\",\n      \"value\": 30\n    }];\n  }\n  updateLineChartData() {\n    // Mettre à jour lineChartData avec les nouvelles valeurs\n    this.lineChartData = [{\n      \"name\": \"Total Questionnaires\",\n      \"series\": [{\n        \"name\": \"Jan\",\n        \"value\": this.totalQuestionnairesCount\n      }, {\n        \"name\": \"Feb\",\n        \"value\": 20\n      }]\n    }, {\n      \"name\": \"Niveau 1\",\n      \"series\": [{\n        \"name\": \"Jan\",\n        \"value\": 10\n      }, {\n        \"name\": \"Feb\",\n        \"value\": 20\n      }]\n    }, {\n      \"name\": \"Niveau 2\",\n      \"series\": [{\n        \"name\": \"Jan\",\n        \"value\": 30\n      }, {\n        \"name\": \"Feb\",\n        \"value\": 25\n      }]\n    }];\n  }\n  updateAreaChartData() {\n    // Mettre à jour areaChartData avec les nouvelles valeurs\n    this.areaChartData = [{\n      \"name\": \"Total Quizzes\",\n      \"series\": [{\n        \"name\": \"Jan\",\n        \"value\": this.totalQuizzesCount\n      }, {\n        \"name\": \"Feb\",\n        \"value\": 15\n      }]\n    }, {\n      \"name\": \"Niveau 1\",\n      \"series\": [{\n        \"name\": \"Jan\",\n        \"value\": 5\n      }, {\n        \"name\": \"Feb\",\n        \"value\": 15\n      }]\n    }, {\n      \"name\": \"Niveau 2\",\n      \"series\": [{\n        \"name\": \"Jan\",\n        \"value\": 10\n      }, {\n        \"name\": \"Feb\",\n        \"value\": 30\n      }]\n    }];\n  }\n};\nStatistiquesComponent = __decorate([Component({\n  selector: 'app-statistiques',\n  templateUrl: './statistiques.component.html',\n  styleUrls: ['./statistiques.component.css']\n}), Inject], StatistiquesComponent);\nexport { StatistiquesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EA0BhCC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAhBnC,SAAI,GAAqB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAErC;IACA,cAAS,GAAY,IAAI;IACzB,cAAS,GAAY,IAAI;IACzB,aAAQ,GAAY,KAAK;IACzB,eAAU,GAAY,IAAI;IAC1B,mBAAc,GAAY,IAAI;IAC9B,eAAU,GAAW,QAAQ;IAC7B,mBAAc,GAAY,IAAI;IAC9B,eAAU,GAAW,qBAAqB;IAE1C,gBAAW,GAAG;MACZC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;KAC3C;IAGC;IACA,IAAI,CAACC,YAAY,GAAG,CAClB;MAAE,MAAM,EAAE,UAAU;MAAE,OAAO,EAAE;IAAE,CAAE,EACnC;MAAE,MAAM,EAAE,UAAU;MAAE,OAAO,EAAE;IAAE,CAAE,EACnC;MAAE,MAAM,EAAE,UAAU;MAAE,OAAO,EAAE;IAAC,CAAE,CACnC;IAED,IAAI,CAACC,YAAY,GAAG,CAClB;MAAE,MAAM,EAAE,SAAS;MAAE,OAAO,EAAE;IAAE,CAAE,EAClC;MAAE,MAAM,EAAE,SAAS;MAAE,OAAO,EAAE;IAAE,CAAE,EAClC;MAAE,MAAM,EAAE,SAAS;MAAE,OAAO,EAAE;IAAE,CAAE,CACnC;IAED,IAAI,CAACC,aAAa,GAAG,CACnB;MAAE,MAAM,EAAE,UAAU;MAAE,QAAQ,EAAE,CAAC;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE,EAAE;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE;IAAC,CAAE,EAClG;MAAE,MAAM,EAAE,UAAU;MAAE,QAAQ,EAAE,CAAC;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE,EAAE;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE;IAAC,CAAE,CACnG;IAED,IAAI,CAACC,aAAa,GAAG,CACnB;MAAE,MAAM,EAAE,UAAU;MAAE,QAAQ,EAAE,CAAC;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAC,CAAE,EAAE;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE;IAAC,CAAE,EACjG;MAAE,MAAM,EAAE,UAAU;MAAE,QAAQ,EAAE,CAAC;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE,EAAE;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE;IAAC,CAAE,CACnG;EACH;EAEAC,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAa;IACX,IAAI,CAACP,eAAe,CAACQ,sBAAsB,EAAE,CAACC,SAAS,CAAEC,KAAa,IAAI;MACxE,IAAI,CAACC,mBAAmB,GAAGD,KAAK;MAChC,IAAI,CAACE,kBAAkB,EAAE;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACZ,eAAe,CAACa,qBAAqB,EAAE,CAACJ,SAAS,CAAEC,KAAa,IAAI;MACvE,IAAI,CAACI,mBAAmB,GAAGJ,KAAK;MAChC,IAAI,CAACK,kBAAkB,EAAE;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACf,eAAe,CAACgB,0BAA0B,EAAE,CAACP,SAAS,CAAEC,KAAa,IAAI;MAC5E,IAAI,CAACO,wBAAwB,GAAGP,KAAK;MACrC,IAAI,CAACQ,mBAAmB,EAAE;IAC5B,CAAC,CAAC;IAEF,IAAI,CAAClB,eAAe,CAACmB,iBAAiB,EAAE,CAACV,SAAS,CAAEC,KAAa,IAAI;MACnE,IAAI,CAACU,iBAAiB,GAAGV,KAAK;MAC9B,IAAI,CAACW,mBAAmB,EAAE;IAC5B,CAAC,CAAC;EACJ;EAEAT,kBAAkB;IAChB;IACA,IAAI,CAACV,YAAY,GAAG,CAClB;MAAE,MAAM,EAAE,iBAAiB;MAAE,OAAO,EAAE,IAAI,CAACS;IAAmB,CAAE,EAChE;MAAE,MAAM,EAAE,UAAU;MAAE,OAAO,EAAE;IAAE,CAAE,EACnC;MAAE,MAAM,EAAE,UAAU;MAAE,OAAO,EAAE;IAAE,CAAE,EACnC;MAAE,MAAM,EAAE,UAAU;MAAE,OAAO,EAAE;IAAC,CAAE,CACnC;EACH;EAEAI,kBAAkB;IAChB;IACA,IAAI,CAACZ,YAAY,GAAG,CAClB;MAAE,MAAM,EAAE,iBAAiB;MAAE,OAAO,EAAE,IAAI,CAACW;IAAmB,CAAE,EAChE;MAAE,MAAM,EAAE,SAAS;MAAE,OAAO,EAAE;IAAE,CAAE,EAClC;MAAE,MAAM,EAAE,SAAS;MAAE,OAAO,EAAE;IAAE,CAAE,EAClC;MAAE,MAAM,EAAE,SAAS;MAAE,OAAO,EAAE;IAAE,CAAE,CACnC;EACH;EAEAI,mBAAmB;IACjB;IACA,IAAI,CAACd,aAAa,GAAG,CACnB;MAAE,MAAM,EAAE,sBAAsB;MAAE,QAAQ,EAAE,CAAC;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE,IAAI,CAACa;MAAwB,CAAE,EAAE;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE;IAAC,CAAE,EACzI;MAAE,MAAM,EAAE,UAAU;MAAE,QAAQ,EAAE,CAAC;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE,EAAE;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE;IAAC,CAAE,EAClG;MAAE,MAAM,EAAE,UAAU;MAAE,QAAQ,EAAE,CAAC;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE,EAAE;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE;IAAC,CAAE,CACnG;EACH;EAEAI,mBAAmB;IACjB;IACA,IAAI,CAAChB,aAAa,GAAG,CACnB;MAAE,MAAM,EAAE,eAAe;MAAE,QAAQ,EAAE,CAAC;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE,IAAI,CAACe;MAAiB,CAAE,EAAE;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE;IAAC,CAAE,EAC3H;MAAE,MAAM,EAAE,UAAU;MAAE,QAAQ,EAAE,CAAC;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAC,CAAE,EAAE;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE;IAAC,CAAE,EACjG;MAAE,MAAM,EAAE,UAAU;MAAE,QAAQ,EAAE,CAAC;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE,EAAE;QAAE,MAAM,EAAE,KAAK;QAAE,OAAO,EAAE;MAAE,CAAE;IAAC,CAAE,CACnG;EACH;CACD;AAlHYtB,qBAAqB,eANjCD,SAAS,CAAC;EACTyB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,EACDC,MAAM,GACM3B,qBAAqB,CAkHjC;SAlHYA,qBAAqB","names":["Component","StatistiquesComponent","constructor","candidatService","domain","barChartData","pieChartData","lineChartData","areaChartData","ngOnInit","loadChartData","getTotalCandidatsCount","subscribe","count","totalCandidatsCount","updateBarChartData","getTotalQuestionCount","totalQuestionsCount","updatePieChartData","getTotalQuestionnaireCount","totalQuestionnairesCount","updateLineChartData","getTotalQuizCount","totalQuizzesCount","updateAreaChartData","selector","templateUrl","styleUrls","Inject"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\statistiques\\statistiques.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CandidatService } from './candidat.service';\n\n@Component({\n  selector: 'app-statistiques',\n  templateUrl: './statistiques.component.html',\n  styleUrls: ['./statistiques.component.css']\n})\n@Inject\nexport class StatistiquesComponent implements OnInit {\n  barChartData: any[];\n  pieChartData: any[];\n  lineChartData: any[];\n  areaChartData: any[];\n  totalCandidatsCount: number;\n  totalQuestionsCount: number;\n  totalQuestionnairesCount: number;\n  totalQuizzesCount: number;\n\n  view: [number, number] = [350, 250]; // Taille des graphiques\n\n  // options\n  showXAxis: boolean = true;\n  showYAxis: boolean = true;\n  gradient: boolean = false;\n  showLegend: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Niveau';\n  showYAxisLabel: boolean = true;\n  yAxisLabel: string = 'Nombre de candidats';\n\n  colorScheme = {\n    domain: ['#0000FF', '#FFFF00', '#808080'] // Bleu, Jaune, Gris\n  };\n\n  constructor(private candidatService: CandidatService) {\n    // Initialisation des données\n    this.barChartData = [\n      { \"name\": \"Niveau 1\", \"value\": 12 },\n      { \"name\": \"Niveau 2\", \"value\": 19 },\n      { \"name\": \"Niveau 3\", \"value\": 3 }\n    ];\n\n    this.pieChartData = [\n      { \"name\": \"Score 1\", \"value\": 10 },\n      { \"name\": \"Score 2\", \"value\": 20 },\n      { \"name\": \"Score 3\", \"value\": 30 }\n    ];\n\n    this.lineChartData = [\n      { \"name\": \"Niveau 1\", \"series\": [{ \"name\": \"Jan\", \"value\": 10 }, { \"name\": \"Feb\", \"value\": 20 }] },\n      { \"name\": \"Niveau 2\", \"series\": [{ \"name\": \"Jan\", \"value\": 30 }, { \"name\": \"Feb\", \"value\": 25 }] }\n    ];\n\n    this.areaChartData = [\n      { \"name\": \"Niveau 1\", \"series\": [{ \"name\": \"Jan\", \"value\": 5 }, { \"name\": \"Feb\", \"value\": 15 }] },\n      { \"name\": \"Niveau 2\", \"series\": [{ \"name\": \"Jan\", \"value\": 10 }, { \"name\": \"Feb\", \"value\": 30 }] }\n    ];\n  }\n\n  ngOnInit(): void {\n    this.loadChartData();\n  }\n\n  loadChartData() {\n    this.candidatService.getTotalCandidatsCount().subscribe((count: number) => {\n      this.totalCandidatsCount = count;\n      this.updateBarChartData();\n    });\n\n    this.candidatService.getTotalQuestionCount().subscribe((count: number) => {\n      this.totalQuestionsCount = count;\n      this.updatePieChartData();\n    });\n\n    this.candidatService.getTotalQuestionnaireCount().subscribe((count: number) => {\n      this.totalQuestionnairesCount = count;\n      this.updateLineChartData();\n    });\n\n    this.candidatService.getTotalQuizCount().subscribe((count: number) => {\n      this.totalQuizzesCount = count;\n      this.updateAreaChartData();\n    });\n  }\n\n  updateBarChartData() {\n    // Mettre à jour barChartData avec les nouvelles valeurs\n    this.barChartData = [\n      { \"name\": \"Total Candidats\", \"value\": this.totalCandidatsCount },\n      { \"name\": \"Niveau 1\", \"value\": 12 },\n      { \"name\": \"Niveau 2\", \"value\": 19 },\n      { \"name\": \"Niveau 3\", \"value\": 3 }\n    ];\n  }\n\n  updatePieChartData() {\n    // Mettre à jour pieChartData avec les nouvelles valeurs\n    this.pieChartData = [\n      { \"name\": \"Total Questions\", \"value\": this.totalQuestionsCount },\n      { \"name\": \"Score 1\", \"value\": 10 },\n      { \"name\": \"Score 2\", \"value\": 20 },\n      { \"name\": \"Score 3\", \"value\": 30 }\n    ];\n  }\n\n  updateLineChartData() {\n    // Mettre à jour lineChartData avec les nouvelles valeurs\n    this.lineChartData = [\n      { \"name\": \"Total Questionnaires\", \"series\": [{ \"name\": \"Jan\", \"value\": this.totalQuestionnairesCount }, { \"name\": \"Feb\", \"value\": 20 }] },\n      { \"name\": \"Niveau 1\", \"series\": [{ \"name\": \"Jan\", \"value\": 10 }, { \"name\": \"Feb\", \"value\": 20 }] },\n      { \"name\": \"Niveau 2\", \"series\": [{ \"name\": \"Jan\", \"value\": 30 }, { \"name\": \"Feb\", \"value\": 25 }] }\n    ];\n  }\n\n  updateAreaChartData() {\n    // Mettre à jour areaChartData avec les nouvelles valeurs\n    this.areaChartData = [\n      { \"name\": \"Total Quizzes\", \"series\": [{ \"name\": \"Jan\", \"value\": this.totalQuizzesCount }, { \"name\": \"Feb\", \"value\": 15 }] },\n      { \"name\": \"Niveau 1\", \"series\": [{ \"name\": \"Jan\", \"value\": 5 }, { \"name\": \"Feb\", \"value\": 15 }] },\n      { \"name\": \"Niveau 2\", \"series\": [{ \"name\": \"Jan\", \"value\": 10 }, { \"name\": \"Feb\", \"value\": 30 }] }\n    ];\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}