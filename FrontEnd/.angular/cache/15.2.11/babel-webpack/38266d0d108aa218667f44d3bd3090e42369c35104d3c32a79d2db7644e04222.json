{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuestionService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:5159/api/Question';\n  }\n  getQuestions() {\n    return this.http.get(this.baseUrl);\n  }\n  getOptionsForQuestion(id) {\n    return this.http.get(`${this.baseUrl}/${id}/Options`);\n  }\n  getQuestionById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  addQuestion(question) {\n    return this.http.post(this.baseUrl, question);\n  }\n  updateQuestion(id, question) {\n    return this.http.put(`${this.baseUrl}/${id}`, question);\n  }\n  deleteQuestion(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  static #_ = this.ɵfac = function QuestionService_Factory(t) {\n    return new (t || QuestionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuestionService,\n    factory: QuestionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,oCAAoC;EAEd;EAGxCC,YAAY;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,IAAI,CAACC,OAAO,CAAC;EAChD;EAEAC,qBAAqB,CAACC,EAAU;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,OAAO,IAAIE,EAAE,UAAU,CAAC;EACjE;EAEAC,eAAe,CAACD,EAAU;IACxB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,OAAO,IAAIE,EAAE,EAAE,CAAC;EACzD;EAEAE,WAAW,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAW,IAAI,CAACN,OAAO,EAAEK,QAAQ,CAAC;EACzD;EAEAE,cAAc,CAACL,EAAU,EAAEG,QAAkB;IAC3C,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAC,GAAG,IAAI,CAACR,OAAO,IAAIE,EAAE,EAAE,EAAEG,QAAQ,CAAC;EACzD;EAEAI,cAAc,CAACP,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACa,MAAM,CAAC,GAAG,IAAI,CAACV,OAAO,IAAIE,EAAE,EAAE,CAAC;EAClD;EAAC;qBA5BUP,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAgB,SAAfhB,eAAe;IAAAiB,YAFd;EAAM","names":["QuestionService","constructor","http","getQuestions","get","baseUrl","getOptionsForQuestion","id","getQuestionById","addQuestion","question","post","updateQuestion","put","deleteQuestion","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\Services\\QuestionService.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Question } from '../models/Question'; \r\nimport { Option } from '../models/Option';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionService {\r\n  private baseUrl = 'http://localhost:5159/api/Question';\r\n\r\n  constructor(private http: HttpClient) { }\r\n \r\n\r\n  getQuestions(): Observable<Question[]> {\r\n    return this.http.get<Question[]>(this.baseUrl);\r\n  }\r\n\r\n  getOptionsForQuestion(id: number): Observable<Option[]> {\r\n    return this.http.get<Option[]>(`${this.baseUrl}/${id}/Options`);\r\n  }\r\n\r\n  getQuestionById(id: number): Observable<Question> {\r\n    return this.http.get<Question>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  addQuestion(question: Question): Observable<Question> {\r\n    return this.http.post<Question>(this.baseUrl, question);\r\n  }\r\n\r\n  updateQuestion(id: number, question: Question): Observable<any> {\r\n    return this.http.put(`${this.baseUrl}/${id}`, question);\r\n  }\r\n\r\n  deleteQuestion(id: number): Observable<any> {\r\n    return this.http.delete(`${this.baseUrl}/${id}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}