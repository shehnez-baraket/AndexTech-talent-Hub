{"ast":null,"code":"import { ScaleType } from '@swimlane/ngx-charts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/AvisClientService\";\nimport * as i2 from \"../Services/ReponseService\";\nimport * as i3 from \"../Services/QuestionService\";\nimport * as i4 from \"../Services/Questionnaire\";\nimport * as i5 from \"../Services/QCMService\";\nimport * as i6 from \"../Services/QuizService\";\nimport * as i7 from \"../Services/CandidatService\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@swimlane/ngx-charts\";\nfunction StatistiquesComponent_ngx_charts_pie_chart_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-charts-pie-chart\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"view\", ctx_r0.view)(\"scheme\", ctx_r0.colorScheme)(\"results\", ctx_r0.pieData)(\"legend\", ctx_r0.showLegend)(\"explodeSlices\", true)(\"doughnut\", true)(\"labels\", true);\n  }\n}\nexport class StatistiquesComponent {\n  constructor(avisClientService, reponseService, questionService, questionnaireService, qcmService, quizService, candidatService, changeDetectorRef) {\n    this.avisClientService = avisClientService;\n    this.reponseService = reponseService;\n    this.questionService = questionService;\n    this.questionnaireService = questionnaireService;\n    this.qcmService = qcmService;\n    this.quizService = quizService;\n    this.candidatService = candidatService;\n    this.changeDetectorRef = changeDetectorRef;\n    this.reponses65Plus = 0;\n    this.reponses85Plus = 0;\n    this.totalQCMs = 0;\n    this.totalQuestionnaires = 0;\n    this.totalQuizzes = 0;\n    this.totalCandidates = 0;\n    this.highScoreQuizzes = 0;\n    this.highCorrectAnswersQuestions = 0;\n    this.totalQuestions = 0;\n    this.view = [400, 300]; // Ajuster la taille des graphiques ici\n    this.showXAxis = true;\n    this.showYAxis = true;\n    this.gradient = false;\n    this.showLegend = true;\n    this.showXAxisLabel = true;\n    this.showYAxisLabel = true;\n    this.xAxisLabel = 'Étoiles';\n    this.yAxisLabel = 'Nombre';\n    // Définition du schéma de couleur\n    this.colorScheme = {\n      name: 'custom',\n      selectable: true,\n      group: ScaleType.Ordinal,\n      domain: ['#00214F', '#F6E211', '#E7E6E6']\n    };\n    this.data = [];\n    this.barData = [];\n    this.pieData = [];\n  }\n  ngOnInit() {\n    this.fetchStatistiques();\n    this.fetchCountReponsesByScore();\n    this.fetchStatistiquesCount();\n  }\n  fetchCountReponsesByScore() {\n    this.reponseService.getStatsScoreCandidats().subscribe(result => {\n      console.log('Pie Data received:', result);\n      this.reponses65Plus = result.above68Percent; // Utilisez les noms de clés corrects en camelCase\n      this.reponses85Plus = result.below40Percent; // Utilisez les noms de clés corrects en camelCase\n      this.pieData = [{\n        name: '> 68%',\n        value: result.above68Percent\n      }, {\n        name: '< 40%',\n        value: result.below40Percent\n      }];\n      console.log('Updated Pie Data:', this.pieData);\n      this.changeDetectorRef.detectChanges();\n    }, error => {\n      console.error('Error fetching count of responses by score:', error);\n    });\n  }\n  fetchStatistiques() {\n    this.avisClientService.getAvisCountByStars().subscribe(statistiques => {\n      console.log('Raw Data:', statistiques);\n      this.barData = statistiques.map(item => ({\n        name: `${item.name} étoile(s)`,\n        value: item.value\n      }));\n      console.log('Updated Bar Data:', this.barData);\n      this.changeDetectorRef.detectChanges();\n    }, error => {\n      console.error('Error fetching avis count by stars:', error);\n    });\n  }\n  fetchStatistiquesCount() {\n    this.candidatService.getTotalCandidatsCount().subscribe(count => {\n      this.totalCandidates = count;\n      this.updateChartData();\n    });\n    this.questionService.getTotalQuestionCount().subscribe(count => {\n      this.totalQuestions = count;\n      this.updateChartData();\n    });\n    this.questionnaireService.getTotalQuestionnaireCount().subscribe(count => {\n      this.totalQuestionnaires = count;\n      this.updateChartData();\n    });\n    this.qcmService.getTotalQcmCount().subscribe(count => {\n      this.totalQCMs = count;\n      this.updateChartData();\n    });\n    this.quizService.getTotalQuizCount().subscribe(count => {\n      this.totalQuizzes = count;\n      this.updateChartData();\n    });\n  }\n  updateChartData() {\n    this.data = [{\n      name: 'Total Questions',\n      value: this.totalQuestions\n    }, {\n      name: 'Total Questionnaires',\n      value: this.totalQuestionnaires\n    }, {\n      name: 'Total QCMs',\n      value: this.totalQCMs\n    }, {\n      name: 'Total Quizzes',\n      value: this.totalQuizzes\n    }, {\n      name: 'Total Candidats',\n      value: this.totalCandidates\n    }];\n    console.log('Updated Bar Data:', this.data);\n    this.changeDetectorRef.detectChanges();\n  }\n  static #_ = this.ɵfac = function StatistiquesComponent_Factory(t) {\n    return new (t || StatistiquesComponent)(i0.ɵɵdirectiveInject(i1.AvisClientService), i0.ɵɵdirectiveInject(i2.ReponseService), i0.ɵɵdirectiveInject(i3.QuestionService), i0.ɵɵdirectiveInject(i4.QuestionnaireService), i0.ɵɵdirectiveInject(i5.QCMService), i0.ɵɵdirectiveInject(i6.QuizService), i0.ɵɵdirectiveInject(i7.CandidatService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatistiquesComponent,\n    selectors: [[\"app-statistiques\"]],\n    decls: 13,\n    vars: 13,\n    consts: [[1, \"statistics-dashboard\"], [1, \"chart-container\"], [1, \"chart-title\"], [3, \"view\", \"scheme\", \"results\", \"gradient\", \"legend\", \"showXAxisLabel\", \"showYAxisLabel\", \"xAxisLabel\", \"yAxisLabel\"], [3, \"view\", \"scheme\", \"results\", \"legend\", \"explodeSlices\", \"doughnut\", \"labels\", 4, \"ngIf\"], [3, \"view\", \"scheme\", \"results\"], [3, \"view\", \"scheme\", \"results\", \"legend\", \"explodeSlices\", \"doughnut\", \"labels\"]],\n    template: function StatistiquesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n        i0.ɵɵtext(3, \"Distribution des Avis Candidat\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"ngx-charts-bar-horizontal\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"h3\", 2);\n        i0.ɵɵtext(7, \"Pourcentage de R\\u00E9ponses Correctes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, StatistiquesComponent_ngx_charts_pie_chart_8_Template, 1, 7, \"ngx-charts-pie-chart\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"h3\", 2);\n        i0.ɵɵtext(11, \"Statistiques Globales\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"ngx-charts-number-card\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"view\", ctx.view)(\"scheme\", ctx.colorScheme)(\"results\", ctx.barData)(\"gradient\", ctx.gradient)(\"legend\", ctx.showLegend)(\"showXAxisLabel\", ctx.showXAxisLabel)(\"showYAxisLabel\", ctx.showYAxisLabel)(\"xAxisLabel\", ctx.xAxisLabel)(\"yAxisLabel\", ctx.yAxisLabel);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.pieData.length > 0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"view\", ctx.view)(\"scheme\", ctx.colorScheme)(\"results\", ctx.data);\n      }\n    },\n    dependencies: [i8.NgIf, i9.BarHorizontalComponent, i9.NumberCardComponent, i9.PieChartComponent],\n    styles: [\".statistics-dashboard[_ngcontent-%COMP%] {\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\\r\\n  gap: 20px;\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\n.chart-container[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  max-width: 400px; \\r\\n  margin: 0 auto; \\r\\n  text-align: center;\\r\\n  padding: 20px;\\r\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\r\\n  border-radius: 8px;\\r\\n  background-color: #fff;\\r\\n}\\r\\n\\r\\n.chart-title[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 10px;\\r\\n  font-size: 1.2em;\\r\\n  color: #333;\\r\\n}\\r\\n\\r\\n.statistics-dashboard[_ngcontent-%COMP%]   ngx-charts-bar-vertical[_ngcontent-%COMP%], .statistics-dashboard[_ngcontent-%COMP%]   ngx-charts-bar-horizontal[_ngcontent-%COMP%], .statistics-dashboard[_ngcontent-%COMP%]   ngx-charts-pie-chart[_ngcontent-%COMP%], .statistics-dashboard[_ngcontent-%COMP%]   ngx-charts-number-card[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  height: 300px; \\r\\n}\\r\\n\\r\\n\\r\\nngx-charts[_ngcontent-%COMP%]   text[_ngcontent-%COMP%] {\\r\\n  fill: #000 !important;\\r\\n  font-size: 14px !important;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n\\r\\nngx-tooltip[_ngcontent-%COMP%], ngx-charts-tooltip-area[_ngcontent-%COMP%] {\\r\\n  background-color: #fff !important;\\r\\n  color: #000 !important;\\r\\n  border: 1px solid #ccc !important;\\r\\n  border-radius: 4px !important;\\r\\n  padding: 10px !important;\\r\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n\\r\\n.chart-tooltip[_ngcontent-%COMP%] {\\r\\n  background-color: #fff !important;\\r\\n  color: #000 !important;\\r\\n  border: 1px solid #ccc !important;\\r\\n  border-radius: 4px !important;\\r\\n  padding: 10px !important;\\r\\n}\\r\\n\\r\\nngx-charts[_ngcontent-%COMP%]   .legend-label[_ngcontent-%COMP%] {\\r\\n  color: #000 !important;\\r\\n  font-size: 14px !important;\\r\\n  font-weight: bold;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc3RhdGlzdGlxdWVzL3N0YXRpc3RpcXVlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLDJEQUEyRDtFQUMzRCxTQUFTO0VBQ1QsYUFBYTtBQUNmOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQixFQUFFLDZFQUE2RTtFQUMvRixjQUFjLEVBQUUseUNBQXlDO0VBQ3pELGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsdUNBQXVDO0VBQ3ZDLGtCQUFrQjtFQUNsQixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjs7QUFFQTs7OztFQUlFLFdBQVc7RUFDWCxhQUFhLEVBQUUsNEVBQTRFO0FBQzdGOztBQUVBLCtEQUErRDtBQUMvRDtFQUNFLHFCQUFxQjtFQUNyQiwwQkFBMEI7RUFDMUIsaUJBQWlCO0FBQ25COztBQUVBLDZCQUE2QjtBQUM3Qjs7RUFFRSxpQ0FBaUM7RUFDakMsc0JBQXNCO0VBQ3RCLGlDQUFpQztFQUNqQyw2QkFBNkI7RUFDN0Isd0JBQXdCO0VBQ3hCLHVDQUF1QztBQUN6Qzs7QUFFQTtFQUNFLGlDQUFpQztFQUNqQyxzQkFBc0I7RUFDdEIsaUNBQWlDO0VBQ2pDLDZCQUE2QjtFQUM3Qix3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsMEJBQTBCO0VBQzFCLGlCQUFpQjtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5zdGF0aXN0aWNzLWRhc2hib2FyZCB7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDQwMHB4LCAxZnIpKTtcclxuICBnYXA6IDIwcHg7XHJcbiAgcGFkZGluZzogMjBweDtcclxufVxyXG5cclxuLmNoYXJ0LWNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWF4LXdpZHRoOiA0MDBweDsgLyogUsODwqlkdWlyZSBsYSB0YWlsbGUgbWF4aW1hbGUgcG91ciDDg8Kpdml0ZXIgcXVlIGxlcyBjb250ZW5ldXJzIHNlIGNoZXZhdWNoZW50ICovXHJcbiAgbWFyZ2luOiAwIGF1dG87IC8qIENlbnRyZXIgbGUgY29udGVuZXVyIGhvcml6b250YWxlbWVudCAqL1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxufVxyXG5cclxuLmNoYXJ0LXRpdGxlIHtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIGZvbnQtc2l6ZTogMS4yZW07XHJcbiAgY29sb3I6ICMzMzM7XHJcbn1cclxuXHJcbi5zdGF0aXN0aWNzLWRhc2hib2FyZCBuZ3gtY2hhcnRzLWJhci12ZXJ0aWNhbCxcclxuLnN0YXRpc3RpY3MtZGFzaGJvYXJkIG5neC1jaGFydHMtYmFyLWhvcml6b250YWwsXHJcbi5zdGF0aXN0aWNzLWRhc2hib2FyZCBuZ3gtY2hhcnRzLXBpZS1jaGFydCxcclxuLnN0YXRpc3RpY3MtZGFzaGJvYXJkIG5neC1jaGFydHMtbnVtYmVyLWNhcmQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMzAwcHg7IC8qIEFqdXN0ZXIgbGEgaGF1dGV1ciBwb3VyIMODwql2aXRlciBxdWUgbGVzIGNvbnRlbmV1cnMgbmUgc29pZW50IHRyb3AgZ3JhbmRzICovXHJcbn1cclxuXHJcbi8qIFN0eWxlcyBwb3VyIGFtw4PCqWxpb3JlciBsYSBsaXNpYmlsaXTDg8KpIGRlcyBsYWJlbHMgZXQgdG9vbHRpcHMgKi9cclxubmd4LWNoYXJ0cyB0ZXh0IHtcclxuICBmaWxsOiAjMDAwICFpbXBvcnRhbnQ7XHJcbiAgZm9udC1zaXplOiAxNHB4ICFpbXBvcnRhbnQ7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi8qIFN0eWxlcyBwb3VyIGxlcyB0b29sdGlwcyAqL1xyXG5uZ3gtdG9vbHRpcCxcclxubmd4LWNoYXJ0cy10b29sdGlwLWFyZWEge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmYgIWltcG9ydGFudDtcclxuICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2MgIWltcG9ydGFudDtcclxuICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxuICBwYWRkaW5nOiAxMHB4ICFpbXBvcnRhbnQ7XHJcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG59XHJcblxyXG4uY2hhcnQtdG9vbHRpcCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xyXG4gIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYyAhaW1wb3J0YW50O1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweCAhaW1wb3J0YW50O1xyXG4gIHBhZGRpbmc6IDEwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxubmd4LWNoYXJ0cyAubGVnZW5kLWxhYmVsIHtcclxuICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xyXG4gIGZvbnQtc2l6ZTogMTRweCAhaW1wb3J0YW50O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["ScaleType","i0","StatistiquesComponent","constructor","avisClientService","reponseService","questionService","questionnaireService","qcmService","quizService","candidatService","changeDetectorRef","name","selectable","group","Ordinal","domain","ngOnInit","fetchStatistiques","fetchCountReponsesByScore","fetchStatistiquesCount","getStatsScoreCandidats","subscribe","result","console","log","reponses65Plus","above68Percent","reponses85Plus","below40Percent","pieData","value","detectChanges","error","getAvisCountByStars","statistiques","barData","map","item","getTotalCandidatsCount","count","totalCandidates","updateChartData","getTotalQuestionCount","totalQuestions","getTotalQuestionnaireCount","totalQuestionnaires","getTotalQcmCount","totalQCMs","getTotalQuizCount","totalQuizzes","data","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\statistiques\\statistiques.component.ts","C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\statistiques\\statistiques.component.html"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Color, ScaleType } from '@swimlane/ngx-charts';\nimport { AvisClientService } from '../Services/AvisClientService';\nimport { ReponseService } from '../Services/ReponseService';\nimport { QuestionService } from '../Services/QuestionService';\nimport { QCMService } from '../Services/QCMService';\nimport { QuizService } from '../Services/QuizService';\nimport { CandidatService } from '../Services/CandidatService';\nimport { QuestionnaireService } from '../Services/Questionnaire';\n\n\n@Component({\n  selector: 'app-statistiques',\n  templateUrl: './statistiques.component.html',\n  styleUrls: ['./statistiques.component.css']\n})\nexport class StatistiquesComponent implements OnInit {\n  reponses65Plus: number = 0;\n  reponses85Plus: number = 0;\n  totalQCMs: number = 0;\n  totalQuestionnaires: number = 0;\n  totalQuizzes: number = 0;\n  totalCandidates: number = 0;\n  highScoreQuizzes: number = 0;\n  highCorrectAnswersQuestions: number = 0;\n  totalQuestions: number = 0;\n  view: [number, number] = [400, 300]; // Ajuster la taille des graphiques ici\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = true;\n  showXAxisLabel = true;\n  showYAxisLabel = true;\n  xAxisLabel = 'Étoiles';\n  yAxisLabel = 'Nombre';\n\n  // Définition du schéma de couleur\n  colorScheme: Color = {\n    name: 'custom',\n    selectable: true,\n    group: ScaleType.Ordinal,\n    domain: ['#00214F', '#F6E211', '#E7E6E6']\n  };\n  \n  data: any[] = [];\n  barData: any[] = [];\n  pieData: any[] = [];\n\n  constructor(\n    private avisClientService: AvisClientService,\n    private reponseService: ReponseService,\n    private questionService: QuestionService,\n    private questionnaireService: QuestionnaireService,\n    private qcmService: QCMService,\n    private quizService: QuizService,\n    private candidatService: CandidatService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) { }\n\n  ngOnInit(): void {\n    this.fetchStatistiques();\n    this.fetchCountReponsesByScore();\n    this.fetchStatistiquesCount();\n  }\n\n  fetchCountReponsesByScore(): void {\n    this.reponseService.getStatsScoreCandidats().subscribe(\n      (result: any) => {\n        console.log('Pie Data received:', result); \n        this.reponses65Plus = result.above68Percent; // Utilisez les noms de clés corrects en camelCase\n        this.reponses85Plus = result.below40Percent; // Utilisez les noms de clés corrects en camelCase\n  \n        this.pieData = [\n          { name: '> 68%', value: result.above68Percent },\n          { name: '< 40%', value: result.below40Percent }\n        ];\n  \n        console.log('Updated Pie Data:', this.pieData); \n        this.changeDetectorRef.detectChanges();\n      },\n      (error: any) => {\n        console.error('Error fetching count of responses by score:', error);\n      }\n    );\n  }\n  \n  \n\n  fetchStatistiques(): void {\n    this.avisClientService.getAvisCountByStars().subscribe(\n      (statistiques: any[]) => {\n        console.log('Raw Data:', statistiques);\n  \n        this.barData = statistiques.map(item => ({\n          name: `${item.name} étoile(s)`,\n          value: item.value\n        }));\n  \n        console.log('Updated Bar Data:', this.barData);\n        this.changeDetectorRef.detectChanges();\n      },\n      (error: any) => {\n        console.error('Error fetching avis count by stars:', error);\n      }\n    );\n  }\n  \n  fetchStatistiquesCount(): void {\n    this.candidatService.getTotalCandidatsCount().subscribe(count => {\n      this.totalCandidates = count;\n      this.updateChartData();\n    });\n    \n    this.questionService.getTotalQuestionCount().subscribe(count => {\n      this.totalQuestions = count;\n      this.updateChartData();\n    });\n\n    this.questionnaireService.getTotalQuestionnaireCount().subscribe((count: number) => {\n      this.totalQuestionnaires = count;\n      this.updateChartData();\n    });\n\n    this.qcmService.getTotalQcmCount().subscribe(count => {\n      this.totalQCMs = count;\n      this.updateChartData();\n    });\n\n    this.quizService.getTotalQuizCount().subscribe(count => {\n      this.totalQuizzes = count;\n      this.updateChartData();\n    });\n  }\n\n  updateChartData(): void {\n    this.data = [\n      { name: 'Total Questions', value: this.totalQuestions },\n      { name: 'Total Questionnaires', value: this.totalQuestionnaires },\n      { name: 'Total QCMs', value: this.totalQCMs },\n      { name: 'Total Quizzes', value: this.totalQuizzes },\n      { name: 'Total Candidats', value: this.totalCandidates }\n    ];\n    console.log('Updated Bar Data:', this.data); \n    this.changeDetectorRef.detectChanges();\n  }\n}\n","<div class=\"statistics-dashboard\">\n  <div class=\"chart-container\">\n    <h3 class=\"chart-title\">Distribution des Avis Candidat</h3>\n    <ngx-charts-bar-horizontal\n      [view]=\"view\"\n      [scheme]=\"colorScheme\"\n      [results]=\"barData\"\n      [gradient]=\"gradient\"\n      [legend]=\"showLegend\"\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\">\n    </ngx-charts-bar-horizontal>\n  </div>\n  \n\n  <div class=\"chart-container\">\n    <h3 class=\"chart-title\">Pourcentage de Réponses Correctes</h3>\n    <ngx-charts-pie-chart\n      *ngIf=\"pieData.length > 0\"\n      [view]=\"view\"\n      [scheme]=\"colorScheme\"\n      [results]=\"pieData\"\n      [legend]=\"showLegend\"\n      [explodeSlices]=\"true\"\n      [doughnut]=\"true\"\n      [labels]=\"true\">\n    </ngx-charts-pie-chart>\n  </div>\n\n  <div class=\"chart-container\">\n    <h3 class=\"chart-title\">Statistiques Globales</h3>\n    <ngx-charts-number-card\n      [view]=\"view\"\n      [scheme]=\"colorScheme\"\n      [results]=\"data\">\n    </ngx-charts-number-card>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}