{"ast":null,"code":"import { ScaleType } from '@swimlane/ngx-charts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/CandidatService\";\nimport * as i2 from \"../Services/QuestionService\";\nimport * as i3 from \"../Services/Questionnaire\";\nimport * as i4 from \"../Services/QuizService\";\nimport * as i5 from \"../Services/AvisClientService\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@swimlane/ngx-charts\";\nimport * as i8 from \"@angular/common\";\nexport class StatistiquesComponent {\n  constructor(candidatService, questionService, questionnaireService, quizService, avisService) {\n    this.candidatService = candidatService;\n    this.questionService = questionService;\n    this.questionnaireService = questionnaireService;\n    this.quizService = quizService;\n    this.avisService = avisService;\n    this.view = [350, 250]; // Taille des graphiques\n    // options\n    this.showXAxis = true;\n    this.showYAxis = true;\n    this.gradient = false;\n    this.showLegend = true;\n    this.showXAxisLabel = true;\n    this.xAxisLabel = '';\n    this.showYAxisLabel = true;\n    this.yAxisLabel = '';\n    this.colorScheme = {\n      name: 'custom',\n      selectable: true,\n      group: ScaleType.Ordinal,\n      domain: ['#0000FF', '#FFFF00', '#808080'] // Bleu, Jaune, Gris\n    };\n\n    this.barChartData = [];\n  }\n  ngOnInit() {\n    this.loadChartData();\n  }\n  loadChartData() {\n    this.candidatService.getTotalCandidatsCount().subscribe(count => {\n      this.totalCandidatsCount = count;\n      this.updateBarChartData();\n      console.log(this.totalCandidatsCount);\n    });\n    this.questionService.getTotalQuestionCount().subscribe(count => {\n      this.totalQuestionsCount = count;\n      this.updateBarChartData();\n      console.log(this.totalQuestionsCount);\n    });\n    this.questionnaireService.getTotalQuestionnaireCount().subscribe(count => {\n      this.totalQuestionnairesCount = count;\n      this.updateBarChartData();\n      console.log(this.totalQuestionnairesCount);\n    });\n    this.quizService.getTotalQuizCount().subscribe(count => {\n      this.totalQuizzesCount = count;\n      this.updateBarChartData();\n    });\n  }\n  updateBarChartData() {\n    this.barChartData = [{\n      name: 'Candidats',\n      series: [{\n        name: 'Total',\n        value: this.totalCandidatsCount\n      }]\n    }, {\n      name: 'Questions',\n      series: [{\n        name: 'Total',\n        value: this.totalQuestionsCount\n      }]\n    }, {\n      name: 'Questionnaires',\n      series: [{\n        name: 'Total',\n        value: this.totalQuestionnairesCount\n      }]\n    }, {\n      name: 'Quizzes',\n      series: [{\n        name: 'Total',\n        value: this.totalQuizzesCount\n      }]\n    }];\n  }\n  static #_ = this.ɵfac = function StatistiquesComponent_Factory(t) {\n    return new (t || StatistiquesComponent)(i0.ɵɵdirectiveInject(i1.CandidatService), i0.ɵɵdirectiveInject(i2.QuestionService), i0.ɵɵdirectiveInject(i3.QuestionnaireService), i0.ɵɵdirectiveInject(i4.QuizService), i0.ɵɵdirectiveInject(i5.AvisClientService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatistiquesComponent,\n    selectors: [[\"app-statistiques\"]],\n    decls: 33,\n    vars: 51,\n    consts: [[1, \"statistics-container\"], [1, \"mat-card-title-custom\"], [3, \"view\", \"results\", \"legend\", \"xAxis\", \"yAxis\", \"xAxisLabel\", \"yAxisLabel\", \"scheme\"], [\"xAxisLabel\", \"Stars\", \"yAxisLabel\", \"Number of Reviews\", 3, \"results\", \"gradient\", \"xAxis\", \"yAxis\", \"legend\", \"showXAxisLabel\", \"showYAxisLabel\"], [1, \"chart-container\"], [3, \"view\", \"results\", \"gradient\", \"xAxis\", \"yAxis\", \"legend\", \"showXAxisLabel\", \"showYAxisLabel\", \"xAxisLabel\", \"yAxisLabel\", \"scheme\"], [3, \"view\", \"results\", \"legend\", \"scheme\"], [3, \"view\", \"scheme\", \"results\", \"gradient\", \"xAxis\", \"yAxis\", \"legend\", \"showXAxisLabel\", \"showYAxisLabel\", \"xAxisLabel\", \"yAxisLabel\"]],\n    template: function StatistiquesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\")(2, \"mat-card-title\", 1);\n        i0.ɵɵtext(3, \"Statistiques G\\u00E9n\\u00E9rales\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-content\");\n        i0.ɵɵelement(5, \"ngx-charts-line-chart\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-card\")(7, \"mat-card-title\", 1);\n        i0.ɵɵtext(8, \"Avis des Candidats\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-card-content\");\n        i0.ɵɵelement(10, \"ngx-charts-bar-vertical\", 3);\n        i0.ɵɵpipe(11, \"async\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(12, \"div\", 4);\n        i0.ɵɵelementStart(13, \"mat-card\")(14, \"mat-card-title\");\n        i0.ɵɵtext(15, \"Nombre de Candidats par Niveau\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-card-content\");\n        i0.ɵɵelement(17, \"ngx-charts-bar-vertical\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"mat-card\")(19, \"mat-card-title\");\n        i0.ɵɵtext(20, \"R\\u00E9partition des Scores\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-card-content\");\n        i0.ɵɵelement(22, \"ngx-charts-pie-chart\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"mat-card\")(24, \"mat-card-title\");\n        i0.ɵɵtext(25, \"\\u00C9volution des Candidats par Niveau\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-card-content\");\n        i0.ɵɵelement(27, \"ngx-charts-area-chart\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"mat-card\")(29, \"mat-card-title\");\n        i0.ɵɵtext(30, \"Comparaison des Entit\\u00E9s\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-card-content\");\n        i0.ɵɵelement(32, \"ngx-charts-bar-horizontal\", 7);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"view\", ctx.view)(\"results\", ctx.barChartData)(\"legend\", ctx.showLegend)(\"xAxis\", ctx.showXAxis)(\"yAxis\", ctx.showYAxis)(\"xAxisLabel\", ctx.xAxisLabel)(\"yAxisLabel\", ctx.yAxisLabel)(\"scheme\", ctx.colorScheme);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"results\", i0.ɵɵpipeBind1(11, 49, ctx.avisCounts$))(\"gradient\", false)(\"xAxis\", true)(\"yAxis\", true)(\"legend\", true)(\"showXAxisLabel\", true)(\"showYAxisLabel\", true);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"view\", ctx.view)(\"results\", ctx.barChartData)(\"gradient\", ctx.gradient)(\"xAxis\", ctx.showXAxis)(\"yAxis\", ctx.showYAxis)(\"legend\", ctx.showLegend)(\"showXAxisLabel\", ctx.showXAxisLabel)(\"showYAxisLabel\", ctx.showYAxisLabel)(\"xAxisLabel\", ctx.xAxisLabel)(\"yAxisLabel\", ctx.yAxisLabel)(\"scheme\", ctx.colorScheme);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"view\", ctx.view)(\"results\", ctx.pieChartData)(\"legend\", ctx.showLegend)(\"scheme\", ctx.colorScheme);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"view\", ctx.view)(\"results\", ctx.barChartData)(\"legend\", ctx.showLegend)(\"xAxis\", ctx.showXAxis)(\"yAxis\", ctx.showYAxis)(\"xAxisLabel\", ctx.xAxisLabel)(\"yAxisLabel\", ctx.yAxisLabel)(\"scheme\", ctx.colorScheme);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"view\", ctx.view)(\"scheme\", ctx.colorScheme)(\"results\", ctx.barChartData)(\"gradient\", ctx.gradient)(\"xAxis\", ctx.showXAxis)(\"yAxis\", ctx.showYAxis)(\"legend\", ctx.showLegend)(\"showXAxisLabel\", ctx.showXAxisLabel)(\"showYAxisLabel\", ctx.showYAxisLabel)(\"xAxisLabel\", ctx.xAxisLabel)(\"yAxisLabel\", ctx.yAxisLabel);\n      }\n    },\n    dependencies: [i6.MatCard, i6.MatCardContent, i6.MatCardTitle, i7.AreaChartComponent, i7.BarHorizontalComponent, i7.BarVerticalComponent, i7.LineChartComponent, i7.PieChartComponent, i8.AsyncPipe],\n    styles: [\".statistics-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  justify-content: space-around;\\r\\n}\\r\\n.mat-card-title-custom[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n  font-size: 16px; \\r\\n}\\r\\n\\r\\nmat-card[_ngcontent-%COMP%] {\\r\\n  width: 45%;\\r\\n  margin: 10px;\\r\\n}\\r\\n\\r\\ncanvas[_ngcontent-%COMP%] {\\r\\n  width: 100% !important;\\r\\n  height: 250px !important;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc3RhdGlzdGlxdWVzL3N0YXRpc3RpcXVlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZiw2QkFBNkI7QUFDL0I7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixlQUFlLEVBQUUsbUNBQW1DO0FBQ3REOztBQUVBO0VBQ0UsVUFBVTtFQUNWLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0Qix3QkFBd0I7QUFDMUIiLCJzb3VyY2VzQ29udGVudCI6WyIuc3RhdGlzdGljcy1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcbi5tYXQtY2FyZC10aXRsZS1jdXN0b20ge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE2cHg7IC8qIFRhaWxsZSBkZSBwb2xpY2UgcGVyc29ubmFsaXPDg8KpZSAqL1xyXG59XHJcblxyXG5tYXQtY2FyZCB7XHJcbiAgd2lkdGg6IDQ1JTtcclxuICBtYXJnaW46IDEwcHg7XHJcbn1cclxuXHJcbmNhbnZhcyB7XHJcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcclxuICBoZWlnaHQ6IDI1MHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAOA,SAASA,SAAS,QAAe,sBAAsB;;;;;;;;;;AAQvD,OAAM,MAAOC,qBAAqB;EA6BhCC,YAAoBC,eAAgC,EAC1CC,eAAgC,EAChCC,oBAA0C,EAC1CC,WAAwB,EACxBC,WAA8B;IAJpB,oBAAe,GAAfJ,eAAe;IACzB,oBAAe,GAAfC,eAAe;IACf,yBAAoB,GAApBC,oBAAoB;IACpB,gBAAW,GAAXC,WAAW;IACX,gBAAW,GAAXC,WAAW;IAvBrB,SAAI,GAAqB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAErC;IACA,cAAS,GAAY,IAAI;IACzB,cAAS,GAAY,IAAI;IACzB,aAAQ,GAAY,KAAK;IACzB,eAAU,GAAY,IAAI;IAC1B,mBAAc,GAAY,IAAI;IAC9B,eAAU,GAAW,EAAE;IACvB,mBAAc,GAAY,IAAI;IAC9B,eAAU,GAAW,EAAE;IAEvB,gBAAW,GAAU;MACnBC,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAEV,SAAS,CAACW,OAAO;MACxBC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;KAC3C;;IAOE,IAAI,CAACC,YAAY,GAAG,EAAE;EACzB;EAEAC,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAa;IACX,IAAI,CAACZ,eAAe,CAACa,sBAAsB,EAAE,CAACC,SAAS,CAAEC,KAAa,IAAI;MACxE,IAAI,CAACC,mBAAmB,GAAGD,KAAK;MAChC,IAAI,CAACE,kBAAkB,EAAE;MACzBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,mBAAmB,CAAE;IACxC,CAAC,CAAC;IAEF,IAAI,CAACf,eAAe,CAACmB,qBAAqB,EAAE,CAACN,SAAS,CAAEC,KAAa,IAAI;MACvE,IAAI,CAACM,mBAAmB,GAAGN,KAAK;MAChC,IAAI,CAACE,kBAAkB,EAAE;MACzBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,mBAAmB,CAAE;IACxC,CAAC,CAAC;IAEF,IAAI,CAACnB,oBAAoB,CAACoB,0BAA0B,EAAE,CAACR,SAAS,CAAEC,KAAa,IAAI;MACjF,IAAI,CAACQ,wBAAwB,GAAGR,KAAK;MACrC,IAAI,CAACE,kBAAkB,EAAE;MACzBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACI,wBAAwB,CAAE;IAC7C,CAAC,CAAC;IAEF,IAAI,CAACpB,WAAW,CAACqB,iBAAiB,EAAE,CAACV,SAAS,CAAEC,KAAa,IAAI;MAC/D,IAAI,CAACU,iBAAiB,GAAGV,KAAK;MAC9B,IAAI,CAACE,kBAAkB,EAAE;IAC3B,CAAC,CAAC;EACJ;EAEAA,kBAAkB;IAChB,IAAI,CAACP,YAAY,GAAG,CAClB;MACEL,IAAI,EAAE,WAAW;MACjBqB,MAAM,EAAE,CACN;QAAErB,IAAI,EAAE,OAAO;QAAEsB,KAAK,EAAE,IAAI,CAACX;MAAmB,CAAE;KAErD,EACD;MACEX,IAAI,EAAE,WAAW;MACjBqB,MAAM,EAAE,CACN;QAAErB,IAAI,EAAE,OAAO;QAAEsB,KAAK,EAAE,IAAI,CAACN;MAAmB,CAAE;KAErD,EACD;MACEhB,IAAI,EAAE,gBAAgB;MACtBqB,MAAM,EAAE,CACN;QAAErB,IAAI,EAAE,OAAO;QAAEsB,KAAK,EAAE,IAAI,CAACJ;MAAwB,CAAE;KAE1D,EACD;MACElB,IAAI,EAAE,SAAS;MACfqB,MAAM,EAAE,CACN;QAAErB,IAAI,EAAE,OAAO;QAAEsB,KAAK,EAAE,IAAI,CAACF;MAAiB,CAAE;KAEnD,CACF;EACH;EAAC;qBA7FU3B,qBAAqB;EAAA;EAAA;UAArBA,qBAAqB;IAAA8B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCflCC,8BAAkC;QAGgBA,gDAAsB;QAAAA,iBAAiB;QACrFA,wCAAmB;QACjBA,2CASwB;QAC1BA,iBAAmB;QAIrBA,gCAAU;QACsCA,kCAAkB;QAAAA,iBAAiB;QACjFA,wCAAmB;QACjBA,8CAWwB;;QAC1BA,iBAAmB;QAGrBA,0BAEM;QAMNA,iCAAU;QACQA,+CAA8B;QAAAA,iBAAiB;QAC/DA,yCAAkB;QAChBA,8CAY0B;QAC5BA,iBAAmB;QAGrBA,iCAAU;QACQA,4CAAsB;QAAAA,iBAAiB;QACvDA,yCAAkB;QAChBA,2CAKuB;QACzBA,iBAAmB;QAKrBA,iCAAU;QACQA,wDAAkC;QAAAA,iBAAiB;QACnEA,yCAAkB;QAChBA,4CASwB;QAC1BA,iBAAmB;QAKrBA,iCAAU;QACQA,6CAAuB;QAAAA,iBAAiB;QACxDA,yCAAkB;QAChBA,gDAY0B;QAC5BA,iBAAmB;;;QA1GfA,eAAa;QAAbA,+BAAa;QAkBfA,eAA+B;QAA/BA,iEAA+B;QAyB7BA,eAAa;QAAbA,+BAAa;QAmBbA,eAAa;QAAbA,+BAAa;QAcbA,eAAa;QAAbA,+BAAa;QAkBfA,eAAa;QAAbA,+BAAa","names":["ScaleType","StatistiquesComponent","constructor","candidatService","questionService","questionnaireService","quizService","avisService","name","selectable","group","Ordinal","domain","barChartData","ngOnInit","loadChartData","getTotalCandidatsCount","subscribe","count","totalCandidatsCount","updateBarChartData","console","log","getTotalQuestionCount","totalQuestionsCount","getTotalQuestionnaireCount","totalQuestionnairesCount","getTotalQuizCount","totalQuizzesCount","series","value","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\statistiques\\statistiques.component.ts","C:\\Users\\shehn\\Music\\Andex PFE\\FrontEnd\\src\\app\\statistiques\\statistiques.component.html"],"sourcesContent":["import {  Inject } from '@angular/core';\nimport { CandidatService } from '../Services/CandidatService';\nimport { QuestionService } from '../Services/QuestionService';\nimport { QuestionnaireService } from '../Services/Questionnaire';\nimport { QuizService } from '../Services/QuizService';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { Component, OnInit } from '@angular/core';\nimport { ScaleType, Color } from '@swimlane/ngx-charts';\nimport { AvisClientService } from '../Services/AvisClientService';\n@Component({\n  selector: 'app-statistiques',\n  templateUrl: './statistiques.component.html',\n  styleUrls: ['./statistiques.component.css']\n})\n\nexport class StatistiquesComponent implements OnInit {\n  barChartData: any[];\n  pieChartData!: any[];\n  lineChartData!: any[];\n  areaChartData!: any[];\n  totalCandidatsCount!: number;\n  totalQuestionsCount!: number;\n  totalQuestionnairesCount!: number;\n  totalQuizzesCount!: number;\n\n  view: [number, number] = [350, 250]; // Taille des graphiques\n\n  // options\n  showXAxis: boolean = true;\n  showYAxis: boolean = true;\n  gradient: boolean = false;\n  showLegend: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = '';\n  showYAxisLabel: boolean = true;\n  yAxisLabel: string = '';\n\n  colorScheme: Color = {\n    name: 'custom',\n    selectable: true,\n    group: ScaleType.Ordinal,\n    domain: ['#0000FF', '#FFFF00', '#808080'] // Bleu, Jaune, Gris\n  };\n\n  constructor(private candidatService: CandidatService,\n    private questionService: QuestionService,\n    private questionnaireService: QuestionnaireService,\n    private quizService: QuizService,\n    private avisService: AvisClientService\n  ) {this.barChartData = [];\n  }\n\n  ngOnInit(): void {\n    this.loadChartData();\n  }\n\n  loadChartData() {\n    this.candidatService.getTotalCandidatsCount().subscribe((count: number) => {\n      this.totalCandidatsCount = count;\n      this.updateBarChartData();\n      console.log(this.totalCandidatsCount );\n    });\n\n    this.questionService.getTotalQuestionCount().subscribe((count: number) => {\n      this.totalQuestionsCount = count;\n      this.updateBarChartData();\n      console.log(this.totalQuestionsCount );\n    });\n\n    this.questionnaireService.getTotalQuestionnaireCount().subscribe((count: number) => {\n      this.totalQuestionnairesCount = count;\n      this.updateBarChartData();\n      console.log(this.totalQuestionnairesCount );\n    });\n\n    this.quizService.getTotalQuizCount().subscribe((count: number) => {\n      this.totalQuizzesCount = count;\n      this.updateBarChartData();\n    });\n  }\n\n  updateBarChartData() {\n    this.barChartData = [\n      {\n        name: 'Candidats',\n        series: [\n          { name: 'Total', value: this.totalCandidatsCount }\n        ]\n      },\n      {\n        name: 'Questions',\n        series: [\n          { name: 'Total', value: this.totalQuestionsCount }\n        ]\n      },\n      {\n        name: 'Questionnaires',\n        series: [\n          { name: 'Total', value: this.totalQuestionnairesCount }\n        ]\n      },\n      {\n        name: 'Quizzes',\n        series: [\n          { name: 'Total', value: this.totalQuizzesCount }\n        ]\n      }\n    ];\n  }\n}","<div class=\"statistics-container\">\n \n  <mat-card>\n    <mat-card-title class=\"mat-card-title-custom\">Statistiques Générales</mat-card-title>\n    <mat-card-content >\n      <ngx-charts-line-chart\n        [view]=\"view\"\n        [results]=\"barChartData\"\n        [legend]=\"showLegend\"\n        [xAxis]=\"showXAxis\"\n        [yAxis]=\"showYAxis\"\n        [xAxisLabel]=\"xAxisLabel\"\n        [yAxisLabel]=\"yAxisLabel\"\n        [scheme]=\"colorScheme\">\n      </ngx-charts-line-chart>\n    </mat-card-content>\n  </mat-card>\n\n\n  <mat-card>\n    <mat-card-title class=\"mat-card-title-custom\">Avis des Candidats</mat-card-title>\n    <mat-card-content >\n      <ngx-charts-bar-vertical\n      \n      [results]=\"avisCounts$ | async\"\n      [gradient]=\"false\"\n      [xAxis]=\"true\"\n      [yAxis]=\"true\"\n      [legend]=\"true\"\n      [showXAxisLabel]=\"true\"\n      [showYAxisLabel]=\"true\"\n      xAxisLabel=\"Stars\"\n      yAxisLabel=\"Number of Reviews\">\n    </ngx-charts-bar-vertical>\n    </mat-card-content>\n  </mat-card>\n\n  <div class=\"chart-container\">\n    \n  </div>\n  \n\n\n\n\n  <mat-card>\n    <mat-card-title>Nombre de Candidats par Niveau</mat-card-title>\n    <mat-card-content>\n      <ngx-charts-bar-vertical\n        [view]=\"view\"\n        [results]=\"barChartData\"\n        [gradient]=\"gradient\"\n        [xAxis]=\"showXAxis\"\n        [yAxis]=\"showYAxis\"\n        [legend]=\"showLegend\"\n        [showXAxisLabel]=\"showXAxisLabel\"\n        [showYAxisLabel]=\"showYAxisLabel\"\n        [xAxisLabel]=\"xAxisLabel\"\n        [yAxisLabel]=\"yAxisLabel\"\n        [scheme]=\"colorScheme\">\n      </ngx-charts-bar-vertical>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card>\n    <mat-card-title>Répartition des Scores</mat-card-title>\n    <mat-card-content>\n      <ngx-charts-pie-chart\n        [view]=\"view\"\n        [results]=\"pieChartData\"\n        [legend]=\"showLegend\"\n        [scheme]=\"colorScheme\">\n      </ngx-charts-pie-chart>\n    </mat-card-content>\n  </mat-card>\n\n  \n\n  <mat-card>\n    <mat-card-title>Évolution des Candidats par Niveau</mat-card-title>\n    <mat-card-content>\n      <ngx-charts-area-chart\n        [view]=\"view\"\n        [results]=\"barChartData\"\n        [legend]=\"showLegend\"\n        [xAxis]=\"showXAxis\"\n        [yAxis]=\"showYAxis\"\n        [xAxisLabel]=\"xAxisLabel\"\n        [yAxisLabel]=\"yAxisLabel\"\n        [scheme]=\"colorScheme\">\n      </ngx-charts-area-chart>\n    </mat-card-content>\n  </mat-card>\n\n\n\n  <mat-card>\n    <mat-card-title>Comparaison des Entités</mat-card-title>\n    <mat-card-content>\n      <ngx-charts-bar-horizontal\n      [view]=\"view\"\n      [scheme]=\"colorScheme\"\n      [results]=\"barChartData\"\n      [gradient]=\"gradient\"\n      [xAxis]=\"showXAxis\"\n      [yAxis]=\"showYAxis\"\n      [legend]=\"showLegend\"\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\">\n    </ngx-charts-bar-horizontal>\n    </mat-card-content>\n  </mat-card>\n  </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}